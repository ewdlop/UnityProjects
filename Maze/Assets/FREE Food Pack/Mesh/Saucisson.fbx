ightFkKneePickerButton"], edit = True, bgc = self.blue)

            cmds.button(self.widgets[character + "_leftFkAnklePickerButton"], edit = True, bgc = self.blue)

            cmds.button(self.widgets[character + "_rightFkAnklePickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":fk_ball_l_anim"):
                cmds.button(self.widgets[character + "_leftFkBallPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":fk_ball_r_anim"):
                cmds.button(self.widgets[character + "_rightFkBallPickerButton"], edit = True, bgc = self.blue)

            cmds.button(self.widgets[character + "_leftIkFootPickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_rightIkFootPickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_leftIkHeelPickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_rightIkHeelPickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_leftIkToeWigglePickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_rightIkToeWigglePickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_leftIkToePickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_rightIkToePickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_masterPickerButton"], edit = True, bgc = self.orange)

            cmds.button(self.widgets[character + "_offsetPickerButton"], edit = True, bgc = self.blue)

            cmds.button(self.widgets[character + "_rootPickerButton"], edit = True, bgc = self.purple)

            cmds.button(self.widgets[character + "_headGroupPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_leftArmGroupPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_rightArmGroupPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_spineGroupPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_leftLegGroupPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_rightLegGroupPickerButton"], edit = True, bgc = self.green)

            if cmds.objExists(character + ":upperarm_l_twist_anim"):
                cmds.button(self.widgets[character + "_leftArmRollPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":upperarm_l_twist_2_anim"):
                cmds.button(self.widgets[character + "_leftArmRoll2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":upperarm_l_twist_3_anim"):
                cmds.button(self.widgets[character + "_leftArmRoll3PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":upperarm_r_twist_anim"):
                cmds.button(self.widgets[character + "_rightArmRollPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":upperarm_r_twist_2_anim"):
                cmds.button(self.widgets[character + "_rightArmRoll2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":upperarm_r_twist_3_anim"):
                cmds.button(self.widgets[character + "_rightArmRoll3PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":lowerarm_l_twist_anim"):
                cmds.button(self.widgets[character + "_leftForeTwistPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":lowerarm_l_twist2_anim"):
                cmds.button(self.widgets[character + "_leftForeTwist2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":lowerarm_l_twist3_anim"):
                cmds.button(self.widgets[character + "_leftForeTwist3PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":lowerarm_r_twist_anim"):
                cmds.button(self.widgets[character + "_rightForeTwistPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":lowerarm_r_twist2_anim"):
                cmds.button(self.widgets[character + "_rightForeTwist2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":lowerarm_r_twist3_anim"):
                cmds.button(self.widgets[character + "_rightForeTwist3PickerButton"], edit = True, bgc = self.purple)


            if cmds.objExists(character + ":l_thigh_twist_01_anim"):
                cmds.button(self.widgets[character + "_leftThighTwistPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":l_thigh_twist_02_anim"):
                cmds.button(self.widgets[character + "_leftThighTwist2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":l_thigh_twist_03_anim"):
                cmds.button(self.widgets[character + "_leftThighTwist3PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":r_thigh_twist_01_anim"):
                cmds.button(self.widgets[character + "_rightThighTwistPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":r_thigh_twist_02_anim"):
                cmds.button(self.widgets[character + "_rightThighTwist2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":r_thigh_twist_03_anim"):
                cmds.button(self.widgets[character + "_rightThighTwist3PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":calf_l_twist_anim"):
                cmds.button(self.widgets[character + "_leftCalfTwistPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":calf_l_twist2_anim"):
                cmds.button(self.widgets[character + "_leftCalfTwist2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":calf_l_twist3_anim"):
                cmds.button(self.widgets[character + "_leftCalfTwist3PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":calf_r_twist_anim"):
                cmds.button(self.widgets[character + "_rightCalfTwistPickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":calf_r_twist2_anim"):
                cmds.button(self.widgets[character + "_rightCalfTwist2PickerButton"], edit = True, bgc = self.purple)

            if cmds.objExists(character + ":calf_r_twist3_anim"):
                cmds.button(self.widgets[character + "_rightCalfTwist3PickerButton"], edit = True, bgc = self.purple)





            if cmds.objExists(character + ":pinky_metacarpal_ctrl_l"):
                cmds.button(self.widgets[character + "_leftPinkyMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":pinky_finger_fk_ctrl_1_l"):
                cmds.button(self.widgets[character + "_leftPinky1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":pinky_finger_fk_ctrl_2_l"):
                cmds.button(self.widgets[character + "_leftPinky2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":pinky_finger_fk_ctrl_3_l"):
                cmds.button(self.widgets[character + "_leftPinky3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":ring_metacarpal_ctrl_l"):
                cmds.button(self.widgets[character + "_leftRingMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":ring_finger_fk_ctrl_1_l"):
                cmds.button(self.widgets[character + "_leftRing1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":ring_finger_fk_ctrl_2_l"):
                cmds.button(self.widgets[character + "_leftRing2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":ring_finger_fk_ctrl_3_l"):
                cmds.button(self.widgets[character + "_leftRing3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":middle_metacarpal_ctrl_l"):
                cmds.button(self.widgets[character + "_leftMiddleMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":middle_finger_fk_ctrl_1_l"):
                cmds.button(self.widgets[character + "_leftMiddle1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":middle_finger_fk_ctrl_2_l"):
                cmds.button(self.widgets[character + "_leftMiddle2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":middle_finger_fk_ctrl_3_l"):
                cmds.button(self.widgets[character + "_leftMiddle3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":index_metacarpal_ctrl_l"):
                cmds.button(self.widgets[character + "_leftIndexMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":index_finger_fk_ctrl_1_l"):
                cmds.button(self.widgets[character + "_leftIndex1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":index_finger_fk_ctrl_2_l"):
                cmds.button(self.widgets[character + "_leftIndex2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":index_finger_fk_ctrl_3_l"):
                cmds.button(self.widgets[character + "_leftIndex3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":thumb_finger_fk_ctrl_1_l"):
                cmds.button(self.widgets[character + "_leftThumb1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":thumb_finger_fk_ctrl_2_l"):
                cmds.button(self.widgets[character + "_leftThumb2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":thumb_finger_fk_ctrl_3_l"):
                cmds.button(self.widgets[character + "_leftThumb3PickerButton"], edit = True, bgc = self.blue)


            cmds.button(self.widgets[character + "_leftMetaRowPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_leftKnuckle1RowPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_leftKnuckle2RowPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_leftKnuckle3RowPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_leftIndexColumnPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_leftMiddleColumnPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_leftRingColumnPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_leftPinkyColumnPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_leftThumbColumnPickerButton"], edit = True, bgc = self.green)



            createLeftIKRow = False
            if cmds.objExists(character + ":index_l_ik_anim"):
                cmds.button(self.widgets[character + "_leftIndexFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_leftIndexIkPvPickerButton"], edit = True, bgc = self.orange)
                createLeftIKRow = True

            if cmds.objExists(character + ":middle_l_ik_anim"):
                cmds.button(self.widgets[character + "_leftMiddleFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_leftMiddleIkPvPickerButton"], edit = True, bgc = self.orange)
                createLeftIKRow = True

            if cmds.objExists(character + ":ring_l_ik_anim"):
                cmds.button(self.widgets[character + "_leftRingFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_leftRingIkPvPickerButton"], edit = True, bgc = self.orange)
                createLeftIKRow = True

            if cmds.objExists(character + ":pinky_l_ik_anim"):
                cmds.button(self.widgets[character + "_leftPinkyFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_leftPinkyIkPvPickerButton"], edit = True, bgc = self.orange)
                createLeftIKRow = True

            if cmds.objExists(character + ":thumb_l_ik_anim"):
                cmds.button(self.widgets[character + "_leftThumbFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_leftThumbIkPvPickerButton"], edit = True, bgc = self.orange)
                createLeftIKRow = True

            if createLeftIKRow:
                cmds.button(self.widgets[character + "_leftIkFingersRowPickerButton"], edit = True, bgc = self.green)
                cmds.button(self.widgets[character + "_leftIkFingersPvsPickerButton"], edit = True, bgc = self.green)


            if cmds.objExists(character + ":l_global_ik_anim"):
                cmds.button(self.widgets[character + "_leftIkGlobalCtrlPickerButton"], edit = True, bgc = self.orange)



            if cmds.objExists(character + ":pinky_metacarpal_ctrl_r"):
                cmds.button(self.widgets[character + "_rightPinkyMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":pinky_finger_fk_ctrl_1_r"):
                cmds.button(self.widgets[character + "_rightPinky1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":pinky_finger_fk_ctrl_2_r"):
                cmds.button(self.widgets[character + "_rightPinky2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":pinky_finger_fk_ctrl_3_r"):
                cmds.button(self.widgets[character + "_rightPinky3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":ring_metacarpal_ctrl_r"):
                cmds.button(self.widgets[character + "_rightRingMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":ring_finger_fk_ctrl_1_r"):
                cmds.button(self.widgets[character + "_rightRing1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":ring_finger_fk_ctrl_2_r"):
                cmds.button(self.widgets[character + "_rightRing2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":ring_finger_fk_ctrl_3_r"):
                cmds.button(self.widgets[character + "_rightRing3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":middle_metacarpal_ctrl_r"):
                cmds.button(self.widgets[character + "_rightMiddleMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":middle_finger_fk_ctrl_1_r"):
                cmds.button(self.widgets[character + "_rightMiddle1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":middle_finger_fk_ctrl_2_r"):
                cmds.button(self.widgets[character + "_rightMiddle2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":middle_finger_fk_ctrl_3_r"):
                cmds.button(self.widgets[character + "_rightMiddle3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":index_metacarpal_ctrl_r"):
                cmds.button(self.widgets[character + "_rightIndexMetacarpalPickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":index_finger_fk_ctrl_1_r"):
                cmds.button(self.widgets[character + "_rightIndex1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":index_finger_fk_ctrl_2_r"):
                cmds.button(self.widgets[character + "_rightIndex2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":index_finger_fk_ctrl_3_r"):
                cmds.button(self.widgets[character + "_rightIndex3PickerButton"], edit = True, bgc = self.blue)


            if cmds.objExists(character + ":thumb_finger_fk_ctrl_1_r"):
                cmds.button(self.widgets[character + "_rightThumb1PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":thumb_finger_fk_ctrl_2_r"):
                cmds.button(self.widgets[character + "_rightThumb2PickerButton"], edit = True, bgc = self.blue)

            if cmds.objExists(character + ":thumb_finger_fk_ctrl_3_r"):
                cmds.button(self.widgets[character + "_rightThumb3PickerButton"], edit = True, bgc = self.blue)



            cmds.button(self.widgets[character + "_rightMetaRowPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_rightKnuckle1RowPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_rightKnuckle2RowPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_rightKnuckle3RowPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_rightIndexColumnPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_rightMiddleColumnPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_rightRingColumnPickerButton"], edit = True, bgc = self.green)
            cmds.button(self.widgets[character + "_rightPinkyColumnPickerButton"], edit = True, bgc = self.green)

            cmds.button(self.widgets[character + "_rightThumbColumnPickerButton"], edit = True, bgc = self.green)


            createRightIKRow = False
            if cmds.objExists(character + ":index_r_ik_anim"):
                cmds.button(self.widgets[character + "_rightIndexFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_rightIndexIkPvPickerButton"], edit = True, bgc = self.orange)
                createRightIKRow = True

            if cmds.objExists(character + ":middle_r_ik_anim"):
                cmds.button(self.widgets[character + "_rightMiddleFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_rightMiddleIkPvPickerButton"], edit = True, bgc = self.orange)
                createRightIKRow = True

            if cmds.objExists(character + ":ring_r_ik_anim"):
                cmds.button(self.widgets[character + "_rightRingFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_rightRingIkPvPickerButton"], edit = True, bgc = self.orange)
                createRightIKRow = True

            if cmds.objExists(character + ":pinky_r_ik_anim"):
                cmds.button(self.widgets[character + "_rightPinkyFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_rightPinkyIkPvPickerButton"], edit = True, bgc = self.orange)
                createRightIKRow = True

            if cmds.objExists(character + ":thumb_r_ik_anim"):
                cmds.button(self.widgets[character + "_rightThumbFingerIKPickerButton"], edit = True, bgc = self.orange)
                cmds.button(self.widgets[character + "_rightThumbIkPvPickerButton"], edit = True, bgc = self.orange)
                createRightIKRow = True

            if createRightIKRow:
                cmds.button(self.widgets[character + "_rightIkFingersRowPickerButton"], edit = True, bgc = self.green)
                cmds.button(self.widgets[character + "_rightIkFingersPvsPickerButton"], edit = True, bgc = self.green)


            if cmds.objExists(character + ":r_global_ik_anim"):
                cmds.button(self.widgets[character + "_rightIkGlobalCtrlPickerButton"], edit = True, bgc = self.orange)


    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    def collapseCommand(self, name, layout, *args):

        if layout == "Body":
            cmds.frameLayout(self.widgets[name + "_bodyFrame"], edit = True, h = 30)


        if layout == "Fingers":
            cmds.frameLayout(self.widgets[name + "_fingersFrame"], edit = True, h = 30)


        if layout == "Toes":
            cmds.frameLayout(self.widgets[name + "_toesFrame"], edit = True, h = 30)


        if layout == "Layers":
            cmds.frameLayout(self.widgets[name + "_layersFrame"], edit = True, h = 30)

        if layout == "LeftArmSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_leftArmFrame"], edit = True, h = 30)

        if layout == "RightArmSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_rightArmFrame"], edit = True, h = 30)  

        if layout == "LeftLegSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_leftLegFrame"], edit = True, h = 30)

        if layout == "RightLegSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_rightLegFrame"], edit = True, h = 30) 

        if layout == "SpineSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_spineFrame"], edit = True, h = 30) 

        if layout == "HeadSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_headFrame"], edit = True, h = 30) 

        if layout == "NeckSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_neckFrame"], edit = True, h = 30) 

        if layout == "AutoControlsSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_autoControlsFrame"], edit = True, h = 30)

    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    def expandCommand(self, name, layout, height = None,  *args):

        if layout == "Body":
            cmds.frameLayout(self.widgets[name + "_bodyFrame"], edit = True, h = 470)


        if layout == "Fingers":
            cmds.frameLayout(self.widgets[name + "_fingersFrame"], edit = True, h = 205)


        if layout == "Toes":
            cmds.frameLayout(self.widgets[name + "_toesFrame"], edit = True, h = 220)

        if layout == "Layers":
            cmds.frameLayout(self.widgets[name + "_layersFrame"], edit = True, h = 300)

        if layout == "LeftArmSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_leftArmFrame"], edit = True, h = 330)

        if layout == "RightArmSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_rightArmFrame"], edit = True, h = 330) 

        if layout == "LeftLegSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_leftLegFrame"], edit = True, h = 280)

        if layout == "RightLegSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_rightLegFrame"], edit = True, h = 280) 

        if layout == "SpineSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_spineFrame"], edit = True, h = 150) 

        if layout == "HeadSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_headFrame"], edit = True, h = 100) 

        if layout == "NeckSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_neckFrame"], edit = True, h = 100) 

        if layout == "AutoControlsSettings":
            cmds.frameLayout(self.widgets[name + "_rigSettings_autoControlsFrame"], edit = True, h = 150) 


    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    def selectRigSettings_Specific(self, limb, *args):
        character = cmds.symbolButton(self.widgets["activeCharacterThumb"], q = True, ann = True)


        if limb == "leftArm":
            cmds.select(character + ":Rig_Settings")
            cmds.select(character + ":ik_wrist_l_anim", add = True)

        if limb == "rightArm":
            cmds.select(character + ":Rig_Settings")
            cmds.select(character + ":ik_wrist_r_anim", add = True)

        if limb == "leftLeg":
            cmds.select(character + ":Rig_Settings")
            cmds.select(character + ":ik_foot_anim_l", add = True)

        if limb == "rightLeg":
            cmds.select(character + ":Rig_Settings")
            cmds.select(character + ":ik_foot_anim_r", add = True)


        if limb == "spine":
            cmds.select(character + ":Rig_Settings")

            if cmds.objExists(character + ":chest_ik_anim"):
                cmds.select(character + ":chest_ik_anim", add = True)

        if limb == "head":
            cmds.select(character + ":head_fk_anim")

        if limb == "neck":
            cmds.select(character + ":neck_01_fk_anim")

        if limb == "auto":
            cmds.select(character + ":clavicle_l_anim")
            cmds.select(character + ":clavicle_r_anim", add = True)
            cmds.select(character + ":hip_anim", add = True)
            cmds.select(character + ":chest_ik_anim", add = True)

        if limb == "leftFingers":
            cmds.select(clear = True)
            for finger in ["index", "middle", "ring", "pinky", "thumb"]:
                if cmds.objExists(character + ":" + finger + "_finger_fk_ctrl_1_l"):
                    cmds.select(character + ":" + finger + "_finger_fk_ctrl_1_l", add = True)

                if cmds.objExists(character + ":" + finger + "_finger_l_mode_anim"):
                    cmds.select(character + ":" + finger + "_finger_l_mode_anim", add = True)


        if limb == "rightFingers":
            cmds.select(clear = True)
            for finger in ["index", "middle", "ring", "pinky", "thumb"]:
                if cmds.objExists(character + ":" + finger + "_finger_fk_ctrl_1_r"):
                    cmds.select(character + ":" + finger + "_finger_fk_ctrl_1_r", add = True)

                if cmds.objExists(character + ":" + finger + "_finger_r_mode_anim"):
                    cmds.select(character + ":" + finger + "_finger_r_mode_anim", add = True)






    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    def selectRigSettings(self, *args):
        character = cmds.symbolButton(self.widgets["activeCharacterThumb"], q = True, ann = True)
        mods = cmds.getModifiers()


        if (mods & 1) > 0:
            cmds.select(character + ":Rig_Settings", tgl = True)

        if (mods & 1) == 0:
            cmds.select(character + ":Rig_Settings")


    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
    def findCustomSelectionSets(self, *args):

        if os.path.exists(self.mayaToolsDir + "/General/ART/system/selectionSets.txt"):
            f = open(self.mayaToolsDir + "/General/ART/system/selectionSets.txt", 'r')
            sets = cPickle.load(f)
            f.close()
            numSets = len(sets)


            #make sure menuItem doesn't already exist
            children = cmds.lsUI(mi = True)
            for child in children:
                if cmds.menuItem(child, q = True, docTag = True) == "customSelectionSet":
                    cmds.deleteUI(child)

            for i in range(int(numSets)):
                label = sets[i][0]
                controls = sets[i][1:]

   