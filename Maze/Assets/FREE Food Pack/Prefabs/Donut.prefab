terialElement->GetAmbientOcclusion().GetExpression());
			ParseExpressionElement(MaterialElement->GetOpacity().GetExpression());
			ParseExpressionElement(MaterialElement->GetWorldDisplacement().GetExpression());

			if ( MaterialElement->GetUseMaterialAttributes() )
			{
				ParseExpressionElement(MaterialElement->GetMaterialAttributes().GetExpression());
			}			
		}

		void ScanCompositeTexture( IDatasmithCompositeTexture* CompositeTexture )
		{
			if ( !CompositeTexture )
			{
				return;
			}

			for (int32 i = 0; i < CompositeTexture->GetParamSurfacesCount(); ++i)
			{
				const FString Texture = CompositeTexture->GetParamTexture(i);

				if ( !Texture.IsEmpty() && Algo::Find( ReferencedTextures, Texture ) == nullptr )
				{
					this->ReferencedTextures.Add( Texture );
					this->ReferencedTextures.Add( Texture + TEXT("_Tex") );
				}
			}

			for (int32 i = 0; i < CompositeTexture->GetParamMaskSurfacesCount(); i++)
			{
				ScanCompositeTexture( CompositeTexture->GetParamMaskSubComposite(i).Get() );
			}

			for (int32 i = 0; i < CompositeTexture->GetParamSurfacesCount(); i++)
			{
				ScanCompositeTexture( CompositeTexture->GetParamSubComposite(i).Get() );
			}
		};

		void ScanLegacyMaterialElement(IDatasmithMaterialElement* MaterialElement)
		{
			if ( !MaterialElement )
			{
				return;
			}

			for (int32 j = 0; j < MaterialElement->GetShadersCount(); ++j )
			{
				if ( const TSharedPtr< IDatasmithShaderElement >& Shader = MaterialElement->GetShader(j) )
				{
					ScanCompositeTexture( Shader->GetDiffuseComp().Get() );
					ScanCompositeTexture( Shader->GetRefleComp().Get() );
					ScanCompositeTexture( Shader->GetRoughnessComp().Get() );
					ScanCompositeTexture( Shader->GetNormalComp().Get() );
					ScanCompositeTexture( Shader->GetBumpComp().Get() );
					ScanCompositeTexture( Shader->GetTransComp().Get() );
					ScanCompositeTexture( Shader->GetMaskComp().Get() );
					ScanCompositeTexture( Shader->GetDisplaceComp().Get() );
					ScanCompositeTexture( Shader->GetMetalComp().Get() );
					ScanCompositeTexture( Shader->GetEmitComp().Get() );
					ScanCompositeTexture( Shader->GetWeightComp().Get() );
				}
			}
		}

		void Initialize()
		{
			int32 AssetElementCount =