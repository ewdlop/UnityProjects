= FPaths::GetCleanFilename(CrashConfigFilePath);
				FString CrashConfigDstAbsolute = FPaths::Combine(*CrashInfoAbsolute, *CrashConfigFilename);
				static_cast<void>(IFileManager::Get().Copy(*CrashConfigDstAbsolute, CrashConfigFilePath));	// best effort, so don't care about result
			}

			// try launching the tool and wait for its exit, if at all
			const TCHAR * RelativePathToCrashReporter = TEXT("../../../Engine/Binaries/Linux/CrashReportClient");	// FIXME: painfully hard-coded

			FString CrashReportLogFilename = LogBaseFilename + TEXT("-CRC") + LogExtension;
			FString CrashReportLogFilepath = FPaths::Combine(*LogFolder, *CrashReportLogFilename);
			FString CrashReportClientArguments = TEXT(" -Abslog=");
			CrashReportClientArguments += TEXT("\"\"") + CrashReportLogFilepath + TEXT("\"\"");
			CrashReportClientArguments += TEXT(" ");

			// If the editor setting has been disabled to not send analytics extend this to the CRC
			if (!bSendUsageData)
			{
				CrashReportClientArguments += TEXT(" -NoAnalytics ");
			}

			if (bImplicitSend)
			{
				CrashReportClientArguments += TEXT(" -Unattended -ImplicitSend ");
			}
			else if (bUnattended)
			{
				CrashReportClientArguments += TEXT(" -Unattended ");
			}

			// Whether to clean up crash reports after send
			if (IsRunningDedicatedServer() && FParse::Param(FCommandLine::Get(), TEXT("CleanCrashReports")))
			{
				CrashReportClientArguments += TEXT(" -CleanCrashReports ");
			}

			CrashReportClientArguments += TEXT("\"\"") + CrashInfoAbsolute + TEXT("/\"\"");

			if (bReportingNonCrash)
			{
				// When running a dedicated server and we are reporting a non-crash and we are already in the process of uploading an ensure
				// we will skip the upload to avoid hitching.
				if (UnixCrashReporterTracker::CurrentTicker.IsValid() && IsRunningDedicatedServer())
				{
					UE_LOG(LogCore, Warning, TEXT("An ensure is already in the process of being uploaded, skipping upload."));
				}
				else
				{
					// If we're reporting non-crash, try to avoid spinning here and instead do that in the tick.
					// However, if there was already a crash reporter running (i.e. we hit ensure() too quickly), take a hitch here
					if (UnixCrashReporterTracker::CurrentTic