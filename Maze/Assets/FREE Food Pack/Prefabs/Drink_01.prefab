l ) )
				{
					ScanMasterMaterialElement(static_cast< IDatasmithMasterMaterialElement* >( MaterialElement.Get() ));
				}
				else if ( MaterialElement->IsA( EDatasmithElementType::Material ) )
				{
					ScanLegacyMaterialElement(static_cast< IDatasmithMaterialElement* >( MaterialElement.Get() ));
				}
			}

			for ( int32 ActorIndex = 0; ActorIndex < Scene->GetActorsCount(); ++ActorIndex )
			{
				const TSharedPtr< IDatasmithActorElement >& Actor = Scene->GetActor( ActorIndex );

				if ( Actor->IsA( EDatasmithElementType::EnvironmentLight ) )
				{
					if ( TSharedPtr< IDatasmithEnvironmentElement > EnvironmentElement = StaticCastSharedPtr< IDatasmithEnvironmentElement >( Actor ) )
					{
						ScanCompositeTexture( EnvironmentElement->GetEnvironmentComp().Get() );
					}
				}
			}

			for (int32 Index = Scene->GetMeshesCount() - 1; Index >= 0; --Index)
			{
				const TSharedPtr< IDatasmithMeshElement >& MeshElement = Scene->GetMesh(Index);
				if ( !ReferencedMeshes.Contains(MeshElement) )
				{
					UE_LOG(LogDatasmith, Warning, TEXT("Mesh element %s removed because it is unused"), MeshElement->GetName());
					Scene->RemoveMesh(MeshElement);
				}
			}

			for (int32 Index = Scene->GetMaterialsCount() - 1; Index >= 0; --Index)
			{
				const TSharedPtr< IDatasmithBaseMaterialElement >& MaterialElement = Scene->GetMaterial(Index);
				if ( !ReferencedMaterials.Contains(MaterialElement) )
				{
					UE_LOG(LogDatasmith, Warning, TEXT("Material element %s removed because it is unused"), MaterialElement->GetName());
					Scene->RemoveMaterial(MaterialElement);
				}
			}

			for (int32 Index = Scene->GetTexturesCount() - 1; Index >= 0; --Index)
			{
				const TSharedPtr< IDatasmithTextureElement >& TextureElement = Scene->GetTexture(Index);
				if ( !ReferencedTextures.Contains(TextureElement->GetName()) )
				{
					UE_LOG(LogDatasmith, Warning, TEXT("Texture element %s removed because it is unused"), TextureElement->GetName());
					Scene->RemoveTexture(TextureElement);
				}
			}

			CleanUpLevelSequences();

			// Remove variant sets referring actors which are not in the scene
			// #ue_liveupdate: Add code to fully clean up the VariantSetsElement itself
			for (int32 Index = Scene->Ge