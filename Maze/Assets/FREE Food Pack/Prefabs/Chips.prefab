ool bFound = FindActorHierarchy(Child, ToFind, OutHierarchy);
			if (bFound)
			{
				OutHierarchy.Add(ActorElement);
				return true;
			}
		}
		return false;
	}
}

bool FDatasmithSceneUtils::FindActorHierarchy(const IDatasmithScene* Scene, const TSharedPtr<IDatasmithActorElement>& ToFind, TActorHierarchy& OutHierarchy)
{
	bool bResult = false;
	OutHierarchy.Reset();
	if (ToFind.IsValid())
	{
		const int32 ActorsCount = Scene->GetActorsCount();
		for (int32 ActorIndex = 0; ActorIndex  < ActorsCount; ++ActorIndex)
		{
			const TSharedPtr< IDatasmithActorElement>& ActorElement = Scene->GetActor(ActorIndex);
			bResult = DatasmithSceneUtilsImpl::FindActorHierarchy(ActorElement, ToFind, OutHierarchy);
			if (bResult)
			{
				OutHierarchy.Add(ActorElement);
				break;
			}
		}
	}

	if (bResult)
	{
		Algo::Reverse(OutHierarchy);
	}
	return bResult;
}

bool FDatasmithSceneUtils::IsMaterialIDUsedInScene(const TSharedPtr<IDatasmithScene>& Scene, const TSharedPtr<IDatasmithMaterialIDElement>& MaterialElement)
{
	TArray<TSharedPtr<IDatasmithMeshActorElement>> AllMeshActors = FDatasmithSceneUtils::GetAllMeshActorsFromScene(Scene);
	for (const TSharedPtr<IDatasmithMeshActorElement>& MeshActor : AllMeshActors)
	{
		const int32 MaterialCount = MeshActor->GetMaterialOverridesCount();
		for (int32 MaterialIndex = 0; MaterialIndex < MaterialCount; ++MaterialIndex)
		{
			if (MeshActor->GetMaterialOverride(MaterialIndex) == MaterialElement)
			{
				return true;
			}
		}
	}

	TArray<TSharedPtr<IDatasmithLightActorElement>> AllLightActors = FDatasmithSceneUtils::GetAllLightActorsFromScene(Scene);
	for (const TSharedPtr<IDatasmithLightActorElement>& LightActor : AllLightActors)
	{
		if (LightActor->GetLightFunctionMaterial() == MaterialElement)
		{
			return true;
		}
	}
	return false;
}

bool FDatasmithSceneUtils::IsPostProcessUsedInScene(const TSharedPtr<IDatasmithScene>& Scene, const TSharedPtr<IDatasmithPostProcessElement>& PostProcessElement)
{
	if (Scene->GetPostProcess() == PostProcessElement)
	{
		return true;
	}

	TArray<TSharedPtr<IDatasmithCameraActorElement>> AllCameraActors = GetAllCameraActorsFromScene(Scene);
	for (const TSharedPtr<IDatasmithCameraActorElement>& CameraActor : AllCamer