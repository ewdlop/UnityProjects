prepGraphEditor::OnCreateNodeOrPinMenu(UEdGraph* CurrentGraph, const UEdGraphNode* InGraphNode, const UEdGraphPin* InGraphPin, FMenuBuilder* MenuBuilder, bool bIsDebugging)
{
	if(CurrentGraph != GetCurrentGraph())
	{
		return FActionMenuContent();
	}

	// Open contextual menu for action node
	UClass* GraphNodeClass = InGraphNode->GetClass();
	const bool bIsActionNode = GraphNodeClass == UDataprepGraphActionNode::StaticClass();
	const UDataprepGraphActionStepNode* FirstStepNode = Cast<UDataprepGraphActionStepNode>( InGraphNode );
	if( bIsActionNode || FirstStepNode )
	{
		FGraphPanelSelectionSet SelectedNodes = GetSelectedNodes();
		TArray<UDataprepActionAsset*> Actions;
		TArray<UDataprepActionStep*> ActionSteps;

		auto OnSaveActions = [&Actions](UDataprepActionAsset* Action, bool bIsFromActionNode) -> bool
		{
			if (bIsFromActionNode)
			{
				Actions.Add(Action);
			}
			return false;
		};

		auto OnSaveActionSteps = [&ActionSteps](UDataprepParameterizableObject* StepObject, UDataprepActionStep* ActionStep) -> bool
		{
			ActionSteps.Add(ActionStep);
			return false;
		};

		DataprepGraphEditorUtils::ForEachActionAndStep(SelectedNodes, OnSaveActions, OnSaveActionSteps);

		MenuBuilder->BeginSection( FName( TEXT("CommonSection") ), LOCTEXT("CommonSection", "Common") );
		{
			MenuBuilder->AddMenuEntry(FGenericCommands::Get().Copy);
			MenuBuilder->AddMenuEntry(FGenericCommands::Get().Cut);
			MenuBuilder->AddMenuEntry(FGenericCommands::Get().Duplicate);
			MenuBuilder->AddMenuEn