//------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------

namespace System.ServiceModel
{
    using System.Configuration;
    using System.Runtime;
    using System.ServiceModel.Channels;
    using System.ServiceModel.Description;
    using System.ServiceModel.Diagnostics;
    using System.ServiceModel.Diagnostics.Application;
    using System.ServiceModel.Security;
    using SecurityToken = System.IdentityModel.Tokens.SecurityToken;
    using FederatedClientCredentialsParameters = System.IdentityModel.Protocols.WSTrust.FederatedClientCredentialsParameters;
    
    public abstract class ChannelFactory : CommunicationObject, IChannelFactory, IDisposable
    {
        string configurationName;
        IChannelFactory innerFactory;
        ServiceEndpoint serviceEndpoint;
        ClientCredentials readOnlyClientCredentials;
        object openLock = new object();

        //Overload for activation DuplexChannelFactory
        protected ChannelFactory()
            : base()
        {
            TraceUtility.SetEtwProviderId();
            this.TraceOpenAndClose = true;
        }

        public ClientCredentials Credentials
        {
            get
            {
                if (this.Endpoint == null)
                    return null;
                if (this.State == CommunicationState.Created || this.State == CommunicationState.Opening)
                {
                    return EnsureCredentials(this.Endpoint);
                }
                else
              