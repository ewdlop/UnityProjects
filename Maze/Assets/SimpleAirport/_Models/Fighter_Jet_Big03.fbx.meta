//---------------------------------------------------------------------
// <copyright file="EntityTypeEmitter.cs" company="Microsoft">
//      Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
//
// @owner       Microsoft
// @backupOwner Microsoft
//---------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.CodeDom;
using System.Data;
using Som=System.Data.EntityModel.SchemaObjectModel;
using System.Data.Metadata.Edm;


namespace System.Data.EntityModel.Emitters
{
    /// <summary>
    /// Summary description for ItemTypeEmitter.
    /// </summary>
    internal sealed class EntityTypeEmitter : StructuredTypeEmitter
    {
        #region Public Methods
        /// <summary>
        /// 
        /// </summary>
        /// <param name="generator"></param>
        /// <param name="itemType"></param>
        public EntityTypeEmitter(ClientApiGenerator generator, EntityType entity)
        : base(generator, entity)
        {
        }
        #endregion

        #region Protected Methods
        /// <summary>
        /// 
        /// </summary>
        /// <param name="typeDecl"></param>
        protected override void EmitProperties(CodeTypeDeclaration typeDecl)
        {
            base.EmitProperties(typeDecl);
            foreach ( NavigationProperty navigationProperty in Item.GetDeclaredOnlyMembers<NavigationProperty>() )
            {
                NavigationPropertyEmitter navigationPropertyEmitter = new NavigationPropertyEmitter(Generator, navigationProperty, UsingStandardBaseClass);
                navigationPropertyEmitter.Emit(typeDecl);
            }
        }

        public override CodeTypeDeclarationCollection EmitApiClass()
        {
            CodeTypeDeclarationCollection typeDecls = base.EmitApiClass();

            if ( Item.KeyMembers.Count > 0 && typeDecls.Count == 1 )
            {
                // generate xml comments for the key properties
                CodeTypeDeclaration typeDecl = typeDecls[0];
                typeDecl.Comments.Add( new CodeCommentStatement( "<KeyProperties>", true ) );
                foreach ( EdmMember keyProperty in Item.KeyMembers)
                {
                    string name = keyProperty.Name;
                  