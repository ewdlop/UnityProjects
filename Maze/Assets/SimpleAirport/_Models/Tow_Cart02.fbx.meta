<?xml version="1.0" encoding="utf-8"?>
<Type Name="MessageBuffer" FullName="System.ServiceModel.Channels.MessageBuffer">
  <TypeSignature Language="C#" Value="public abstract class MessageBuffer : IDisposable, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageBuffer extends System.Object implements class System.IDisposable, class System.Xml.XPath.IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The body of a <see cref="T:System.ServiceModel.Channels.Message" /> instance can only be consumed or written once. If you wish to consume a <see cref="T:System.ServiceModel.Channels.Message" /> instance more than once, you should use the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> class to completely store an entire <see cref="T:System.ServiceModel.Channels.Message" /> instance into memory. </para>
      <para>A <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> instance is constructed by calling <see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /> of a <see cref="T:System.ServiceModel.Channels.Message" /> instance. A new <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> is then created and returned, which assumes ownership of the <see cref="T:System.ServiceModel.Channels.Message" /> and reads the entire content into memory. </para>
      <para>In order to retrieve a copy of a <see cref="T:System.ServiceModel.Channels.Message" /> from the <see cref="T:System.ServiceModel.Channels.MessageBuffer" />, you must call the <see cref="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage" /> method of the <see cref="T:System.S