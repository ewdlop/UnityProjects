andList);

		GraphEditorCommands->MapAction(FGenericCommands::Get().Rename,
			FExecuteAction::CreateSP(this, &SDataprepGraphEditor::OnRenameNode),
			FCanExecuteAction::CreateSP(this, &SDataprepGraphEditor::CanRenameNode)
		);

		GraphEditorCommands->MapAction(FGenericCommands::Get().SelectAll,
			FExecuteAction::CreateSP(this, &SDataprepGraphEditor::SelectAllNodes),
			FCanExecuteAction::CreateSP(this, &SDataprepGraphEditor::CanSelectAllNodes)
		);

		GraphEditorCommands->MapAction(FGenericCommands::Get().Delete,
			FExecuteAction::CreateSP(this, &SDataprepGraphEditor::DeleteSelectedNodes),
			FCanExecuteAction::CreateSP(this, &SDataprepGraphEditor::CanDeleteNodes)
		);

		GraphEditorCommands->MapAction(FGenericCommands::Get().Copy,
			FExecuteAction::CreateSP(this, &SDataprepGraphEditor::CopySelectedNodes),
			FCanExecuteAction::CreateSP(this, &SDataprepGraphEditor::CanCopyNodes)
		);

		GraphEditorCommands->MapAction(FGenericCommands::Get().Cut,
			FExecuteAction::CreateSP(this, &SDataprepGraphEditor::CutSelectedNodes),
			FCanExecuteAction::CreateSP(this, &SDataprepGraphEditor::CanCutNodes)
		);

		GraphEditorCommands->MapAction(FGenericCommands::Get().Paste,
			FExecuteAction::CreateSP(this, &SDataprepGraphEditor::PasteNodes),
			FCanExecuteAction::CreateSP(this, &SDataprepGraphEditor::CanPasteNodes)
		);

		GraphEditorCommands->MapAction(FGenericCommands::Get().Duplicate,
			FExecuteAction::CreateSP(this, &SDataprepGraphEditor::DuplicateNodes),
			FCanExecuteAction::CreateSP(this, &S