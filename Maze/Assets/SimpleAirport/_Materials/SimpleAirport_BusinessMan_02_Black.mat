 /// <include file='doc\PhoneCall.uex' path='docs/doc[@for="PhoneCall.AlternateUrl"]/*' />
        [
            Bindable(true),
            DefaultValue(""),
            MobileCategory(SR.Category_Navigation),
            MobileSysDescription(SR.PhoneCall_AlternateUrl),
            TypeConverter(typeof(System.Web.UI.Design.MobileControls.Converters.NavigateUrlConverter)),
        ]
        public String AlternateUrl
        {
            get
            {
                String s = (String) ViewState["AlternateUrl"];
                return((s != null) ? s : String.Empty);
            }
            set
            {
                ViewState["AlternateUrl"] = value;
            }
        }

        /// <include file='doc\PhoneCall.uex' path='docs/doc[@for="PhoneCall.SoftkeyLabel"]/*' />
        [
            Bindable(true),
            DefaultValue(""),
            MobileCategory(SR.Category_Behavior),
            MobileSysDescription(SR.PhoneCall_SoftkeyLabel)
        ]
        public String SoftkeyLabel
        {
            get
            {
                String s = (String) ViewState["Softkeylabel"];
                return((s != null) ? s : String.Empty);
            }
            set
            {
                ViewState["Softkeylabel"] = value;
            }
        }

        /// <internalonly/>
        protected void RaisePostBackEvent(String argument)
        {
            MobilePage.ActiveForm = MobilePage.GetForm(argument);
        }

        /// <include file='doc\PhoneCall.uex' path='docs/doc[@for="PhoneCall.OnPreRender"]/*' />
        protected override void OnPreRender(EventArgs e)
        {
            base.OnPreRender(e);

            Debug.Assert(PhoneNumber != null);
            if (PhoneNumber.Length == 0)
            {
                throw new ArgumentException(
                            SR.GetString(SR.PhoneCall_EmptyPhoneNumber, ID));
            }
        }

        /// <include file='doc\PhoneCall.uex' path='docs/doc[@for="PhoneCall.AddLinkedForms"]/*' />
        public override void AddLinkedForms(IList linkedForms)
        {
            String target = AlternateUrl;
            String prefix = Constants.FormIDPrefix;