orts in supplied array must be set to zero
			if (StorageSizeCount > CopyCount)
			{
				FMemory::Memset(&Viewports[CopyCount], 0, sizeof(D3D11_VIEWPORT) * (StorageSizeCount - CopyCount));
			}
		}
		*Count = CurrentNumberOfViewports;

#else	// !D3D11_ALLOW_STATE_CACHE
		Direct3DDeviceIMContext->RSGetViewports(Count, Viewports);
#endif	// D3D11_ALLOW_STATE_CACHE
	}

	template <EShaderFrequency ShaderFrequency>
	D3D11_STATE_CACHE_INLINE void SetSamplerState(ID3D11SamplerState* SamplerState, uint32 SamplerIndex)
	{
		InternalSetSamplerState<ShaderFrequency>(SamplerState, SamplerIndex, nullptr);
	}

	template <EShaderFrequency ShaderFrequency>
	D3D11_STATE_CACHE_INLINE void GetSamplerState(uint32 StartSamplerIndex, uint32 NumSamplerIndexes, ID3D11SamplerState** SamplerStates)
	{
#if D3D11_ALLOW_STATE_CACHE
		{
			check(StartSamplerIndex + NumSamplerIndexes <= D3D11_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT);
			for (uint32 StateLoop = 0; StateLoop < NumSamplerIndexes; StateLoop++)
			{
				SamplerStates[StateLoop] = CurrentShaderResourceViews[ShaderFrequency][StateLoop + StartSamplerIndex];
				if (SamplerStates[Stat