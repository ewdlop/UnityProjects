 SF_Pixel:		Direct3DDeviceIMContext1->PSGetConstantBuffers(StartSlot, NumBuffers, ConstantBuffers); break;
			case SF_Compute:	Direct3DDeviceIMContext1->CSGetConstantBuffers(StartSlot, NumBuffers, ConstantBuffers); break;
			}

		}
#endif
	}

	D3D11_STATE_CACHE_INLINE void SetRasterizerState(ID3D11RasterizerState* State)
	{
#if D3D11_ALLOW_STATE_CACHE
		D3D11_STATE_CACHE_VERIFY_PRE();
		if ((CurrentRasterizerState != State) || GD3D11SkipStateCaching)
		{
			CurrentRasterizerState = State;
			Direct3DDeviceIMContext->RSSetState(State);
		}
		D3D11_STATE_CACHE_VERIFY_POST();
#else
		Direct3DDeviceIMContext->RSSetState(State);
#endif
	}

	D3D11_STATE_CACHE_INLINE void GetRasterizerState(ID3D11RasterizerState** RasterizerState)
	{
#if D3D11_ALLOW_STATE_CACHE
		*RasterizerState = CurrentRasterizerState;
		if (CurrentRasterizerState)
		{
			CurrentRasterizerState->AddRef();
		}
#else
		Direct3DDeviceIMContext->RSGetState(RasterizerState);
#endif
	}

	D3D11_STATE_CACHE_INLINE void SetBlendState(ID3D11BlendState* State, const float BlendFactor[4], uint32 SampleMask)
	{
#if D3D11_ALLOW_STATE_CACHE
		D3D11_STATE_CACHE_VERIFY_PRE();
		if ((CurrentBlendState != State || CurrentBlendSampleMask != SampleMask || FMemory::Memcmp(CurrentBlendFactor, BlendFactor, sizeof(CurrentBlendFactor))) || GD3D11SkipStateCaching)
		{
			CurrentBlendState = State;
			CurrentBlendSampleMask = SampleMask;
			FMemory::Memcpy(CurrentBlendFactor, BlendFactor, sizeof(CurrentBlendFactor));
			Direct3DDeviceIMContext->OMSetBlendState(State, BlendFactor, SampleMask);
		}
		D3D11_STATE_CACHE_VERIFY_POST();
#else
		Direct3DDeviceIMContext->OMSetBlendState(State, BlendFactor, SampleMask);
#endif
	}

	D3D11_STATE_CACHE_INLINE void SetBlendFactor(const float BlendFactor[4], uint32 SampleMask)
	{
#if D3D11_ALLOW_STATE_CACHE
		D3D11_STATE_CACHE_VERIFY_PRE();
		if ((CurrentBlendSampleMask != SampleMask || FMemory::Memcmp(CurrentBlendFactor, BlendFactor, sizeof(CurrentBlendFactor))) || GD3D11SkipStateCaching)
		{
			CurrentBlendSampleMask = SampleMask;
			FMemory::Memcpy(Cu