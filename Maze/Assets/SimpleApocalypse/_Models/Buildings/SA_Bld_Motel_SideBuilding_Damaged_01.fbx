          vector unsigned char __b,
                                                 vector bool char __c) {
  return (__a & ~(vector unsigned char)__c) | (__b & (vector unsigned char)__c);
}

static vector bool char __ATTRS_o_ai vec_sel(vector bool char __a,
                                             vector bool char __b,
                                             vector unsigned char __c) {
  return (__a & ~(vector bool char)__c) | (__b & (vector bool char)__c);
}

static vector bool char __ATTRS_o_ai vec_sel(vector bool char __a,
                                             vector bool char __b,
                                             vector bool char __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector short __ATTRS_o_ai vec_sel(vector short __a, vector short __b,
                                         vector unsigned short __c) {
  return (__a & ~(vector short)__c) | (__b & (vector short)__c);
}

static vector short __ATTRS_o_ai vec_sel(vector short __a, vector short __b,
                                         vector bool short __c) {
  return (__a & ~(vector short)__c) | (__b & (vector short)__c);
}

static vector unsigned short __ATTRS_o_ai vec_sel(vector unsigned short __a,
                                                  vector unsigned short __b,
                                                  vector unsigned short __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector unsigned short __ATTRS_o_ai vec_sel(vector unsigned short __a,
                                                  vector unsigned short __b,
                                                  vector bool short __c) {
  return (__a & ~(vector unsigned short)__c) |
         (__b & (vector unsigned short)__c);
}

static vector bool short __ATTRS_o_ai vec_sel(vector bool short __a,
                                              vector bool short __b,
                                              vector unsigned short __c) {
  return (__a & ~(vector bool short)__c) | (__b & (vector bool short)__c);
}

static vector bool short __ATTRS_o_ai vec_sel(vector bool short __a,
                                              vector bool short __b,
                                              vector bool short __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector int __ATTRS_o_ai vec_sel(vector int __a, vector int __b,
                                       vector unsigned int __c) {
  return (__a & ~(vector int)__c) | (__b & (vector int)__c);
}

static vector int __ATTRS_o_ai vec_sel(vector int __a, vector int __b,
                                       vector bool int __c) {
  return (__a & ~(vector int)__c) | (__b & (vector int)__c);
}

static vector unsigned int __ATTRS_o_ai vec_sel(vector unsigned int __a,
                                                vector unsigned int __b,
                                                vector unsigned int __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector unsigned int __ATTRS_o_ai vec_sel(vector unsigned int __a,
                                                vector unsigned int __b,
                                                vector bool int __c) {
  return (__a & ~(vector unsigned int)__c) | (__b & (vector unsigned int)__c);
}

static vector bool int __ATTRS_o_ai vec_sel(vector bool int __a,
                                            vector bool int __b,
                                            vector unsigned int __c) {
  return (__a & ~(vector bool int)__c) | (__b & (vector bool int)__c);
}

static vector bool int __ATTRS_o_ai vec_sel(vector bool int __a,
                                            vector bool int __b,
                                            vector bool int __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector float __ATTRS_o_ai vec_sel(vector float __a, vector float __b,
                                         vector unsigned int __c) {
  vector int __res = ((vector int)__a & ~(vector int)__c) |
                     ((vector int)__b & (vector int)__c);
  return (vector float)__res;
}

static vector float __ATTRS_o_ai vec_sel(vector float __a, vector float __b,
                                         vector bool int __c) {
  vector int __res = ((vector int)__a & ~(vector int)__c) |
                     ((vector int)__b & (vector int)__c);
  return (vector float)__res;
}

#ifdef __VSX__
static vector double __ATTRS_o_ai vec_sel(vector double __a, vector double __b,
                                          vector bool long long __c) {
  vector long long __res = ((vector long long)__a & ~(vector long long)__c) |
                     ((vector long long)__b & (vector long long)__c);
  return (vector double)__res;
}

static vector double __ATTRS_o_ai vec_sel(vector double __a, vector double __b,
                                          vector unsigned long long __c) {
  vector long long __res = ((vector long long)__a & ~(vector long long)__c) |
                     ((vector long long)__b & (vector long long)__c);
  return (vector double)__res;
}
#endif

/* vec_vsel */

static vector signed char __ATTRS_o_ai vec_vsel(vector signed char __a,
                                                vector signed char __b,
                                                vector unsigned char __c) {
  return (__a & ~(vector signed char)__c) | (__b & (vector signed char)__c);
}

static vector signed char __ATTRS_o_ai vec_vsel(vector signed char __a,
                                                vector signed char __b,
                                                vector bool char __c) {
  return (__a & ~(vector signed char)__c) | (__b & (vector signed char)__c);
}

static vector unsigned char __ATTRS_o_ai vec_vsel(vector unsigned char __a,
                                                  vector unsigned char __b,
                                                  vector unsigned char __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector unsigned char __ATTRS_o_ai vec_vsel(vector unsigned char __a,
                                                  vector unsigned char __b,
                                                  vector bool char __c) {
  return (__a & ~(vector unsigned char)__c) | (__b & (vector unsigned char)__c);
}

static vector bool char __ATTRS_o_ai vec_vsel(vector bool char __a,
                                              vector bool char __b,
                                              vector unsigned char __c) {
  return (__a & ~(vector bool char)__c) | (__b & (vector bool char)__c);
}

static vector bool char __ATTRS_o_ai vec_vsel(vector bool char __a,
                                              vector bool char __b,
                                              vector bool char __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector short __ATTRS_o_ai vec_vsel(vector short __a, vector short __b,
                                          vector unsigned short __c) {
  return (__a & ~(vector short)__c) | (__b & (vector short)__c);
}

static vector short __ATTRS_o_ai vec_vsel(vector short __a, vector short __b,
                                          vector bool short __c) {
  return (__a & ~(vector short)__c) | (__b & (vector short)__c);
}

static vector unsigned short __ATTRS_o_ai vec_vsel(vector unsigned short __a,
                                                   vector unsigned short __b,
                                                   vector unsigned short __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector unsigned short __ATTRS_o_ai vec_vsel(vector unsigned short __a,
                                                   vector unsigned short __b,
                                                   vector bool short __c) {
  return (__a & ~(vector unsigned short)__c) |
         (__b & (vector unsigned short)__c);
}

static vector bool short __ATTRS_o_ai vec_vsel(vector bool short __a,
                                               vector bool short __b,
                                               vector unsigned short __c) {
  return (__a & ~(vector bool short)__c) | (__b & (vector bool short)__c);
}

static vector bool short __ATTRS_o_ai vec_vsel(vector bool short __a,
                                               vector bool short __b,
                                               vector bool short __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector int __ATTRS_o_ai vec_vsel(vector int __a, vector int __b,
                                        vector unsigned int __c) {
  return (__a & ~(vector int)__c) | (__b & (vector int)__c);
}

static vector int __ATTRS_o_ai vec_vsel(vector int __a, vector int __b,
                                        vector bool int __c) {
  return (__a & ~(vector int)__c) | (__b & (vector int)__c);
}

static vector unsigned int __ATTRS_o_ai vec_vsel(vector unsigned int __a,
                                                 vector unsigned int __b,
                                                 vector unsigned int __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector unsigned int __ATTRS_o_ai vec_vsel(vector unsigned int __a,
                                                 vector unsigned int __b,
                                                 vector bool int __c) {
  return (__a & ~(vector unsigned int)__c) | (__b & (vector unsigned int)__c);
}

static vector bool int __ATTRS_o_ai vec_vsel(vector bool int __a,
                                             vector bool int __b,
                                             vector unsigned int __c) {
  return (__a & ~(vector bool int)__c) | (__b & (vector bool int)__c);
}

static vector bool int __ATTRS_o_ai vec_vsel(vector bool int __a,
                                             vector bool int __b,
                                             vector bool int __c) {
  return (__a & ~__c) | (__b & __c);
}

static vector float __ATTRS_o_ai vec_vsel(vector float __a, vector float __b,
                                          vector unsigned int __c) {
  vector int __res = ((vector int)__a & ~(vector int)__c) |
                     ((vector int)__b & (vector int)__c);
  return (vector float)__res;
}

static vector float __ATTRS_o_ai vec_vsel(vector float __a, vector float __b,
                                          vector bool int __c) {
  vector int __res = ((vector int)__a & ~(vector int)__c) |
                     ((vector int)__b & (vector int)__c);
  return (vector float)__res;
}

/* vec_sl */

static vector signed char __ATTRS_o_ai vec_sl(vector signed char __a,
                                              vector unsigned char __b) {
  return __a << (vector signed char)__b;
}

static vector unsigned char __ATTRS_o_ai vec_sl(vector unsigned char __a,
                                                vector unsigned char __b) {
  return __a << __b;
}

static vector short __ATTRS_o_ai vec_sl(vector short __a,
                                        vector unsigned short __b) {
  return __a << (vector short)__b;
}

static vector unsigned short __ATTRS_o_ai vec_sl(vector unsigned short __a,
                                                 vector unsigned short __b) {
  return __a << __b;
}

static vector int __ATTRS_o_ai vec_sl(vector int __a, vector unsigned int __b) {
  return __a << (vector int)__b;
}

static vector unsigned int __ATTRS_o_ai vec_sl(vector unsigned int __a,
                                               vector unsigned int __b) {
  return __a << __b;
}

#ifdef __POWER8_VECTOR__
static vector signed long long __ATTRS_o_ai
vec_sl(vector signed long long __a, vector unsigned long long __b) {
  return __a << (vector long long)__b;
}

static vector unsigned long long __ATTRS_o_ai
vec_sl(vector unsigned long long __a, vector unsigned long long __b) {
  return __a << __b;
}
#endif

/* vec_vslb */

#define __builtin_altivec_vslb vec_vslb

static vector signed char __ATTRS_o_ai vec_vslb(vector signed char __a,
                                                vector unsigned char __b) {
  return vec_sl(__a, __b);
}

static vector unsigned char __ATTRS_o_ai vec_vslb(vector unsigned char __a,
                                                  vector unsigned char __b) {
  return vec_sl(__a, __b);
}

/* vec_vslh */

#define __builtin_altivec_vslh vec_vslh

static vector short __ATTRS_o_ai vec_vslh(vector short __a,
                                          vector unsigned short __b) {
  return vec_sl(__a, __b);
}

static vector unsigned short __ATTRS_o_ai vec_vslh(vector unsigned short __a,
                                                   vector unsigned short __b) {
  return vec_sl(__a, __b);
}

/* vec_vslw */

#define __builtin_altivec_vslw vec_vslw

static vector int __ATTRS_o_ai vec_vslw(vector int __a,
                                        vector unsigned int __b) {
  return vec_sl(__a, __b);
}

static vector unsigned int __ATTRS_o_ai vec_vslw(vector unsigned int __a,
                                                 vector unsigned int __b) {
  return vec_sl(__a, __b);
}

/* vec_sld */

#define __builtin_altivec_vsldoi_4si vec_sld

static vector signed char __ATTRS_o_ai vec_sld(vector signed char __a,
                                               vector signed char __b,
                                               unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector unsigned char __ATTRS_o_ai vec_sld(vector unsigned char __a,
                                                 vector unsigned char __b,
                                                 unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector bool char __ATTRS_o_ai vec_sld(vector bool char __a,
                                             vector bool char __b,
                                             unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector signed short __ATTRS_o_ai vec_sld(vector signed short __a,
                                                vector signed short __b,
                                                unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector unsigned short __ATTRS_o_ai vec_sld(vector unsigned short __a,
                                                  vector unsigned short __b,
                                                  unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector bool short __ATTRS_o_ai vec_sld(vector bool short __a,
                                              vector bool short __b,
                                              unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector pixel __ATTRS_o_ai vec_sld(vector pixel __a, vector pixel __b,
                                         unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector signed int __ATTRS_o_ai vec_sld(vector signed int __a,
                                              vector signed int __b,
                                              unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector unsigned int __ATTRS_o_ai vec_sld(vector unsigned int __a,
                                                vector unsigned int __b,
                                                unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector bool int __ATTRS_o_ai vec_sld(vector bool int __a,
                                            vector bool int __b,
                                            unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector float __ATTRS_o_ai vec_sld(vector float __a, vector float __b,
                                         unsigned const int __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

/* vec_vsldoi */

static vector signed char __ATTRS_o_ai vec_vsldoi(vector signed char __a,
                                                  vector signed char __b,
                                                  unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector unsigned char __ATTRS_o_ai vec_vsldoi(vector unsigned char __a,
                                                    vector unsigned char __b,
                                                    unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector short __ATTRS_o_ai vec_vsldoi(vector short __a, vector short __b,
                                            unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector unsigned short __ATTRS_o_ai vec_vsldoi(vector unsigned short __a,
                                                     vector unsigned short __b,
                                                     unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector pixel __ATTRS_o_ai vec_vsldoi(vector pixel __a, vector pixel __b,
                                            unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector int __ATTRS_o_ai vec_vsldoi(vector int __a, vector int __b,
                                          unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector unsigned int __ATTRS_o_ai vec_vsldoi(vector unsigned int __a,
                                                   vector unsigned int __b,
                                                   unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

static vector float __ATTRS_o_ai vec_vsldoi(vector float __a, vector float __b,
                                            unsigned char __c) {
  unsigned char __d = __c & 0x0F;
#ifdef __LITTLE_ENDIAN__
  return vec_perm(
      __b, __a,
      (vector unsigned char)(16 - __d, 17 - __d, 18 - __d, 19 - __d, 20 - __d,
                             21 - __d, 22 - __d, 23 - __d, 24 - __d, 25 - __d,
                             26 - __d, 27 - __d, 28 - __d, 29 - __d, 30 - __d,
                             31 - __d));
#else
  return vec_perm(
      __a, __b,
      (vector unsigned char)(__d, __d + 1, __d + 2, __d + 3, __d + 4, __d + 5,
                             __d + 6, __d + 7, __d + 8, __d + 9, __d + 10,
                             __d + 11, __d + 12, __d + 13, __d + 14, __d + 15));
#endif
}

/* vec_sll */

static vector signed char __ATTRS_o_ai vec_sll(vector signed char __a,
                                               vector unsigned char __b) {
  return (vector signed char)__builtin_altivec_vsl((vector int)__a,
                                                   (vector int)__b);
}

static vector signed char __ATTRS_o_ai vec_sll(vector signed char __a,
                                               vector unsigned short __b) {
  return (vector signed char)__builtin_altivec_vsl((vector int)__a,
                                                   (vector int)__b);
}

static vector signed char __ATTRS_o_ai vec_sll(vector signed char __a,
                                               vector unsigned int __b) {
  return (vector signed char)__builtin_altivec_vsl((vector int)__a,
                                                   (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_sll(vector unsigned char __a,
                                                 vector unsigned char __b) {
  return (vector unsigned char)__builtin_altivec_vsl((vector int)__a,
                                                     (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_sll(vector unsigned char __a,
                                                 vector unsigned short __b) {
  return (vector unsigned char)__builtin_altivec_vsl((vector int)__a,
                                                     (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_sll(vector unsigned char __a,
                                                 vector unsigned int __b) {
  return (vector unsigned char)__builtin_altivec_vsl((vector int)__a,
                                                     (vector int)__b);
}

static vector bool char __ATTRS_o_ai vec_sll(vector bool char __a,
                                             vector unsigned char __b) {
  return (vector bool char)__builtin_altivec_vsl((vector int)__a,
                                                 (vector int)__b);
}

static vector bool char __ATTRS_o_ai vec_sll(vector bool char __a,
                                             vector unsigned short __b) {
  return (vector bool char)__builtin_altivec_vsl((vector int)__a,
                                                 (vector int)__b);
}

static vector bool char __ATTRS_o_ai vec_sll(vector bool char __a,
                                             vector unsigned int __b) {
  return (vector bool char)__builtin_altivec_vsl((vector int)__a,
                                                 (vector int)__b);
}

static vector short __ATTRS_o_ai vec_sll(vector short __a,
                                         vector unsigned char __b) {
  return (vector short)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector short __ATTRS_o_ai vec_sll(vector short __a,
                                         vector unsigned short __b) {
  return (vector short)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector short __ATTRS_o_ai vec_sll(vector short __a,
                                         vector unsigned int __b) {
  return (vector short)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_sll(vector unsigned short __a,
                                                  vector unsigned char __b) {
  return (vector unsigned short)__builtin_altivec_vsl((vector int)__a,
                                                      (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_sll(vector unsigned short __a,
                                                  vector unsigned short __b) {
  return (vector unsigned short)__builtin_altivec_vsl((vector int)__a,
                                                      (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_sll(vector unsigned short __a,
                                                  vector unsigned int __b) {
  return (vector unsigned short)__builtin_altivec_vsl((vector int)__a,
                                                      (vector int)__b);
}

static vector bool short __ATTRS_o_ai vec_sll(vector bool short __a,
                                              vector unsigned char __b) {
  return (vector bool short)__builtin_altivec_vsl((vector int)__a,
                                                  (vector int)__b);
}

static vector bool short __ATTRS_o_ai vec_sll(vector bool short __a,
                                              vector unsigned short __b) {
  return (vector bool short)__builtin_altivec_vsl((vector int)__a,
                                                  (vector int)__b);
}

static vector bool short __ATTRS_o_ai vec_sll(vector bool short __a,
                                              vector unsigned int __b) {
  return (vector bool short)__builtin_altivec_vsl((vector int)__a,
                                                  (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_sll(vector pixel __a,
                                         vector unsigned char __b) {
  return (vector pixel)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_sll(vector pixel __a,
                                         vector unsigned short __b) {
  return (vector pixel)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_sll(vector pixel __a,
                                         vector unsigned int __b) {
  return (vector pixel)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_sll(vector int __a,
                                       vector unsigned char __b) {
  return (vector int)__builtin_altivec_vsl(__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_sll(vector int __a,
                                       vector unsigned short __b) {
  return (vector int)__builtin_altivec_vsl(__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_sll(vector int __a,
                                       vector unsigned int __b) {
  return (vector int)__builtin_altivec_vsl(__a, (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_sll(vector unsigned int __a,
                                                vector unsigned char __b) {
  return (vector unsigned int)__builtin_altivec_vsl((vector int)__a,
                                                    (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_sll(vector unsigned int __a,
                                                vector unsigned short __b) {
  return (vector unsigned int)__builtin_altivec_vsl((vector int)__a,
                                                    (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_sll(vector unsigned int __a,
                                                vector unsigned int __b) {
  return (vector unsigned int)__builtin_altivec_vsl((vector int)__a,
                                                    (vector int)__b);
}

static vector bool int __ATTRS_o_ai vec_sll(vector bool int __a,
                                            vector unsigned char __b) {
  return (vector bool int)__builtin_altivec_vsl((vector int)__a,
                                                (vector int)__b);
}

static vector bool int __ATTRS_o_ai vec_sll(vector bool int __a,
                                            vector unsigned short __b) {
  return (vector bool int)__builtin_altivec_vsl((vector int)__a,
                                                (vector int)__b);
}

static vector bool int __ATTRS_o_ai vec_sll(vector bool int __a,
                                            vector unsigned int __b) {
  return (vector bool int)__builtin_altivec_vsl((vector int)__a,
                                                (vector int)__b);
}

/* vec_vsl */

static vector signed char __ATTRS_o_ai vec_vsl(vector signed char __a,
                                               vector unsigned char __b) {
  return (vector signed char)__builtin_altivec_vsl((vector int)__a,
                                                   (vector int)__b);
}

static vector signed char __ATTRS_o_ai vec_vsl(vector signed char __a,
                                               vector unsigned short __b) {
  return (vector signed char)__builtin_altivec_vsl((vector int)__a,
                                                   (vector int)__b);
}

static vector signed char __ATTRS_o_ai vec_vsl(vector signed char __a,
                                               vector unsigned int __b) {
  return (vector signed char)__builtin_altivec_vsl((vector int)__a,
                                                   (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_vsl(vector unsigned char __a,
                                                 vector unsigned char __b) {
  return (vector unsigned char)__builtin_altivec_vsl((vector int)__a,
                                                     (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_vsl(vector unsigned char __a,
                                                 vector unsigned short __b) {
  return (vector unsigned char)__builtin_altivec_vsl((vector int)__a,
                                                     (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_vsl(vector unsigned char __a,
                                                 vector unsigned int __b) {
  return (vector unsigned char)__builtin_altivec_vsl((vector int)__a,
                                                     (vector int)__b);
}

static vector bool char __ATTRS_o_ai vec_vsl(vector bool char __a,
                                             vector unsigned char __b) {
  return (vector bool char)__builtin_altivec_vsl((vector int)__a,
                                                 (vector int)__b);
}

static vector bool char __ATTRS_o_ai vec_vsl(vector bool char __a,
                                             vector unsigned short __b) {
  return (vector bool char)__builtin_altivec_vsl((vector int)__a,
                                                 (vector int)__b);
}

static vector bool char __ATTRS_o_ai vec_vsl(vector bool char __a,
                                             vector unsigned int __b) {
  return (vector bool char)__builtin_altivec_vsl((vector int)__a,
                                                 (vector int)__b);
}

static vector short __ATTRS_o_ai vec_vsl(vector short __a,
                                         vector unsigned char __b) {
  return (vector short)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector short __ATTRS_o_ai vec_vsl(vector short __a,
                                         vector unsigned short __b) {
  return (vector short)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector short __ATTRS_o_ai vec_vsl(vector short __a,
                                         vector unsigned int __b) {
  return (vector short)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_vsl(vector unsigned short __a,
                                                  vector unsigned char __b) {
  return (vector unsigned short)__builtin_altivec_vsl((vector int)__a,
                                                      (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_vsl(vector unsigned short __a,
                                                  vector unsigned short __b) {
  return (vector unsigned short)__builtin_altivec_vsl((vector int)__a,
                                                      (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_vsl(vector unsigned short __a,
                                                  vector unsigned int __b) {
  return (vector unsigned short)__builtin_altivec_vsl((vector int)__a,
                                                      (vector int)__b);
}

static vector bool short __ATTRS_o_ai vec_vsl(vector bool short __a,
                                              vector unsigned char __b) {
  return (vector bool short)__builtin_altivec_vsl((vector int)__a,
                                                  (vector int)__b);
}

static vector bool short __ATTRS_o_ai vec_vsl(vector bool short __a,
                                              vector unsigned short __b) {
  return (vector bool short)__builtin_altivec_vsl((vector int)__a,
                                                  (vector int)__b);
}

static vector bool short __ATTRS_o_ai vec_vsl(vector bool short __a,
                                              vector unsigned int __b) {
  return (vector bool short)__builtin_altivec_vsl((vector int)__a,
                                                  (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_vsl(vector pixel __a,
                                         vector unsigned char __b) {
  return (vector pixel)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_vsl(vector pixel __a,
                                         vector unsigned short __b) {
  return (vector pixel)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_vsl(vector pixel __a,
                                         vector unsigned int __b) {
  return (vector pixel)__builtin_altivec_vsl((vector int)__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_vsl(vector int __a,
                                       vector unsigned char __b) {
  return (vector int)__builtin_altivec_vsl(__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_vsl(vector int __a,
                                       vector unsigned short __b) {
  return (vector int)__builtin_altivec_vsl(__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_vsl(vector int __a,
                                       vector unsigned int __b) {
  return (vector int)__builtin_altivec_vsl(__a, (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_vsl(vector unsigned int __a,
                                                vector unsigned char __b) {
  return (vector unsigned int)__builtin_altivec_vsl((vector int)__a,
                                                    (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_vsl(vector unsigned int __a,
                                                vector unsigned short __b) {
  return (vector unsigned int)__builtin_altivec_vsl((vector int)__a,
                                                    (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_vsl(vector unsigned int __a,
                                                vector unsigned int __b) {
  return (vector unsigned int)__builtin_altivec_vsl((vector int)__a,
                                                    (vector int)__b);
}

static vector bool int __ATTRS_o_ai vec_vsl(vector bool int __a,
                                            vector unsigned char __b) {
  return (vector bool int)__builtin_altivec_vsl((vector int)__a,
                                                (vector int)__b);
}

static vector bool int __ATTRS_o_ai vec_vsl(vector bool int __a,
                                            vector unsigned short __b) {
  return (vector bool int)__builtin_altivec_vsl((vector int)__a,
                                                (vector int)__b);
}

static vector bool int __ATTRS_o_ai vec_vsl(vector bool int __a,
                                            vector unsigned int __b) {
  return (vector bool int)__builtin_altivec_vsl((vector int)__a,
                                                (vector int)__b);
}

/* vec_slo */

static vector signed char __ATTRS_o_ai vec_slo(vector signed char __a,
                                               vector signed char __b) {
  return (vector signed char)__builtin_altivec_vslo((vector int)__a,
                                                    (vector int)__b);
}

static vector signed char __ATTRS_o_ai vec_slo(vector signed char __a,
                                               vector unsigned char __b) {
  return (vector signed char)__builtin_altivec_vslo((vector int)__a,
                                                    (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_slo(vector unsigned char __a,
                                                 vector signed char __b) {
  return (vector unsigned char)__builtin_altivec_vslo((vector int)__a,
                                                      (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_slo(vector unsigned char __a,
                                                 vector unsigned char __b) {
  return (vector unsigned char)__builtin_altivec_vslo((vector int)__a,
                                                      (vector int)__b);
}

static vector short __ATTRS_o_ai vec_slo(vector short __a,
                                         vector signed char __b) {
  return (vector short)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector short __ATTRS_o_ai vec_slo(vector short __a,
                                         vector unsigned char __b) {
  return (vector short)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_slo(vector unsigned short __a,
                                                  vector signed char __b) {
  return (vector unsigned short)__builtin_altivec_vslo((vector int)__a,
                                                       (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_slo(vector unsigned short __a,
                                                  vector unsigned char __b) {
  return (vector unsigned short)__builtin_altivec_vslo((vector int)__a,
                                                       (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_slo(vector pixel __a,
                                         vector signed char __b) {
  return (vector pixel)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_slo(vector pixel __a,
                                         vector unsigned char __b) {
  return (vector pixel)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_slo(vector int __a, vector signed char __b) {
  return (vector int)__builtin_altivec_vslo(__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_slo(vector int __a,
                                       vector unsigned char __b) {
  return (vector int)__builtin_altivec_vslo(__a, (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_slo(vector unsigned int __a,
                                                vector signed char __b) {
  return (vector unsigned int)__builtin_altivec_vslo((vector int)__a,
                                                     (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_slo(vector unsigned int __a,
                                                vector unsigned char __b) {
  return (vector unsigned int)__builtin_altivec_vslo((vector int)__a,
                                                     (vector int)__b);
}

static vector float __ATTRS_o_ai vec_slo(vector float __a,
                                         vector signed char __b) {
  return (vector float)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector float __ATTRS_o_ai vec_slo(vector float __a,
                                         vector unsigned char __b) {
  return (vector float)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

/* vec_vslo */

static vector signed char __ATTRS_o_ai vec_vslo(vector signed char __a,
                                                vector signed char __b) {
  return (vector signed char)__builtin_altivec_vslo((vector int)__a,
                                                    (vector int)__b);
}

static vector signed char __ATTRS_o_ai vec_vslo(vector signed char __a,
                                                vector unsigned char __b) {
  return (vector signed char)__builtin_altivec_vslo((vector int)__a,
                                                    (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_vslo(vector unsigned char __a,
                                                  vector signed char __b) {
  return (vector unsigned char)__builtin_altivec_vslo((vector int)__a,
                                                      (vector int)__b);
}

static vector unsigned char __ATTRS_o_ai vec_vslo(vector unsigned char __a,
                                                  vector unsigned char __b) {
  return (vector unsigned char)__builtin_altivec_vslo((vector int)__a,
                                                      (vector int)__b);
}

static vector short __ATTRS_o_ai vec_vslo(vector short __a,
                                          vector signed char __b) {
  return (vector short)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector short __ATTRS_o_ai vec_vslo(vector short __a,
                                          vector unsigned char __b) {
  return (vector short)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_vslo(vector unsigned short __a,
                                                   vector signed char __b) {
  return (vector unsigned short)__builtin_altivec_vslo((vector int)__a,
                                                       (vector int)__b);
}

static vector unsigned short __ATTRS_o_ai vec_vslo(vector unsigned short __a,
                                                   vector unsigned char __b) {
  return (vector unsigned short)__builtin_altivec_vslo((vector int)__a,
                                                       (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_vslo(vector pixel __a,
                                          vector signed char __b) {
  return (vector pixel)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector pixel __ATTRS_o_ai vec_vslo(vector pixel __a,
                                          vector unsigned char __b) {
  return (vector pixel)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_vslo(vector int __a,
                                        vector signed char __b) {
  return (vector int)__builtin_altivec_vslo(__a, (vector int)__b);
}

static vector int __ATTRS_o_ai vec_vslo(vector int __a,
                                        vector unsigned char __b) {
  return (vector int)__builtin_altivec_vslo(__a, (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_vslo(vector unsigned int __a,
                                                 vector signed char __b) {
  return (vector unsigned int)__builtin_altivec_vslo((vector int)__a,
                                                     (vector int)__b);
}

static vector unsigned int __ATTRS_o_ai vec_vslo(vector unsigned int __a,
                                                 vector unsigned char __b) {
  return (vector unsigned int)__builtin_altivec_vslo((vector int)__a,
                                                     (vector int)__b);
}

static vector float __ATTRS_o_ai vec_vslo(vector float __a,
                                          vector signed char __b) {
  return (vector float)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

static vector float __ATTRS_o_ai vec_vslo(vector float __a,
                                          vector unsigned char __b) {
  return (vector float)__builtin_altivec_vslo((vector int)__a, (vector int)__b);
}

/* vec_splat */

static vector signed char __ATTRS_o_ai vec_splat(vector signed char __a,
                                                 unsigned const int __b) {
  return vec_perm(__a, __a, (vector unsigned char)(__b & 0x0F));
}

static vector unsigned char __ATTRS_o_ai vec_splat(vector unsigned char __a,
                                                   unsigned const int __b) {
  return vec_perm(__a, __a, (vector unsigned char)(__b & 0x0F));
}

static vector bool char __ATTRS_o_ai vec_splat(vector bool char __a,
                                               unsigned const int __b) {
  return vec_perm(__a, __a, (vector unsigned char)(__b & 0x0F));
}

static vector signed short __ATTRS_o_ai vec_splat(vector signed short __a,
                                                  unsigned const int __b) {
  unsigned char b0 = (__b & 0x07) * 2;
  unsigned char b1 = b0 + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b0, b1, b0, b1, b0, b1,
                                         b0, b1, b0, b1, b0, b1, b0, b1));
}

static vector unsigned short __ATTRS_o_ai vec_splat(vector unsigned short __a,
                                                    unsigned const int __b) {
  unsigned char b0 = (__b & 0x07) * 2;
  unsigned char b1 = b0 + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b0, b1, b0, b1, b0, b1,
                                         b0, b1, b0, b1, b0, b1, b0, b1));
}

static vector bool short __ATTRS_o_ai vec_splat(vector bool short __a,
                                                unsigned const int __b) {
  unsigned char b0 = (__b & 0x07) * 2;
  unsigned char b1 = b0 + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b0, b1, b0, b1, b0, b1,
                                         b0, b1, b0, b1, b0, b1, b0, b1));
}

static vector pixel __ATTRS_o_ai vec_splat(vector pixel __a,
                                           unsigned const int __b) {
  unsigned char b0 = (__b & 0x07) * 2;
  unsigned char b1 = b0 + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b0, b1, b0, b1, b0, b1,
                                         b0, b1, b0, b1, b0, b1, b0, b1));
}

static vector signed int __ATTRS_o_ai vec_splat(vector signed int __a,
                                                unsigned const int __b) {
  unsigned char b0 = (__b & 0x03) * 4;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b0, b1, b2, b3, b0,
                                         b1, b2, b3, b0, b1, b2, b3));
}

static vector unsigned int __ATTRS_o_ai vec_splat(vector unsigned int __a,
                                                  unsigned const int __b) {
  unsigned char b0 = (__b & 0x03) * 4;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b0, b1, b2, b3, b0,
                                         b1, b2, b3, b0, b1, b2, b3));
}

static vector bool int __ATTRS_o_ai vec_splat(vector bool int __a,
                                              unsigned const int __b) {
  unsigned char b0 = (__b & 0x03) * 4;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b0, b1, b2, b3, b0,
                                         b1, b2, b3, b0, b1, b2, b3));
}

static vector float __ATTRS_o_ai vec_splat(vector float __a,
                                           unsigned const int __b) {
  unsigned char b0 = (__b & 0x03) * 4;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b0, b1, b2, b3, b0,
                                         b1, b2, b3, b0, b1, b2, b3));
}

#ifdef __VSX__
static vector double __ATTRS_o_ai vec_splat(vector double __a,
                                            unsigned const int __b) {
  unsigned char b0 = (__b & 0x01) * 8;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3, b4 = b0 + 4,
                b5 = b0 + 5, b6 = b0 + 6, b7 = b0 + 7;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b4, b5, b6, b7,
                                         b0, b1, b2, b3, b4, b5, b6, b7));
}
static vector bool long long __ATTRS_o_ai vec_splat(vector bool long long __a,
                                                    unsigned const int __b) {
  unsigned char b0 = (__b & 0x01) * 8;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3, b4 = b0 + 4,
                b5 = b0 + 5, b6 = b0 + 6, b7 = b0 + 7;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b4, b5, b6, b7,
                                         b0, b1, b2, b3, b4, b5, b6, b7));
}
static vector signed long long __ATTRS_o_ai
vec_splat(vector signed long long __a, unsigned const int __b) {
  unsigned char b0 = (__b & 0x01) * 8;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3, b4 = b0 + 4,
                b5 = b0 + 5, b6 = b0 + 6, b7 = b0 + 7;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b4, b5, b6, b7,
                                         b0, b1, b2, b3, b4, b5, b6, b7));
}
static vector unsigned long long __ATTRS_o_ai
vec_splat(vector unsigned long long __a, unsigned const int __b) {
  unsigned char b0 = (__b & 0x01) * 8;
  unsigned char b1 = b0 + 1, b2 = b0 + 2, b3 = b0 + 3, b4 = b0 + 4,
                b5 = b0 + 5, b6 = b0 + 6, b7 = b0 + 7;
  return vec_perm(__a, __a,
                  (vector unsigned char)(b0, b1, b2, b3, b4, b5, b6, b7,
                                         b0, b1, b2, b3, b4, b5, b6, b7));
}
#endif

/* vec_vspltb */

#define __builtin_altivec_vspltb vec_vspltb

static vector signed char __ATTRS_o_ai vec_vspltb(vector signed char __a,
                                                  unsigned char __b) {
  return vec_perm(__a, __a, (vector unsigned char)(__b));
}

static vector unsigned char __ATTRS_o_ai vec_vspltb(vector unsigned char __a,
                                                    unsigned char __b) {
  return vec_perm(__a, __a, (vector unsigned char)(__b));
}

static vector bool char __ATTRS_o_ai vec_vspltb(vector bool char __a,
                                                unsigned char __b) {
  return vec_perm(__a, __a, (vector unsigned char)(__b));
}

/* vec_vsplth */

#define __builtin_altivec_vsplth vec_vsplth

static vector short __ATTRS_o_ai vec_vsplth(vector short __a,
                                            unsigned char __b) {
  __b *= 2;
  unsigned char b1 = __b + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, __b, b1, __b, b1, __b, b1,
                                         __b, b1, __b, b1, __b, b1, __b, b1));
}

static vector unsigned short __ATTRS_o_ai vec_vsplth(vector unsigned short __a,
                                                     unsigned char __b) {
  __b *= 2;
  unsigned char b1 = __b + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, __b, b1, __b, b1, __b, b1,
                                         __b, b1, __b, b1, __b, b1, __b, b1));
}

static vector bool short __ATTRS_o_ai vec_vsplth(vector bool short __a,
                                                 unsigned char __b) {
  __b *= 2;
  unsigned char b1 = __b + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, __b, b1, __b, b1, __b, b1,
                                         __b, b1, __b, b1, __b, b1, __b, b1));
}

static vector pixel __ATTRS_o_ai vec_vsplth(vector pixel __a,
                                            unsigned char __b) {
  __b *= 2;
  unsigned char b1 = __b + 1;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, __b, b1, __b, b1, __b, b1,
                                         __b, b1, __b, b1, __b, b1, __b, b1));
}

/* vec_vspltw */

#define __builtin_altivec_vspltw vec_vspltw

static vector int __ATTRS_o_ai vec_vspltw(vector int __a, unsigned char __b) {
  __b *= 4;
  unsigned char b1 = __b + 1, b2 = __b + 2, b3 = __b + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, b2, b3, __b, b1, b2, b3, __b,
                                         b1, b2, b3, __b, b1, b2, b3));
}

static vector unsigned int __ATTRS_o_ai vec_vspltw(vector unsigned int __a,
                                                   unsigned char __b) {
  __b *= 4;
  unsigned char b1 = __b + 1, b2 = __b + 2, b3 = __b + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, b2, b3, __b, b1, b2, b3, __b,
                                         b1, b2, b3, __b, b1, b2, b3));
}

static vector bool int __ATTRS_o_ai vec_vspltw(vector bool int __a,
                                               unsigned char __b) {
  __b *= 4;
  unsigned char b1 = __b + 1, b2 = __b + 2, b3 = __b + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, b2, b3, __b, b1, b2, b3, __b,
                                         b1, b2, b3, __b, b1, b2, b3));
}

static vector float __ATTRS_o_ai vec_vspltw(vector float __a,
                                            unsigned char __b) {
  __b *= 4;
  unsigned char b1 = __b + 1, b2 = __b + 2, b3 = __b + 3;
  return vec_perm(__a, __a,
                  (vector unsigned char)(__b, b1, b2, b3, __b, b1, b2, b3, __b,
                                         b1, b2, b3, __b, b1, b2, b3));
}

/* vec_splat_s8 */

#define __builtin_altivec_vspltisb vec_splat_s8

// FIXME: parameter should be treated as 5-bit signed literal
static vector signed char __ATTRS_o_ai vec_splat_s8(signed char __a) {
  return (vector signed char)(__a);
}

/* vec_vspltisb */

// FIXME: parameter should be treated as 5-bit signed literal
static vector signed char __ATTRS_o_ai vec_vspltisb(signed char __a) {
  return (vector signed char)(__a);
}

/* vec_splat_s16 */

#define __builtin_altivec_vspltish vec_splat_s16

// FIXME: parameter should be treated as 5-bit signed literal
static vector short __ATTRS_o_ai vec_splat_s16(signed char __a) {
  return (vector short)(__a);
}

/* vec_vspltish */

// FIXME: parameter should be treated as 5-bit signed literal
static vector short __ATTRS_o_ai vec_vspltish(signed char __a) {
  return (vector short)(__a);
}

/* vec_splat_s32 */

#define __builtin_altivec_vspltisw vec_splat_s32

// FIXME: parameter should be treated as 5-bit signed literal
static vector int __ATTRS_o_ai vec_splat_s32(signed char __a) {
  return (vector int)(__a);
}

/* vec_vspltisw */

// FIXME: parameter should be treated as 5-bit signed literal
static vector int __ATTRS_o_ai vec_vspltisw(signed char __a) {
  return (vector int)(__a);
}

/* vec_splat_u8 */

// FIXME: parameter should be treated as 5-bit signed literal
static vector unsigned char __ATTRS_o_ai vec_splat_u8(unsigned char __a) {
  return (vector unsigned char)(__a);
}

/* vec_splat_u16 */

// FIXME: parameter should be treated as 5-bit signed literal
static vector unsigned short __ATTRS_o_ai vec_splat_u16(signed char __a) {
  return (vector unsigned short)(__a);
}

/* vec_splat_u32 */

// FIXME: parameter should be treated as 5-bit signed literal
static vector unsigned int __ATTRS_o_ai vec_splat_u32(signed char __a) {
  return (vector unsigned int)(__a);
}

/* vec_sr */

static vector signed char __ATTRS_o_ai vec_sr(vector signed char __a,
                                              vector unsigned char __b) {
  vector unsigned char __res = (vector unsigned char)__a >> __b;
  return (vector signed char)__res;
}

static vector unsigned char __ATTRS_o_ai vec_sr(vector unsigned char __a,
                                                vector unsigned char __b) {
  return __a >> __b;
}

static vector signed short __ATTRS_o_ai vec_sr(vector signed short __a,
                                        vector unsigned short __b) {
  vector unsigned short __res = (vector unsigned short)__a >> __b;
  return (vector signed short)__res;
}

static vector unsigned short __ATTRS_o_ai vec_sr(vector unsigned short __a,
                                                 vector unsigned short __b) {
  return __a >> __b;
}

static vector signed int __ATTRS_o_ai vec_sr(vector signed int __a,
                                             vector unsigned int __b) {
  vector unsigned int __res = (vector unsigned int)__a >> __b;
  return (vector signed int)__res;
}

static vector unsigned int __ATTRS_o_ai vec_sr(vector unsigned int __a,
                                               vector unsigned int __b) {
  return __a >> __b;
}

#ifdef __POWER8_VECTOR__
static vector signed long long __ATTRS_o_ai
vec_sr(vector signed long long __a, vector unsigned long long __b) {
  vector unsigned long long __res = (vector unsigned long long)__a >> __b;
  return (vector signed long long)__res;
}

static vector unsigned long long __ATTRS_o_ai
vec_sr(vector unsigned long long __a, vector unsigned long long __b) {
  return __a >> __b;
}
#endif

/* vec_vsrb */

#define __builtin_altivec_vsrb vec_vsrb

static vector signed char __ATTRS_o_ai vec_vsrb(vector signed char __a,
                                                vector unsigned char __b) {
  return __a >> (vector signed char)__b;
}

static vector unsigned char __ATTRS_o_ai vec_vsrb(vector unsigned char __a,
                                                  vector unsigned char __b) {
  return __a >> __b;
}

/* vec_vsrh */

#define __builtin_altivec_vsrh vec_vsrh

static vector short __ATTRS_o_ai vec_vsrh(vector short __a,
                                          vector unsigned short __b) {
  return __a >> (vector short)__b;
}

static vector unsigned short __ATTRS_o_ai vec_vsrh(vector unsigned short __a,
                                                   vector unsigned short __b) {
  return __a >> __b;
}

/* vec_vsrw */

#define __builtin_altivec_vsrw vec_vsrw

static vector int __ATTRS_o_ai vec_vsrw(vector int __a,
                                        vector unsigned int __b) {
  return __a >> (vector int)__b;
}

static vector unsigned int __ATTRS_o_ai vec_vsrw(vector unsigned int __a,
                                                 vector unsigned int __b) {
  return __a >> __b;
}

/* vec_sra */

static vector signed char __ATTRS_o_ai vec_sra(vector signed char __a,
                                               vector unsigned char __b) {
  return (vector signed char)__builtin_altivec_vsrab((vector char)__a, __b);
}

static vector unsigned char __ATTRS_o_ai vec_sra(vector unsigned char __a,
                                                 vector unsigned char __b) {
  return (vector unsigned char)__builtin_altivec_vsrab((vector char)__a, __b);
}

static vector short __ATTRS_o_ai vec_sra(vector short __a,
                                         vector unsigned short __b) {
  return __builtin_altivec_vsrah(__a, (vector unsigned short)__b);
}

static vector unsigned short __ATTRS_o_ai vec_sra(vector unsigned short __a,
                                                  vector unsigned short __b) {
  return (vector unsigned short)__builtin_altivec_vsrah((vector short)__a, __b);
}

static vector int __ATTRS_o_ai vec_sra(vector int __a,
                                       vector unsigned int __b) {
  return __builtin_altivec_vsraw(__a, __b);
}

static vector unsigned int __ATTRS_o_ai vec_sra(vector unsigned int __a,
                                                vector unsigned int __b) {
  return (vector unsigned int)__builtin_altivec_