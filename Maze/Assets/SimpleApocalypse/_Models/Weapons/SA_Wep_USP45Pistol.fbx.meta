//------------------------------------------------------------------------------
// <copyright file="MenuAdapter.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
//------------------------------------------------------------------------------

namespace System.Web.UI.WebControls.Adapters {

    using System;
    using System.Diagnostics;
    using System.Globalization;
    using System.Text;
    using System.Web;
    using System.Web.UI;
    using System.Web.UI.HtmlControls;
    using System.Web.UI.WebControls;

    public class MenuAdapter : WebControlAdapter, IPostBackEventHandler {
        
        private string _path;
        private Panel _menuPanel;
        private int _currentAccessKey = 0;
        private MenuItem _titleItem;

        protected new Menu Control  {
            get  {
                return (Menu) base.Control;
            }
        }

        protected internal override void LoadAdapterControlState(Object state) {
            if (state != null) {
                Pair pairState = state as Pair;
                if (pairState != null) {
                    base.LoadAdapterViewState(pairState.First);
                    _path = (string)pairState.Second;
                }
                else {
                    base.LoadAdapterViewState(null);
                    _path = state as string;
                }
            }
        }

        private string Escape(string path) {
            // This function escapes \\ so that they don't get replaced because of
            // a Netscape 4 bug. Other escapable characters will be escaped by .
            // _ becomes __ and \\ becomes \_\
            StringBuilder b = null;

            if (String.IsNullOrEmpty(path)) {
                return String.Empty;
            }

            int startIndex = 0;
            int count = 0;
            for (int i = 0; i < path.Length; i++) {
                switch (path[i]) {
                    case '\\':

                        if (i + 1 < path.Length && path[i + 1] == '\\') {
                            if (b == null) {
                                b = new StringBuilder(path.Length + 5);
                            }
                            if (count > 0) {
                                b.Append(path, startIndex, count);
                            }
                            b.Append(@"\_\");
                            i++;
                            startIndex = i + 1;
                            count = 0;
                        }
                        else {
                            count++;
                        }
  