fied culture (or the neutral culture)
				//on disk
				Assert.AreEqual (typeof (MissingManifestResourceException), ex.GetType (), "#2");
				Assert.IsNull (ex.InnerException, "#3");
				Assert.IsNotNull (ex.Message, "#4");
			}
		}

		[Test]
		[Category ("MobileNotWorking")]
		public void GetStream_ResourceSet_Disposed ()
		{
			Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture;
			ResourceManager rm = ResourceManager.
				CreateFileBasedResourceManager ("StreamTest", TestResourceHelper.GetFullPathOfResource ("Test/resources"), null);
			ResourceSet rs = rm.GetResourceSet (new CultureInfo ("ja-JP"),
				true, true);
			rs.Dispose ();

			try {
				rm.GetStream ("test", new CultureInfo ("ja-JP"));
				Assert.Fail ("#1");
			} catch (ObjectDisposedException ex) {
				// Cannot access a closed resource set
				Assert.AreEqual (typeof (ObjectDisposedException), ex.GetType (), "#2");
				Assert.IsNull (ex.InnerException, "#3");
				Assert.IsNotNull (ex.Message, "#4");
			} finally {
				rm.ReleaseAllResources ();
			}
		}

		[Test]
		[Category ("MobileNotWorking")]
		public void IgnoreCase ()
		{
			ResourceManager rm = ResourceManager.
				CreateFileBasedResourceManager ("MyResources", TestResourceHelper.GetFullPathOfResource ("Test/resources"), null);

			Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture;
			Assert.IsFalse (rm.IgnoreCase, "#A1");
			Assert.IsNull (rm.GetString ("helloWORLD"), "#A2");
			rm.IgnoreCase = true;
			Assert.IsTrue (rm.IgnoreCase, "#B1");
			Assert.AreEqual ("Hello World", rm.GetString ("HelloWorld"), "#B2");
			rm.ReleaseAllResources ();
		}

		[Test]
		[Category ("Globalization")]
		[Category ("StackWalks")]
		[Category ("NotWasm")]
		public void TestSatellites ()
		{
			ResourceManager manager = new ResourceManager("Resources", GetType ().Assembly);
			
			Assert.AreEqual ("Hei", manager.GetString ("Hello", new CultureInfo ("nn-NO")), "nn-NO");
			Assert.AreEqual ("Hola", manager.GetString ("Hello", new CultureInfo ("es-ES")), "es-ES");
			Assert.AreEqual ("Hello", manager.GetString ("Hello", new CultureInfo ("en-US")), "en-US");
		}		

		class MockResourceManager : ResourceManager
		{
			public MockResourceManager ()
			{
			}

			public MockResourceManager (Type resourceSource) : base (resourceSource)
			{
			}

			public MockResourceManager (string baseName, Assembly assembly)
				: base (baseName, assembly)
			{
			}

			public MockResourceManager (string baseName, Assembly assembly, Type usingResourceSet)
				: base (baseName, assembly, usingResourceSet)
			{
			}