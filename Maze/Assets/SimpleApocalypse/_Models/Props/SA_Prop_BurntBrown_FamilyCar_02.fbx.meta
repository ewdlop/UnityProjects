!= null) {
                PropertyValues.Clear();
            }

            foreach (SettingsProperty sp in Properties) {
                PropertyChangedEventArgs pe = new PropertyChangedEventArgs(sp.Name);
                OnPropertyChanged(this, pe);
            }
        }

        /// <devdoc>
        ///     Calls Reset on the providers.
        ///     Providers must implement IApplicationSettingsProvider to support this.
        /// </devdoc>
        [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")]
        public void Reset() {
            if (Properties != null) {
                foreach(SettingsProvider provider in Providers) {
                    IApplicationSettingsProvider clientProv = provider as IApplicationSettingsProvider;
                    if (clientProv != null) {
                        clientProv.Reset(Context);
                    }
                }
            }

            Reload();
        }

        /// <devdoc>
        ///     Overriden from SettingsBase to support validation event.
        /// </devdoc>
        public override void Save() {
            CancelEventArgs e= new CancelEventArgs(false);
            OnSettingsSaving(this, e);

            if (!e.Cancel) {
                base.Save();
            }
        }

        /// <devdoc>
        ///     Overriden from SettingsBase to support validation event.
        /// </devdoc>
        public override object this[string propertyName] {
            get {
                if (IsSynchronized) {
                    lock (this) {
                        return GetPropertyValue(propertyName);
                    }
                }
  