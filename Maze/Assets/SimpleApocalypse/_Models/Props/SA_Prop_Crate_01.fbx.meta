 (string.Compare(name, "dnsResolveEx", StringComparison.Ordinal)==0) {
	                        type = typeof(string);
	                    }
	                    else if (string.Compare(name, "isResolvableEx", StringComparison.Ordinal)==0) {
	                        type = typeof(bool);
	                    }
	                    else if (string.Compare(name, "myIpAddressEx", StringComparison.Ordinal)==0) {
	                        type = typeof(string);
	                    }
	                    else if (string.Compare(name, "isInNetEx", StringComparison.Ordinal)==0) {
	                        type = typeof(bool);
	                    }                    
	                    else if (string.Compare(name, "sortIpAddressList", StringComparison.Ordinal)==0) {
	                        type = typeof(string);
	                    }                    
	                    else if (string.Compare(name, "getClientVersion", StringComparison.Ordinal)==0) {
	                        type = typeof(string);
	                    }                    
					}                                        
                    GlobalLog.Print("MyMethodInfo::ReturnType() name:" + name + " type:" + type.FullName);
                    return type;
                }
            }
            // used by JScript
            public override ICustomAttributeProvider ReturnTypeCustomAttributes {
                get { 
                    GlobalLog.Print("MyMethodInfo::ReturnTypeCustomAttributes()");
                    return null;
                }
            }
            public override RuntimeMethodHandle MethodHandle {
                get { 
                    Globa