tion.Demand, Flags=System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]
    public partial class BorderSidesEditor : System.Drawing.Design.UITypeEditor
    {
        public BorderSidesEditor() { }
        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value) { throw null; }
        public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    public partial class ComponentDocumentDesigner : System.ComponentModel.Design.ComponentDesigner, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IRootDesigner, System.ComponentModel.Design.ITypeDescriptorFilterService, System.Drawing.Design.IToolboxUser, System.IDisposable
    {
        public ComponentDocumentDesigner() { }
        public System.Windows.Forms.Control Control { get { throw null; } }
        System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get { throw null; } }
        public bool TrayAutoArrange { get { throw null; } set { } }
        public bool TrayLargeIcon { get { throw null; } set { } }
        protected override void Dispose(bool disposing) { }
        protected virtual bool GetToolSupported(System.Drawing.Design.ToolboxItem tool) { throw null; }
        public override void Initialize(System.ComponentModel.IComponent component) { }
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
        object System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology technology) { throw null; }
        bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent component, System.Collections.IDictionary attributes) { throw null; }
        bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent component, System.Collections.IDictionary events) { throw null; }
        bool System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent component, System.Collections.IDictionary properties) { throw null; }
        bool System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem tool) { throw null; }
        void System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem tool) { }
    }
    [System.ComponentModel.DesignTimeVisibleAttribute(false)]
    [System.ComponentModel.ProvidePropertyAttribute("Location", typeof(System.ComponentModel.IComponent))]
    [System.ComponentModel.ProvidePropertyAttribute("TrayLocation", typeof(System.ComponentModel.IComponent))]
    [System.ComponentModel.ToolboxItemAttribute(false)]
    public partial class ComponentTray : System.Windows.Forms.ScrollableControl, System.ComponentModel.IExtenderProvider
    {
        public ComponentTray(System.ComponentModel.Design.IDesigner mainDesigner, System.IServiceProvider serviceProvider) { }
        public bool AutoArrange { get { throw null; } set { } }
        public int ComponentCount { get { throw null; } }
        public bool ShowLargeIcons { get { throw null; } set { } }
        public virtual void AddComponent(System.ComponentModel.IComponent component) { }
        protected virtual bool CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem tool) { throw null; }
        protected virtual bool CanDisplayComponent(System.ComponentModel.IComponent component) { throw null; }
        public void CreateComponentFromTool(System.Drawing.Design.ToolboxItem tool) { }
        protected void DisplayError(System.Exception e) { }
        protected override void Dispose(bool disposing) { }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.CategoryAttribute("Layout")]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.ComponentModel.DesignOnlyAttribute(true)]
        [System.ComponentModel.LocalizableAttribute(false)]
        public System.Drawing.Point GetLocation(System.ComponentModel.IComponent receiver) { throw null; }
        public System.ComponentModel.IComponent GetNextComponent(System.ComponentModel.IComponent component, bool forward) { throw null; }
        protected override object GetService(System.Type serviceType) { throw null; }
        [System.ComponentModel.BrowsableAttribute(false)]
        [System.ComponentModel.CategoryAttribute("Layout")]
        [System.ComponentModel.DesignOnlyAttribute(true)]
        [System.ComponentModel.LocalizableAttribute(false)]
        public System.Drawing.Point GetTrayLocation(System.ComponentModel.IComponent receiver) { throw null; }
        public bool IsTrayComponent(System.ComponentModel.IComponent comp) { throw null; }
        protected override void OnDragDrop(System.Windows.Forms.DragEventArgs de) { }
        protected override void OnDragEnter(System.Windows.Forms.DragEventArgs de) { }
        protected override void OnDragLeave(System.EventArgs e) { }
        protected override void OnDragOver(System.Windows.Forms.DragEventArgs de) { }
        protected override void OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs gfevent) { }
        protected override void OnLayout(System.Windows.Forms.LayoutEventArgs levent) { }
        protected virtual void OnLostCapture() { }
        protected override void OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnMouseDown(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnMouseMove(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnMouseUp(System.Windows.Forms.MouseEventArgs e) { }
        protected override void OnPaint(System.Windows.Forms.PaintEventArgs pe) { }
        protected virtual void OnSetCursor() { }
        public virtual void RemoveComponent(System.ComponentModel.IComponent component) { }
        public void SetLocation(System.ComponentModel.IComponent receiver, System.Drawing.Point location) { }
        public void SetTrayLocation(System.ComponentModel.IComponent receiver, System.Drawing.Point location) { }
        bool System.ComponentModel.IExtenderProvider.CanExtend(object component) { throw null; }
        protected override void WndProc(ref System.Windows.Forms.Message m) { }
    }
    public partial class ControlDesigner : System.ComponentModel.Design.ComponentDesigner
    {
        protected System.Windows.Forms.AccessibleObject accessibilityObj;
        protected static readonly System.Drawing.Point InvalidPoint;
        public ControlDesigner() { }
        public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get { throw null; } }
        public override System.Collections.ICollection AssociatedComponents { get { throw null; } }
        public bool AutoResizeHandles { get { throw null; } set { } }
        protected System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get { throw null; } }
        public virtual System.Windows.Forms.Control Control { get { throw null; } }
        protected virtual bool EnableDragRect { get { throw null; } }
        protected override System.ComponentModel.InheritanceAttribute InheritanceAttribute { get { throw null; } }
        protected override System.ComponentModel.IComponent ParentComponent { get { throw null; } }
        public virtual bool ParticipatesWithSnapLines { get { throw null; } }
        public virtual System.Windows.Forms.Design.SelectionRules SelectionRules { get { throw null; } }
        public virtual System.Collections.IList SnapLines { get { throw null; } }
        protected void BaseWndProc(ref System.Windows.Forms.Message m) { }
        public virtual bool CanBeParentedTo(System.ComponentModel.Design.IDesigner parentDesigner) { throw null; }
        protected void DefWndProc(ref System.Windows.Forms.Message m) { }
        protected void DisplayError(System.Exception e) { }
        protected override void Dispose(bool disposing) { }
        protected bool EnableDesignMode(System.Windows.Forms.Control child, string name) { throw null; }
        protected void EnableDragDrop(bool value) { }
        protected virtual System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) { throw null; }
        public virtual System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) { throw null; }
        protected virtual bool GetHitTest(System.Drawing.Point point) { throw null; }
        protected void HookChildControls(System.Windows.Forms.Control firstChild) { }
        public override void Initialize(System.ComponentModel.IComponent component) { }
        public override void InitializeExistingComponent(System.Collections.IDictionary defaultValues) { }
        public override void InitializeNewComponent(System.Collections.IDictionary defaultValues) { }
        public virtual System.Windows.Forms.Design.ControlDesigner InternalControlDesigner(int internalControlIndex) { throw null; }
        public virtual int NumberOfInternalControlDesigners() { throw null; }
        protected virtual void OnContextMenu(int x, int y) { }
        protected virtual void OnCreateHandle() { }
        protected virtual void OnDragComplete(System.Windows.Forms.DragEventArgs de) { }
        protected virtual void OnDragDrop(System.Windows.Forms.DragEventArgs de) { }
        protected virtual void OnDragEnter(System.Windows.Forms.DragEventArgs de) { }
        protected virtual void OnDragLeave(System.EventArgs e) { }
        protected virtual void OnDragOver(System.Windows.Forms.DragEventArgs de) { }
        protected virtual void OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs e) { }
        protected virtual void OnMouseDragBegin(int x, int y) { }
        protected virtual void OnMouseDragEnd(bool cancel) { }
        protected virtual void OnMouseDragMove(int x, int y) { }
        protected virtual void OnMouseEnter() { }
        protected virtual void OnMouseHover() { }
        protected virtual void OnMouseLeave() { }
        protected virtual void OnPaintAdornments(System.Windows.Forms.PaintEventArgs pe) { }
        [System.ObsoleteAttribute("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")]
        public override void OnSetComponentDefaults() { }
        protected virtual void OnSetCursor() { }
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
        protected void UnhookChildControls(System.Windows.Forms.Control firstChild) { }
        protected virtual void WndProc(ref System.Windows.Forms.Message m) { }
        [System.Runtime.InteropServices.ComVisibleAttribute(true)]
        public partial class ControlDesignerAccessibleObject : System.Windows.Forms.AccessibleObject
        {
            public ControlDesignerAccessibleObject(System.Windows.Forms.Design.ControlDesigner designer, System.Windows.Forms.Control control) { }
            public override System.Drawing.Rectangle Bounds { get { throw null; } }
            public override string DefaultAction { get { throw null; } }
            public override string Description { get { throw null; } }
            public override string Name { get { throw null; } }
            public override System.Windows.Forms.AccessibleObject Parent { get { throw null; } }
            public override System.Windows.Forms.AccessibleRole Role { get { throw null; } }
            public override System.Windows.Forms.AccessibleStates State { get { throw null; } }
            public override string Value { get { throw null; } }
            public override System.Windows.Forms.AccessibleObject GetChild(int index) { throw null; }
            public override int GetChildCount() { throw null; }
            public override System.Windows.Forms.AccessibleObject GetFocused() { throw null; }
            public override System.Windows.Forms.AccessibleObject GetSelected() { throw null; }
            public override System.Windows.Forms.AccessibleObject HitTest(int x, int y) { throw null; }
        }
    }
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public partial class DesignerOptions
    {
        public DesignerOptions() { }
        [System.ComponentModel.BrowsableAttribute(false)]
        public virtual bool EnableInSituEditing { get { throw null; } set { } }
        public virtual System.Drawing.Size GridSize { get { throw null; } set { } }
        public virtual bool ObjectBoundSmartTagAutoShow { get { throw null; } set { } }
        public virtual bool ShowGrid { get { throw null; } set { } }
        public virtual bool SnapToGrid { get { throw null; } set { } }
        public virtual bool UseOptimizedCodeGeneration { get { throw null; } set { } }
        public virtual bool UseSmartTags { get { throw null; } set { } }
        public virtual bool UseSnapLines { get { throw null; } set { } }
    }
    public sealed partial class DockEditor : System.Drawing.Design.UITypeEditor
    {
        public DockEditor() { }
        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value) { throw null; }
        public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    [System.ComponentModel.ToolboxItemFilterAttribute("System.Windows.Forms")]
    public partial class DocumentDesigner : System.Windows.Forms.Design.ScrollableControlDesigner, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IRootDesigner, System.Drawing.Design.IToolboxUser, System.IDisposable
    {
        protected System.Windows.Forms.Design.IMenuEditorService menuEditorService;
        public DocumentDesigner() { }
        public override System.Windows.Forms.Design.SelectionRules SelectionRules { get { throw null; } }
        System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get { throw null; } }
        protected override void Dispose(bool disposing) { }
        protected virtual void EnsureMenuEditorService(System.ComponentModel.IComponent c) { }
        public override System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) { throw null; }
        protected virtual bool GetToolSupported(System.Drawing.Design.ToolboxItem tool) { throw null; }
        public override void Initialize(System.ComponentModel.IComponent component) { }
        protected override void OnContextMenu(int x, int y) { }
        protected override void OnCreateHandle() { }
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
        object System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology technology) { throw null; }
        bool System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem tool) { throw null; }
        void System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem tool) { }
        protected virtual void ToolPicked(System.Drawing.Design.ToolboxItem tool) { }
        protected override void WndProc(ref System.Windows.Forms.Message m) { }
    }
    public sealed partial class EventHandlerService
    {
        public EventHandlerService(System.Windows.Forms.Control focusWnd) { }
        public System.Windows.Forms.Control FocusWindow { get { throw null; } }
        public event System.EventHandler EventHandlerChanged { add { } remove { } }
        public object GetHandler(System.Type handlerType) { throw null; }
        public void PopHandler(object handler) { }
        public void PushHandler(object handler) { }
    }
    public partial class FileNameEditor : System.Drawing.Design.UITypeEditor
    {
        public FileNameEditor() { }
        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value) { throw null; }
        public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        protected virtual void InitializeDialog(System.Windows.Forms.OpenFileDialog openFileDialog) { }
    }
    public partial class FolderNameEditor : System.Drawing.Design.UITypeEditor
    {
        public FolderNameEditor() { }
        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value) { throw null; }
        public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        protected virtual void InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser folderBrowser) { }
        protected sealed partial class FolderBrowser : System.ComponentModel.Component
        {
            public FolderBrowser() { }
            public string Description { get { throw null; } set { } }
            public string DirectoryPath { get { throw null; } }
            public System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder StartLocation { get { throw null; } set { } }
            public System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles Style { get { throw null; } set { } }
            public System.Windows.Forms.DialogResult ShowDialog() { throw null; }
            public System.Windows.Forms.DialogResult ShowDialog(System.Windows.Forms.IWin32Window owner) { throw null; }
        }
        protected enum FolderBrowserFolder
        {
            Desktop = 0,
            Favorites = 6,
            MyComputer = 17,
            MyDocuments = 5,
            MyPictures = 39,
            NetAndDialUpConnections = 49,
            NetworkNeighborhood = 18,
            Printers = 4,
            Recent = 8,
            SendTo = 9,
            StartMenu = 11,
            Templates = 21,
        }
        [System.FlagsAttribute]
        protected enum FolderBrowserStyles
        {
            BrowseForComputer = 4096,
            BrowseForEverything = 16384,
            BrowseForPrinter = 8192,
            RestrictToDomain = 2,
            RestrictToFilesystem = 1,
            RestrictToSubfolders = 8,
            ShowTextBox = 16,
        }
    }
    public partial interface IContainsThemedScrollbarWindows
    {
        System.Collections.IEnumerable ThemedScrollbarWindows();
    }
    public partial class ImageListCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializer
    {
        public ImageListCodeDomSerializer() { }
        public override object Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object codeObject) { throw null; }
        public override object Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) { throw null; }
    }
    public partial class ImageListImageEditor : System.Drawing.Design.ImageEditor
    {
        public ImageListImageEditor() { }
        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value) { throw null; }
        protected override string GetFileDialogDescription() { throw null; }
        protected override System.Type[] GetImageExtenders() { throw null; }
        public override bool GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override void PaintValue(System.Drawing.Design.PaintValueEventArgs e) { }
    }
    public partial interface IMenuEditorService
    {
        System.Windows.Forms.Menu GetMenu();
        bool IsActive();
        bool MessageFilter(ref System.Windows.Forms.Message m);
        void SetMenu(System.Windows.Forms.Menu menu);
        void SetSelection(System.Windows.Forms.MenuItem item);
    }
    public abstract partial class MaskDescriptor
    {
        protected MaskDescriptor() { }
        public virtual System.Globalization.CultureInfo Culture { get { throw null; } }
        public abstract string Mask { get; }
        public abstract string Name { get; }
        public abstract string Sample { get; }
        public abstract System.Type ValidatingType { get; }
        public override bool Equals(object maskDescriptor) { throw null; }
        public override int GetHashCode() { throw null; }
        public static bool IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor maskDescriptor) { throw null; }
        public static bool IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor maskDescriptor, out string validationErrorDescription) { throw null; }
        public override string ToString() { throw null; }
    }
    public sealed partial class MenuCommands : System.ComponentModel.Design.StandardCommands
    {
        public static readonly System.ComponentModel.Design.CommandID ComponentTrayMenu;
        public static readonly System.ComponentModel.Design.CommandID ContainerMenu;
        public static readonly System.ComponentModel.Design.CommandID DesignerProperties;
        public static readonly System.ComponentModel.Design.CommandID EditLabel;
        public static readonly System.ComponentModel.Design.CommandID KeyCancel;
        public static readonly System.ComponentModel.Design.CommandID KeyDefaultAction;
        public static readonly System.ComponentModel.Design.CommandID KeyEnd;
        public static readonly System.ComponentModel.Design.CommandID KeyHome;
        public static readonly System.ComponentModel.Design.CommandID KeyInvokeSmartTag;
        public static readonly System.ComponentModel.Design.CommandID KeyMoveDown;
        public static readonly System.ComponentModel.Design.CommandID KeyMoveLeft;
        public static readonly System.ComponentModel.Design.CommandID KeyMoveRight;
        public static readonly System.ComponentModel.Design.CommandID KeyMoveUp;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeDown;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeHeightDecrease;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeHeightIncrease;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeLeft;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeRight;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeUp;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeWidthDecrease;
        public static readonly System.ComponentModel.Design.CommandID KeyNudgeWidthIncrease;
        public static readonly System.ComponentModel.Design.CommandID KeyReverseCancel;
        public static readonly System.ComponentModel.Design.CommandID KeySelectNext;
        public static readonly System.ComponentModel.Design.CommandID KeySelectPrevious;
        public static readonly System.ComponentModel.Design.CommandID KeyShiftEnd;
        public static readonly System.ComponentModel.Design.CommandID KeyShiftHome;
        public static readonly System.ComponentModel.Design.CommandID KeySizeHeightDecrease;
        public static readonly System.ComponentModel.Design.CommandID KeySizeHeightIncrease;
        public static readonly System.ComponentModel.Design.CommandID KeySizeWidthDecrease;
        public static readonly System.ComponentModel.Design.CommandID KeySizeWidthIncrease;
        public static readonly System.ComponentModel.Design.CommandID KeyTabOrderSelect;
        public static readonly System.ComponentModel.Design.CommandID SelectionMenu;
        public static readonly System.ComponentModel.Design.CommandID SetStatusRectangle;
        public static readonly System.ComponentModel.Design.CommandID SetStatusText;
        public static readonly System.ComponentModel.Design.CommandID TraySelectionMenu;
        public MenuCommands() { }
    }
    public partial class ParentControlDesigner : System.Windows.Forms.Design.ControlDesigner
    {
        public ParentControlDesigner() { }
        protected virtual bool AllowControlLasso { get { throw null; } }
        protected virtual bool AllowGenericDragBox { get { throw null; } }
        protected internal virtual bool AllowSetChildIndexOnDrop { get { throw null; } }
        protected virtual System.Drawing.Point DefaultControlLocation { get { throw null; } }
        protected virtual bool DrawGrid { get { throw null; } set { } }
        protected override bool EnableDragRect { get { throw null; } }
        protected System.Drawing.Size GridSize { get { throw null; } set { } }
        protected System.Drawing.Design.ToolboxItem MouseDragTool { get { throw null; } }
        public override System.Collections.IList SnapLines { get { throw null; } }
        protected void AddPaddingSnapLines(ref System.Collections.ArrayList snapLines) { }
        protected internal virtual bool CanAddComponent(System.ComponentModel.IComponent component) { throw null; }
        public virtual bool CanParent(System.Windows.Forms.Control control) { throw null; }
        public virtual bool CanParent(System.Windows.Forms.Design.ControlDesigner controlDesigner) { throw null; }
        protected void CreateTool(System.Drawing.Design.ToolboxItem tool) { }
        protected void CreateTool(System.Drawing.Design.ToolboxItem tool, System.Drawing.Point location) { }
        protected void CreateTool(System.Drawing.Design.ToolboxItem tool, System.Drawing.Rectangle bounds) { }
        protected virtual System.ComponentModel.IComponent[] CreateToolCore(System.Drawing.Design.ToolboxItem tool, int x, int y, int width, int height, bool hasLocation, bool hasSize) { throw null; }
        protected override void Dispose(bool disposing) { }
        protected System.Windows.Forms.Control GetControl(object component) { throw null; }
        protected override System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) { throw null; }
        public override System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) { throw null; }
        protected virtual System.Windows.Forms.Control GetParentForComponent(System.ComponentModel.IComponent component) { throw null; }
        protected System.Drawing.Rectangle GetUpdatedRect(System.Drawing.Rectangle originalRect, System.Drawing.Rectangle dragRect, bool updateSize) { throw null; }
        public override void Initialize(System.ComponentModel.IComponent component) { }
        public override void InitializeNewComponent(System.Collections.IDictionary defaultValues) { }
        protected static void InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner toInvoke, System.Drawing.Design.ToolboxItem tool) { }
        protected override void OnDragComplete(System.Windows.Forms.DragEventArgs de) { }
        protected override void OnDragDrop(System.Windows.Forms.DragEventArgs de) { }
        protected override void OnDragEnter(System.Windows.Forms.DragEventArgs de) { }
        protected override void OnDragLeave(System.EventArgs e) { }
        protected override void OnDragOver(System.Windows.Forms.DragEventArgs de) { }
        protected override void OnMouseDragBegin(int x, int y) { }
        protected override void OnMouseDragEnd(bool cancel) { }
        protected override void OnMouseDragMove(int x, int y) { }
        protected override void OnPaintAdornments(System.Windows.Forms.PaintEventArgs pe) { }
        protected override void OnSetCursor() { }
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
    }
    public partial class ScrollableControlDesigner : System.Windows.Forms.Design.ParentControlDesigner
    {
        public ScrollableControlDesigner() { }
        protected override bool GetHitTest(System.Drawing.Point pt) { throw null; }
        protected override void WndProc(ref System.Windows.Forms.Message m) { }
    }
    [System.FlagsAttribute]
    public enum SelectionRules
    {
        AllSizeable = 15,
        BottomSizeable = 2,
        LeftSizeable = 4,
        Locked = -2147483648,
        Moveable = 268435456,
        None = 0,
        RightSizeable = 8,
        TopSizeable = 1,
        Visible = 1073741824,
    }
    [System.Security.SecurityCriticalAttribute]
    [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, Flags=System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]
    public partial class ShortcutKeysEditor : System.Drawing.Design.UITypeEditor
    {
        public ShortcutKeysEditor() { }
        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value) { throw null; }
        public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    public enum ThemedScrollbarMode
    {
        All = 1,
        None = 2,
        OnlyTopLevel = 3,
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public partial struct ThemedScrollbarWindow
    {
        public System.IntPtr Handle;
        public System.Windows.Forms.Design.ThemedScrollbarMode Mode;
    }
    public partial class WindowsFormsDesignerOptionService : System.ComponentModel.Design.DesignerOptionService
    {
        public WindowsFormsDesignerOptionService() { }
        public virtual System.Windows.Forms.Design.DesignerOptions CompatibilityOptions { get { throw null; } }
        protected override void PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection options) { }
    }
}
namespace System.Windows.Forms.Design.Behavior
{
    public sealed partial class Adorner
    {
        public Adorner() { }
        public System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get { throw null; } set { } }
        public bool Enabled { get { throw null; } set { } }
        public System.Windows.Forms.Design.Behavior.GlyphCollection Glyphs { get { throw null; } }
        public void Invalidate() { }
        public void Invalidate(System.Drawing.Rectangle rectangle) { }
        public void Invalidate(System.Drawing.Region region) { }
    }
    public abstract partial class Behavior
    {
        protected Behavior() { }
        protected Behavior(bool callParentBehavior, System.Windows.Forms.Design.Behavior.BehaviorService behaviorService) { }
        public virtual System.Windows.Forms.Cursor Cursor { get { throw null; } }
        public virtual bool DisableAllCommands { get { throw null; } }
        public virtual System.ComponentModel.Design.MenuCommand FindCommand(System.ComponentModel.Design.CommandID commandId) { throw null; }
        public virtual void OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e) { }
        public virtual void OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e) { }
        public virtual void OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph g, System.EventArgs e) { }
        public virtual void OnDragOver(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.DragEventArgs e) { }
        public virtual void OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.GiveFeedbackEventArgs e) { }
        public virtual void OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph g, System.EventArgs e) { }
        public virtual bool OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc) { throw null; }
        public virtual bool OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc) { throw null; }
        public virtual bool OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph g) { throw null; }
        public virtual bool OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph g, System.Drawing.Point mouseLoc) { throw null; }
        public virtual bool OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph g) { throw null; }
        public virtual bool OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button, System.Drawing.Point mouseLoc) { throw null; }
        public virtual bool OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.MouseButtons button) { throw null; }
        public virtual void OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph g, System.Windows.Forms.QueryContinueDragEventArgs e) { }
    }
    public partial class BehaviorDragDropEventArgs : System.EventArgs
    {
        public BehaviorDragDropEventArgs(System.Collections.ICollection dragComponents) { }
        public System.Collections.ICollection DragComponents { get { throw null; } }
    }
    public delegate void BehaviorDragDropEventHandler(object sender, System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs e);
    public sealed partial class BehaviorService : System.IDisposable
    {
        internal BehaviorService() { }
        public System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection Adorners { get { throw null; } }
        public System.Drawing.Graphics AdornerWindowGraphics { get { throw null; } }
        public System.Windows.Forms.Design.Behavior.Behavior CurrentBehavior { get { throw null; } }
        public event System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler BeginDrag { add { } remove { } }
        public event System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler EndDrag { add { } remove { } }
        public event System.EventHandler Synchronize { add { } remove { } }
        public System.Drawing.Point AdornerWindowPointToScreen(System.Drawing.Point p) { throw null; }
        public System.Drawing.Point AdornerWindowToScreen() { throw null; }
        public System.Drawing.Rectangle ControlRectInAdornerWindow(System.Windows.Forms.Control c) { throw null; }
        public System.Drawing.Point ControlToAdornerWindow(System.Windows.Forms.Control c) { throw null; }
        public void Dispose() { }
        public System.Windows.Forms.Design.Behavior.Behavior GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior behavior) { throw null; }
        public void Invalidate() { }
        public void Invalidate(System.Drawing.Rectangle rect) { }
        public void Invalidate(System.Drawing.Region r) { }
        public System.Drawing.Point MapAdornerWindowPoint(System.IntPtr handle, System.Drawing.Point pt) { throw null; }
        public System.Windows.Forms.Design.Behavior.Behavior PopBehavior(System.Windows.Forms.Design.Behavior.Behavior behavior) { throw null; }
        public void PushBehavior(System.Windows.Forms.Design.Behavior.Behavior behavior) { }
        public void PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior behavior) { }
        public System.Drawing.Point ScreenToAdornerWindow(System.Drawing.Point p) { throw null; }
        public void SyncSelection() { }
    }
    public sealed partial class BehaviorServiceAdornerCollection : System.Collections.CollectionBase
    {
        public BehaviorServiceAdornerCollection(System.Windows.Forms.Design.Behavior.Adorner[] value) { }
        public BehaviorServiceAdornerCollection(System.Windows.Forms.Design.Behavior.BehaviorService behaviorService) { }
        public BehaviorServiceAdornerCollection(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection value) { }
        public System.Windows.Forms.Design.Behavior.Adorner this[int index] { get { throw null; } set { } }
        public int Add(System.Windows.Forms.Design.Behavior.Adorner value) { throw null; }
        public void AddRange(System.Windows.Forms.Design.Behavior.Adorner[] value) { }
        public void AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection value) { }
        public bool Contains(System.Windows.Forms.Design.Behavior.Adorner value) { throw null; }
        public void CopyTo(System.Windows.Forms.Design.Behavior.Adorner[] array, int index) { }
        public new System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator GetEnumerator() { throw null; }
        public int IndexOf(System.Windows.Forms.Design.Behavior.Adorner value) { throw null; }
        public void Insert(int index, System.Windows.Forms.Design.Behavior.Adorner value) { }
        public void Remove(System.Windows.Forms.Design.Behavior.Adorner value) { }
    }
    public partial class BehaviorServiceAdornerCollectionEnumerator : System.Collections.IEnumerator
    {
        public BehaviorServiceAdornerCollectionEnumerator(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection mappings) { }
        public System.Windows.Forms.Design.Behavior.Adorner Current { get { throw null; } }
        object System.Collections.IEnumerator.Current { get { throw null; } }
        public bool MoveNext() { throw null; }
        public void Reset() { }
        bool System.Collections.IEnumerator.MoveNext() { throw null; }
        void System.Collections.IEnumerator.Reset() { }
    }
    public partial class ComponentGlyph : System.Windows.Forms.Design.Behavior.Glyph
    {
        public ComponentGlyph(System.ComponentModel.IComponent relatedComponent) : base (default(System.Windows.Forms.Design.Behavior.Behavior)) { }
        public ComponentGlyph(System.ComponentModel.IComponent relatedComponent, System.Windows.Forms.Design.Behavior.Behavior behavior) : base (default(System.Windows.Forms.Design.Behavior.Behavior)) { }
        public System.ComponentModel.IComponent RelatedComponent { get { throw null; } }
        public override System.Windows.Forms.Cursor GetHitTest(System.Drawing.Point p) { throw null; }
        public override void Paint(System.Windows.Forms.PaintEventArgs pe) { }
    }
    public partial class ControlBodyGlyph : System.Windows.Forms.Design.Behavior.ComponentGlyph
    {
        public ControlBodyGlyph(System.Drawing.Rectangle bounds, System.Windows.Forms.Cursor cursor, System.ComponentModel.IComponent relatedComponent, System.Windows.Forms.Design.Behavior.Behavior behavior) : base (default(System.ComponentModel.IComponent), default(System.Windows.Forms.Design.Behavior.Behavior)) { }
        public ControlBodyGlyph(System.Drawing.Rectangle bounds, System.Windows.Forms.Cursor cursor, System.ComponentModel.IComponent relatedComponent, System.Windows.Forms.Design.ControlDesigner designer) : base (default(System.ComponentModel.IComponent), default(System.Windows.Forms.Design.Behavior.Behavior)) { }
        public override System.Drawing.Rectangle Bounds { get { throw null; } }
        public override System.Windows.Forms.Cursor GetHitTest(System.Drawing.Point p) { throw null; }
    }
    public abstract partial class Glyph
    {
        protected Glyph(System.Windows.Forms.Design.Behavior.Behavior behavior) { }
        public virtual System.Windows.Forms.Design.Behavior.Behavior Behavior { get { throw null; } }
        public virtual System.Drawing.Rectangle Bounds { get { throw null; } }
        public abstract System.Windows.Forms.Cursor GetHitTest(System.Drawing.Point p);
        public abstract void Paint(System.Windows.Forms.PaintEventArgs pe);
        protected void SetBehavior(System.Windows.Forms.Design.Behavior.Behavior behavior) { }
    }
    public partial class GlyphCollection : System.Collections.CollectionBase
    {
        public GlyphCollection() { }
        public GlyphCollection(System.Windows.Forms.Design.Behavior.GlyphCollection value) { }
        public GlyphCollection(System.Windows.Forms.Design.Behavior.Glyph[] value) { }
        public System.Windows.Forms.Design.Behavior.Glyph this[int index] { get { throw null; } set { } }
        public int Add(System.Windows.Forms.Design.Behavior.Glyph value) { throw null; }
        public void AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection v