.CompilerServices.CompilerGeneratedAttribute]set { } }
        public string MulticastInterfaceId { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public int SocketReceiveBufferSize { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
        public int TimeToLive { [System.Runtime.CompilerServices.CompilerGeneratedAttribute]get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute]set { } }
    }
}
namespace System.ServiceModel.Discovery.Configuration
{
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.ServiceModel.Configuration.ChannelEndpointElement), AddItemName="endpoint")]
    public sealed partial class AnnouncementChannelEndpointElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Configuration.ChannelEndpointElement>
    {
        public AnnouncementChannelEndpointElementCollection() { }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
    }
    public partial class AnnouncementEndpointCollectionElement : System.ServiceModel.Configuration.StandardEndpointCollectionElement<System.ServiceModel.Discovery.AnnouncementEndpoint, System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement>
    {
        public AnnouncementEndpointCollectionElement() { }
    }
    public partial class AnnouncementEndpointElement : System.ServiceModel.Configuration.StandardEndpointElement
    {
        public AnnouncementEndpointElement() { }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("discoveryVersion", DefaultValue="WSDiscovery11")]
        public System.ServiceModel.Discovery.DiscoveryVersion DiscoveryVersion { get { throw null; } set { } }
        protected internal override System.Type EndpointType { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.TimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxAnnouncementDelay", DefaultValue="00:00:00")]
        public System.TimeSpan MaxAnnouncementDelay { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected internal override System.ServiceModel.Description.ServiceEndpoint CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription contractDescription) { throw null; }
        protected internal override void InitializeFrom(System.ServiceModel.Description.ServiceEndpoint endpoint) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement serviceEndpointElement) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
    }
    public sealed partial class ContractTypeNameElement : System.Configuration.ConfigurationElement
    {
        public ContractTypeNameElement() { }
        public ContractTypeNameElement(string name, string ns) { }
        [System.Configuration.ConfigurationPropertyAttribute("name", Options=(System.Configuration.ConfigurationPropertyOptions)(6))]
        [System.Configuration.StringValidatorAttribute(MinLength=0)]
        public string Name { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("namespace", DefaultValue="http://tempuri.org/", Options=(System.Configuration.ConfigurationPropertyOptions)(4))]
        public string Namespace { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.ServiceModel.Discovery.Configuration.ContractTypeNameElement))]
    public sealed partial class ContractTypeNameElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Discovery.Configuration.ContractTypeNameElement>
    {
        public ContractTypeNameElementCollection() { }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
    }
    public sealed partial class DiscoveryClientElement : System.ServiceModel.Configuration.BindingElementExtensionElement
    {
        public DiscoveryClientElement() { }
        public override System.Type BindingElementType { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("endpoint")]
        public System.ServiceModel.Configuration.ChannelEndpointElement DiscoveryEndpoint { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("findCriteria")]
        public System.ServiceModel.Discovery.Configuration.FindCriteriaElement FindCriteria { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        public override void ApplyConfiguration(System.ServiceModel.Channels.BindingElement bindingElement) { }
        public override void CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement from) { }
        protected internal override System.ServiceModel.Channels.BindingElement CreateBindingElement() { throw null; }
        protected internal override void InitializeFrom(System.ServiceModel.Channels.BindingElement bindingElement) { }
    }
    public sealed partial class DiscoveryClientSettingsElement : System.Configuration.ConfigurationElement
    {
        public DiscoveryClientSettingsElement() { }
        [System.Configuration.ConfigurationPropertyAttribute("endpoint")]
        public System.ServiceModel.Configuration.ChannelEndpointElement DiscoveryEndpoint { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("findCriteria")]
        public System.ServiceModel.Discovery.Configuration.FindCriteriaElement FindCriteria { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
    }
    public partial class DiscoveryEndpointCollectionElement : System.ServiceModel.Configuration.StandardEndpointCollectionElement<System.ServiceModel.Discovery.DiscoveryEndpoint, System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement>
    {
        public DiscoveryEndpointCollectionElement() { }
    }
    public partial class DiscoveryEndpointElement : System.ServiceModel.Configuration.StandardEndpointElement
    {
        public DiscoveryEndpointElement() { }
        [System.Configuration.ConfigurationPropertyAttribute("discoveryMode", DefaultValue=(System.ServiceModel.Discovery.ServiceDiscoveryMode)(1))]
        public System.ServiceModel.Discovery.ServiceDiscoveryMode DiscoveryMode { get { throw null; } set { } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("discoveryVersion", DefaultValue="WSDiscovery11")]
        public System.ServiceModel.Discovery.DiscoveryVersion DiscoveryVersion { get { throw null; } set { } }
        protected internal override System.Type EndpointType { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.TimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxResponseDelay", DefaultValue="00:00:00")]
        public System.TimeSpan MaxResponseDelay { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected internal override System.ServiceModel.Description.ServiceEndpoint CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription contractDescription) { throw null; }
        protected internal override void InitializeFrom(System.ServiceModel.Description.ServiceEndpoint endpoint) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement serviceEndpointElement) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
    }
    public partial class DiscoveryVersionConverter : System.ComponentModel.TypeConverter
    {
        public DiscoveryVersionConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) { throw null; }
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
    }
    public partial class DynamicEndpointCollectionElement : System.ServiceModel.Configuration.StandardEndpointCollectionElement<System.ServiceModel.Discovery.DynamicEndpoint, System.ServiceModel.Discovery.Configuration.DynamicEndpointElement>
    {
        public DynamicEndpointCollectionElement() { }
    }
    public sealed partial class DynamicEndpointElement : System.ServiceModel.Configuration.StandardEndpointElement
    {
        public DynamicEndpointElement() { }
        [System.Configuration.ConfigurationPropertyAttribute("discoveryClientSettings")]
        public System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement DiscoveryClientSettings { get { throw null; } }
        protected internal override System.Type EndpointType { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected internal override System.ServiceModel.Description.ServiceEndpoint CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription contractDescription) { throw null; }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement serviceEndpointElement) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
    }
    public sealed partial class EndpointDiscoveryElement : System.ServiceModel.Configuration.BehaviorExtensionElement
    {
        public EndpointDiscoveryElement() { }
        public override System.Type BehaviorType { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("types")]
        public System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection ContractTypeNames { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("enabled", DefaultValue=true)]
        public bool Enabled { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("extensions")]
        public System.ServiceModel.Configuration.XmlElementElementCollection Extensions { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("scopes")]
        public System.ServiceModel.Discovery.Configuration.ScopeElementCollection Scopes { get { throw null; } }
        protected internal override object CreateBehavior() { throw null; }
    }
    public sealed partial class FindCriteriaElement : System.Configuration.ConfigurationElement
    {
        public FindCriteriaElement() { }
        [System.Configuration.ConfigurationPropertyAttribute("types")]
        public System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection ContractTypeNames { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.TimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("duration", DefaultValue="00:00:20")]
        public System.TimeSpan Duration { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("extensions")]
        public System.ServiceModel.Configuration.XmlElementElementCollection Extensions { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("maxResults", DefaultValue=0)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=2147483647)]
        public int MaxResults { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("scopeMatchBy")]
        public System.Uri ScopeMatchBy { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("scopes")]
        public System.ServiceModel.Discovery.Configuration.ScopeElementCollection Scopes { get { throw null; } }
    }
    public sealed partial class ScopeElement : System.Configuration.ConfigurationElement
    {
        public ScopeElement() { }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.CallbackValidatorAttribute(CallbackMethodName="ScopeValidatorCallback", Type=typeof(System.ServiceModel.Discovery.Configuration.ScopeElement))]
        [System.Configuration.ConfigurationPropertyAttribute("scope", Options=(System.Configuration.ConfigurationPropertyOptions)(6))]
        [System.MonoTODOAttribute]
        public System.Uri Scope { get { throw null; } set { } }
    }
    [System.Configuration.ConfigurationCollectionAttribute(typeof(System.ServiceModel.Discovery.Configuration.ScopeElement))]
    public sealed partial class ScopeElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Discovery.Configuration.ScopeElement>
    {
        public ScopeElementCollection() { }
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) { throw null; }
    }
    public sealed partial class ServiceDiscoveryElement : System.ServiceModel.Configuration.BehaviorExtensionElement
    {
        public ServiceDiscoveryElement() { }
        [System.Configuration.ConfigurationPropertyAttribute("announcementEndpoints")]
        public System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection AnnouncementEndpoints { get { throw null; } }
        public override System.Type BehaviorType { get { throw null; } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        protected internal override object CreateBehavior() { throw null; }
    }
    public partial class UdpAnnouncementEndpointCollectionElement : System.ServiceModel.Configuration.StandardEndpointCollectionElement<System.ServiceModel.Discovery.UdpAnnouncementEndpoint, System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement>
    {
        public UdpAnnouncementEndpointCollectionElement() { }
    }
    public partial class UdpAnnouncementEndpointElement : System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement
    {
        public UdpAnnouncementEndpointElement() { }
        protected internal override System.Type EndpointType { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.TimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxAnnouncementDelay", DefaultValue="00:00:00.500")]
        public new System.TimeSpan MaxAnnouncementDelay { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("multicastAddress", DefaultValue="soap.udp://239.255.255.250:3702")]
        public System.Uri MulticastAddress { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("transportSettings")]
        public System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement TransportSettings { get { throw null; } }
        protected internal override System.ServiceModel.Description.ServiceEndpoint CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription contractDescription) { throw null; }
        protected internal override void InitializeFrom(System.ServiceModel.Description.ServiceEndpoint endpoint) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement serviceEndpointElement) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
    }
    public partial class UdpDiscoveryEndpointCollectionElement : System.ServiceModel.Configuration.StandardEndpointCollectionElement<System.ServiceModel.Discovery.UdpDiscoveryEndpoint, System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement>
    {
        public UdpDiscoveryEndpointCollectionElement() { }
    }
    public partial class UdpDiscoveryEndpointElement : System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement
    {
        public UdpDiscoveryEndpointElement() { }
        [System.Configuration.ConfigurationPropertyAttribute("discoveryMode", DefaultValue=(System.ServiceModel.Discovery.ServiceDiscoveryMode)(0))]
        public new System.ServiceModel.Discovery.ServiceDiscoveryMode DiscoveryMode { get { throw null; } set { } }
        protected internal override System.Type EndpointType { get { throw null; } }
        [System.ComponentModel.TypeConverterAttribute(typeof(System.ComponentModel.TimeSpanConverter))]
        [System.Configuration.ConfigurationPropertyAttribute("maxResponseDelay", DefaultValue="00:00:00.500")]
        public new System.TimeSpan MaxResponseDelay { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("multicastAddress", DefaultValue="soap.udp://239.255.255.250:3702")]
        public System.Uri MulticastAddress { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("transportSettings")]
        public System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement TransportSettings { get { throw null; } }
        protected internal override System.ServiceModel.Description.ServiceEndpoint CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription contractDescription) { throw null; }
        protected internal override void InitializeFrom(System.ServiceModel.Description.ServiceEndpoint endpoint) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ChannelEndpointElement serviceEndpointElement) { }
        protected override void OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement channelEndpointElement) { }
        protected override void OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement serviceEndpointElement) { }
    }
    public sealed partial class UdpTransportSettingsElement : System.Configuration.ConfigurationElement
    {
        public UdpTransportSettingsElement() { }
        [System.Configuration.ConfigurationPropertyAttribute("duplicateMessageHistoryLength", DefaultValue=4112)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=2147483647)]
        public int DuplicateMessageHistoryLength { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxBufferPoolSize", DefaultValue=524288)]
        [System.Configuration.LongValidatorAttribute(MinValue=(long)0, MaxValue=(long)9223372036854775807)]
        public long MaxBufferPoolSize { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxMulticastRetransmitCount", DefaultValue=2)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=2147483647)]
        public int MaxMulticastRetransmitCount { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxPendingMessageCount", DefaultValue=32)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=2147483647)]
        public int MaxPendingMessageCount { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxReceivedMessageSize", DefaultValue=65511)]
        [System.Configuration.LongValidatorAttribute(MinValue=(long)0, MaxValue=(long)9223372036854775807)]
        public long MaxReceivedMessageSize { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("maxUnicastRetransmitCount", DefaultValue=1)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=2147483647)]
        public int MaxUnicastRetransmitCount { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("multicastInterfaceId")]
        public string MulticastInterfaceId { get { throw null; } set { } }
        protected override System.Configuration.ConfigurationPropertyCollection Properties { get { throw null; } }
        [System.Configuration.ConfigurationPropertyAttribute("socketReceiveBufferSize", DefaultValue=65536)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=2147483647)]
        public int SocketReceiveBufferSize { get { throw null; } set { } }
        [System.Configuration.ConfigurationPropertyAttribute("timeToLive", DefaultValue=1)]
        [System.Configuration.IntegerValidatorAttribute(MinValue=0, MaxValue=2147483647)]
        public int TimeToLive { get { throw null; } set { } }
    }
}
namespace System.ServiceModel.Discovery.Version11
{
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class DiscoveryMessageSequence11 : System.Xml.Serialization.IXmlSerializable
    {
        internal DiscoveryMessageSequence11() { }
        public static System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11 FromDiscoveryMessageSequence(System.ServiceModel.Discovery.DiscoveryMessageSequence discoveryMessageSequence) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.DiscoveryMessageSequence ToDiscoveryMessageSequence() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class EndpointDiscoveryMetadata11 : System.Xml.Serialization.IXmlSerializable
    {
        internal EndpointDiscoveryMetadata11() { }
        public static System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11 FromEndpointDiscoveryMetadata(System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.EndpointDiscoveryMetadata ToEndpointDiscoveryMetadata() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class FindCriteria11 : System.Xml.Serialization.IXmlSerializable
    {
        internal FindCriteria11() { }
        public static System.ServiceModel.Discovery.Version11.FindCriteria11 FromFindCriteria(System.ServiceModel.Discovery.FindCriteria findCriteria) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.FindCriteria ToFindCriteria() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class ResolveCriteria11 : System.Xml.Serialization.IXmlSerializable
    {
        internal ResolveCriteria11() { }
        public static System.ServiceModel.Discovery.Version11.ResolveCriteria11 FromResolveCriteria(System.ServiceModel.Discovery.ResolveCriteria resolveCriteria) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.ResolveCriteria ToResolveCriteria() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
}
namespace System.ServiceModel.Discovery.VersionApril2005
{
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class DiscoveryMessageSequenceApril2005 : System.Xml.Serialization.IXmlSerializable
    {
        internal DiscoveryMessageSequenceApril2005() { }
        public static System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005 FromDiscoveryMessageSequence(System.ServiceModel.Discovery.DiscoveryMessageSequence discoveryMessageSequence) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.DiscoveryMessageSequence ToDiscoveryMessageSequence() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class EndpointDiscoveryMetadataApril2005 : System.Xml.Serialization.IXmlSerializable
    {
        internal EndpointDiscoveryMetadataApril2005() { }
        public static System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005 FromEndpointDiscoveryMetadata(System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.EndpointDiscoveryMetadata ToEndpointDiscoveryMetadata() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class FindCriteriaApril2005 : System.Xml.Serialization.IXmlSerializable
    {
        internal FindCriteriaApril2005() { }
        public static System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005 FromFindCriteria(System.ServiceModel.Discovery.FindCriteria findCriteria) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.FindCriteria ToFindCriteria() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class ResolveCriteriaApril2005 : System.Xml.Serialization.IXmlSerializable
    {
        internal ResolveCriteriaApril2005() { }
        public static System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005 FromResolveCriteria(System.ServiceModel.Discovery.ResolveCriteria resolveCriteria) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.ResolveCriteria ToResolveCriteria() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
}
namespace System.ServiceModel.Discovery.VersionCD1
{
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class DiscoveryMessageSequenceCD1 : System.Xml.Serialization.IXmlSerializable
    {
        internal DiscoveryMessageSequenceCD1() { }
        public static System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1 FromDiscoveryMessageSequence(System.ServiceModel.Discovery.DiscoveryMessageSequence discoveryMessageSequence) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.DiscoveryMessageSequence ToDiscoveryMessageSequence() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class EndpointDiscoveryMetadataCD1 : System.Xml.Serialization.IXmlSerializable
    {
        internal EndpointDiscoveryMetadataCD1() { }
        public static System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1 FromEndpointDiscoveryMetadata(System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.EndpointDiscoveryMetadata ToEndpointDiscoveryMetadata() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class FindCriteriaCD1 : System.Xml.Serialization.IXmlSerializable
    {
        internal FindCriteriaCD1() { }
        public static System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1 FromFindCriteria(System.ServiceModel.Discovery.FindCriteria findCriteria) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.FindCriteria ToFindCriteria() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetSchema")]
    public partial class ResolveCriteriaCD1 : System.Xml.Serialization.IXmlSerializable
    {
        internal ResolveCriteriaCD1() { }
        public static System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1 FromResolveCriteria(System.ServiceModel.Discovery.ResolveCriteria resolveCriteria) { throw null; }
        public System.Xml.Schema.XmlSchema GetSchema() { throw null; }
        public static System.Xml.XmlQualifiedName GetSchema(System.Xml.Schema.XmlSchemaSet schemaSet) { throw null; }
        public void ReadXml(System.Xml.XmlReader reader) { }
        public System.ServiceModel.Discovery.ResolveCriteria ToResolveCriteria() { throw null; }
        public void WriteXml(System.Xml.XmlWriter writer) { }
    }
}
                                              