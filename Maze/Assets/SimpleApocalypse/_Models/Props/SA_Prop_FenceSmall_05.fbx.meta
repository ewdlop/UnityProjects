// Copyright Epic Games, Inc. All Rights Reserved.

#include "FrontendFilters.h"
#include "Framework/Commands/UIAction.h"
#include "Textures/SlateIcon.h"
#include "Misc/ConfigCacheIni.h"
#include "Framework/MultiBox/MultiBoxBuilder.h"
#include "Widgets/Input/SEditableTextBox.h"
#include "ISourceControlModule.h"
#include "SourceControlHelpers.h"
#include "SourceControlOperations.h"
#include "SourceControlWindows.h"
#include "Editor.h"
#include "AssetToolsModule.h"
#include "ICollectionManager.h"
#include "CollectionManagerModule.h"
#include "ObjectTools.h"
#include "AssetRegistryModule.h"
#include "SAssetView.h"
#include "Modules/ModuleManager.h"
#include "ContentBrowserModule.h"
#include "ContentBrowserDataFilter.h"
#include "MRUFavoritesList.h"
#include "Settings/ContentBrowserSettings.h"
#include "HAL/FileManager.h"

/** Helper functions for frontend filters */
namespace FrontendFilterHelper
{
	/**
	 * Get a set of dependencies as package name's from a list of assets found with the given Asset Registry Filter.
	 * @param InAssetRegistryFilter		The filter to find assets for in the asset registry.
	 * @param AssetRegistry				The Asset Registry to find assets and dependencies.
	 * @param OutDependencySet			The output of dependencies found from a set of assets.
	 */
	void GetDependencies(const FARFilter& InAssetRegistryFilter, const IAssetRegistry& AssetRegistry, TSet<FName>& OutDependencySet)
	{
		TArray<FName> PackageNamesToProcess;
		{
			TArray<FAssetData> FoundAssets;
			AssetRegistry.GetAssets(InAssetRegistryFilter, FoundAssets);
			for (const FAssetData& AssetData : FoundAssets)
			{
				PackageNamesT