();
            int offset = (int)bufferPtr->_OffsetHeaderInfo/c_CharSz;
            char *charPtr = (char*)bufferPtr;
            {
                int i = offset+1;
                for (; i < entry.MaxBufferBytes/c_CharSz; ++i) {
                    if ((charPtr[i] == ':' || (charPtr[i] == '\n' && charPtr[(i-1)] == '\r'))) {
                        break;
                    }
                }
                if (i < entry.MaxBufferBytes/c_CharSz) {
                    //If this looks like a status line
                    if (charPtr[i] == '\n' && i > offset+1) {
                        string s = Encoding.Unicode.GetString(buffer, offset*2, (i-offset-1)*2);
                        offset = i+1;
                        collection[string.Empty] = s;
                    }
                }
            }
            int bufferCharLength = bufferPtr->HeaderInfoChars + ((int)(bufferPtr->_OffsetHeaderInfo))/c_CharSz;
            if (bufferCharLength*c_CharSz > entry.MaxBufferBytes) {
                // WinInet bug? They may report offset+HeaderInfoChars as a greater value than total buffer size.
                // Actually, the last one seems to be accurate based on the data we have provided for Commit.
                bufferCharLength = entry.MaxBufferBytes/c_CharSz;
            }

            while (true) {
                int totalLength = 0;
                DataParseStatus status = WebHeaderCollection.ParseHeaders(collection, false, buffer, bufferCharLength,
                                        ref offset,
                                        ref totalLength,
                                        entry.MaxBufferBytes/c_CharSz);

             