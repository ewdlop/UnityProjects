//------------------------------------------------------------------------------
// <copyright file="RootBuilder.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

/*
 * Implements the root builder
 *
 * Copyright (c) 1998 Microsoft Corporation
 */

namespace System.Web.UI {
    using System.Runtime.InteropServices;

    using System;
    using System.Collections;
    using System.IO;
    using System.Reflection;
    using System.Web;
    using System.Web.Util;

    /// <internalonly/>
    /// <devdoc>
    ///    <para>[To be supplied.]</para>
    /// </devdoc>
    public class RootBuilder : TemplateBuilder {
        private MainTagNameToTypeMapper _typeMapper;

        // Contains a mapping of all objects to their associated builders
        private IDictionary _builtObjects;


        public RootBuilder() {
        }


        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        public RootBuilder(TemplateParser parser) {
        }

        public IDictionary BuiltObjects {
            get {
                // Store any objects created by this control builder
                // so we can properly persist items
                if (_builtObjects == null) {
                    _builtObjects = new Hashtable(ReferenceKeyComparer.Default);
                }
                return _builtObjects;
            }
        }

        /// <summary>
        /// The method gets called when the CodeDom tree is fully built.  The way it is used is by first overriding
        /// ProcessGeneratedCode to keep track of the CodeCompileUnit, and to then have the ability to modify
        /// the CodeCompileUnit in this method
        /// </summary>
        protected internal virtual void OnCodeGenerationComplete() {
        }

        internal void SetTypeMapper(MainTagNameToTypeMapper typeMapper) {
            _typeMapper = typeMapper;
        }


        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </d