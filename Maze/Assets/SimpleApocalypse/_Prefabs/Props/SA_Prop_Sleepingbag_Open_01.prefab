//-----------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All rights reserved.
//-----------------------------------------------------------------------------
namespace System.ServiceModel.Dispatcher
{
    using System;
    using System.Diagnostics.CodeAnalysis;
    using System.ServiceModel.Channels;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Diagnostics;
    using System.ServiceModel.Diagnostics;
    using System.Runtime;
    using System.Runtime.Serialization;

    [DataContract]
    public class MessageFilterTable<TFilterData> : IMessageFilterTable<TFilterData>
    {
        Dictionary<Type, Type> filterTypeMappings;
        Dictionary<MessageFilter, TFilterData> filters;
        SortedBuffer<FilterTableEntry, TableEntryComparer> tables;
        int defaultPriority;

        static readonly TableEntryComparer staticComparerInstance = new TableEntryComparer();

        public MessageFilterTable()
            : this(0)
        {
        }

        public MessageFilterTable(int defaultPriority)
        {
            Init(defaultPriority);
        }

        [OnDeserializing]
        private void OnDeserializing(StreamingContext context)
        {
            Init(0);
        }

        void Init(int defaultPriority)
        {
            CreateEmptyTables();
            this.defaultPriority = defaultPriority;
        }

        public TFilterData this[MessageFilter filter]
        {
            get
            {
                return this.filters[filter];
            }
            set
            {
                if (this.ContainsKey(filter))
                {
                    int p = this.GetPriority(filter);
                    this.Remove(filter);
                    this.Add(filter, value, p);
                }
                else
                {
                    this.Add(filter, value, this.defaultPriority);
                }
            }
        }

        public int Count
        {
            get
            {
                return this.filters.Count;
            }
        }

  