//------------------------------------------------------------------------------
// <copyright file="HttpCachePolicyWrapper.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
//------------------------------------------------------------------------------

namespace System.Web {
    using System.Runtime.CompilerServices;

    [TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]
    public class HttpCachePolicyWrapper : HttpCachePolicyBase {
        private HttpCachePolicy _httpCachePolicy;

        public HttpCachePolicyWrapper(HttpCachePolicy httpCachePolicy) {
            if (httpCachePolicy == null) {
                throw new ArgumentNullException("httpCachePolicy");
            }
            _httpCachePolicy = httpCachePolicy;
        }

        public override HttpCacheVaryByContentEncodings VaryByContentEncodings {
            get {
                return _httpCachePolicy.VaryByContentEncodings;
            }
        }

        public override HttpCacheVaryByHeaders VaryByHeaders {
            get {
                return _httpCachePolicy.VaryByHeaders;
            }
        }

        public override HttpCacheVaryByParams VaryByParams {
            get {
                return _httpCachePolicy.VaryByParams;
            }
        }

        public override void AddValidationCallback(HttpCacheValidateHandler handler, object data) {
            _httpCachePolicy.AddValidationCallback(handler, data);
        }

        public override void AppendCacheExtension(string extension) {
            _httpCachePolicy.AppendCacheExtension(extension);
        }

        public override void SetAllowResponseInBrowserHistory(bool allow) {
            _httpCachePolicy.SetAllowResponseInBrowserHistory(allow);
        }

        public override void SetCacheability(HttpCacheability cacheability) {
            _httpCachePolicy.SetCacheability(cacheability);
        }

        public override void SetCacheability(HttpCacheability cacheability, string field) {
            _httpCachePolicy.SetCacheability(cacheability, field);
        }

        pu