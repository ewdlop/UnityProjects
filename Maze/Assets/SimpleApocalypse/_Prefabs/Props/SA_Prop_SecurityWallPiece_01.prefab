<html>
<head>
<title>.NET Compact Framework Applications</title>
<style>
p,body,a,tr,td
             { font-family: Verdana, Arial, Helvetica; font-size: 10pt }
h1,h2,h3,h4,h5,h6
             { font-family: Verdana, Arial, Helvetica; font-weight: normal; font-style: normal; }
h1           { font-size: 20pt }
h2           { font-size: 18pt; font-weight:bold; color: navy }
h3           { font-size: 16pt; font-weight:bold; color: #483d8b }
h4           { font-size: 14pt; font-weight:bold; color:#C71585; margin-bottom:2px; }
</style>
</head>

<!-- @SortOrder 50 -->

<body>
<h1>DotNetZip works with the .NET Compact Framework</h1>

<p>
There is a special version of DotNetZip, specifically built for the
.NET Compact Framework v2.0 or v3.5.
</p>

<p>The programming model is exactly the same as for the regular
DotNetZip library. There are a few features not supported in the CF version of DotNetZip:</p>

<ol>

<li><strong>Self-extracting
archives.</strong>  The <span style="font-family:
Courier;">ZipFile.SaveSelfExtractor()</span> method is not available in
the CF version of DotNetZip. There's no strong technical reason for this
limnitation; I just didn't think it would be of mainstream interest, and
in order to keep the size of the library down, I omitted that part from
the CF version.  It amounts to about a 120k savings.
</li>

<li><strong>WinZip AES encryption.</strong> The CF version does not
support encryption using WinZipAes128 or WinZipAes256.  This is because
the crypto classes from the .NET Framework are not available on .NET CF.
I would have to write my own SHA1HMAC() and so on, which I haven't got
'round to doing, especially because no one is clamoring for it.  </li>

<li><strong>ParallelDeflateStream</strong>. Most mobile devices do not
use multicore processors, so a parallel deflater would offer no
benefit. Even aside from that, parallel deflation shows its strength
when cmopressing larger files, and when larger memory resources are
available. Both of these are unlikely in .NET CF applications.  </li>

</ol>

<hr>

<h2>Using DotNetZip in a Smart Device project</h2>

<p> To build a smart