reeReferences(void);

	static bool mBuiltFlag;
	static NvParameterized::MutexType mBuiltFlagMutex;
};

class ClothingPhysicalMeshParameters_0p4Factory : public NvParameterized::Factory
{
	static const char* const vptr;

public:

	virtual void freeParameterDefinitionTable(NvParameterized::Traits* traits)
	{
		ClothingPhysicalMeshParameters_0p4::freeParameterDefinitionTable(traits);
	}

	virtual NvParameterized::Interface* create(NvParameterized::Traits* paramTraits)
	{
		// placement new on this class using mParameterizedTraits

		void* newPtr = paramTraits->alloc(sizeof(ClothingPhysicalMeshParameters_0p4), ClothingPhysicalMeshParameters_0p4::ClassAlignment);
		if (!NvParameterized::IsAligned(newPtr, ClothingPhysicalMeshParameters_0p4::ClassAlignment))
		{
			NV_PARAM_TRAITS_WARNING(paramTraits, "Unaligned memory allocation for class ClothingPhysicalMeshParameters_0p4");
			paramTraits->free(newPtr);
			return 0;
		}

		memset(newPtr, 0, sizeof(ClothingPhysicalMeshParameters_0p4)); // always initialize memory allocated to zero for default values
		return NV_PARAM_PLACEMENT_NEW(newPtr, ClothingPhysicalMeshParameters_0p4)(paramTraits);
	}

	virtual NvParameterized::Interface* finish(NvParameterized::Traits* paramTraits, void* bufObj, void* bufStart, int32_t* refCount)
	{
		if (!NvParameterized::IsAligned(bufObj, ClothingPhysicalMeshParameters_0p4::ClassAlignment)
		        || !NvParameterized::IsAligned(bufStart, ClothingPhysicalMeshParameters_0p4::ClassAlignment))
		{
			NV_PARAM_TRAITS_WARNING(paramTraits, "Unaligned memory allocation for class ClothingPhysicalMeshParameters_0p4");
			return 0;
		}

		// Init NvParameters-part
		// We used to call empty constructor of ClothingPhysicalMeshParameters_0p4 here
		// but it may call default constructors of members and spoil the data
		NV_PARAM_PLACEMENT_NEW(bufObj, NvParameterized::NvParameters)(paramTraits, bufStart, refCount);

		// Init vtable (everything else is already initialized)
		*(const char**)bufObj = vptr;

		return (ClothingPhysicalMeshParameters_0p4*)bufObj;
	}

	virtual const char* getClassName()
	{
		return (ClothingPhysicalMeshParameters_0p4::staticC