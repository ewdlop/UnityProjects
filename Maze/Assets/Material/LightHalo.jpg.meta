eld return new object[] { "\u1234http://domain.com", UriKind.Absolute };
            yield return new object[] { "http\u1234://domain.com", UriKind.Absolute };
            yield return new object[] { "http~://domain.com", UriKind.Absolute };
            yield return new object[] { "http#://domain.com", UriKind.Absolute };
            yield return new object[] { new string('a', 1025) + "://domain.com", UriKind.Absolute }; // Scheme is longer than 1024 characters

            // Invalid userinfo
            yield return new object[] { @"http://use\rinfo@host", UriKind.Absolute };

            // Invalid characters in host
            yield return new object[] { "http://ho!st/", UriKind.Absolute };
            yield return new object[] { "http://ho&st/", UriKind.Absolute };
            yield return new object[] { "http://ho$st/", UriKind.Absolute };
            yield return new object[] { "http://ho(st/", UriKind.Absolute };
            yield return new object[] { "http://ho)st/", UriKind.Absolute };
            yield return new object[] { "http://ho*st", UriKind.Absolute };
            yield return new object[] { "http://ho+st", UriKind.Absolute };
            yield return new object[] { "http://ho,st", UriKind.Absolute };
            yield return new object[] { "http://ho;st/", UriKind.Absolute };
            yield return new object[] { "http://ho=st", UriKind.Absolute };
            yield return new object[] { "http://ho~st/", UriKind.Absolute };

            // Empty host
            yield return new object[] { "http://", UriKind.Absolute };
            yield return new object[] { "http:/", UriKind.Absolute };
            yield return new object[] { "http:/abc", UriKind.Absolute };
            yield return new object[] { "http://@", UriKind.Absolute };
            yield return new object[] { "http://userinfo@", UriKind.Absolute };
            yield return new object[] { "http://:", UriKind.Absolute };
            yield return new object[] 