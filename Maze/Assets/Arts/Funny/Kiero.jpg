<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WindowsDevicePortalWrapper</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal">
            <content>
            .net 4.x implementation of device certificate handling methods.
            </content>
            <content>
            .net 4.x implementation of App Deployment methods.
            </content>
            <content>
            .net 4.x implementation of HTTP PostAsync
            </content>
            <content>
            .net 4.x implementation of HTTP PutAsync
            </content>
            <content>
            .net 4.x implementation of HTTP DeleteAsync
            </content>
            <content>
            .net 4.x implementation of HTTP GetAsync
            </content>
            <content>
            Wrappers for app crash dump collection methods.
            </content>
            <content>
            Wrappers for App Deployment methods.
            </content>
            <content>
            Wrappers for App File explorer methods
            </content>
            <content>
            Wrappers for device management methods.
            </content>
            <content>
            Wrappers for DNS methods
            </content>
            <content>
            Wrappers for crash dump collection methods.
            </content>
            <content>
            Wrappers for ETW methods
            </content>
            <content>
            Wrappers for Networking methods.
            </content>
            <content>
            Wrappers for OS Information.
            </content>
            <content>
            Wrappers for Power methods.
            </content>
            <content>
            Wrappers for Remote Control methods.
            </content>
            <content>
            Wrappers for Performance methods
            </content>
            <content>
            Wrappers for Task Manager methods
            </content>
            <content>
            Wrappers for WiFi management methods.
            </content>
            <content>
            Wrapper for collecting Windows Error Reports from the device. 
            </content>
            <content>
            Wrappers for DNS methods
            </content>
            <summary>
            This is the main DevicePortal object. It contains methods for making HTTP REST calls against
            all of the WDP endpoints covered by the wrapper project. Different endpoints have their
            implementation separated out into individual files.
            </summary>
            <content>
            Wrappers for Holographic OS methods
            </content>
            <content>
            Wrappers for Holographic Perception methods
            </content>
            <content>
            Wrappers for Holographic Thermal methods
            </content>
            <content>
            Wrappers for Mixed reality capture methods
            </content>
            <content>
            Wrappers for Perception Simulation Playback methods
            </content>
            <content>
            Wrappers for Perception Simulation Recording methods
            </content>
            <content>
            Methods for working with Http requests.
            </content>
            <content>
            Methods for working with Http responses.
            </content>
            <content>
            Methods for working with Http headers.
            </content>
            <content>
            HTTP DELETE Wrapper
            </content>
            <content>
            HTTP GET Wrapper
            </content>
            <content>
            HTTP POST Wrapper
            </content>
            <content>
            HTTP PUT Wrapper
            </content>
            <content>
            Wrappers for Bluetooth Connectivity.
            </content>
            <summary>
            TPM Limpet APIs for IoT.
            </summary>
            <content>
            Wrappers for Application Management.
            </content>
            <content>
            Wrappers for Audio Devices.
            </content>
            <content>
            Wrappers for IoT Process Management.
            </content>
            <content>
            Wrappers for Internet Connection Sharing(ICS) Settings.
            </content>
            <summary>
            Wrappers for IoT Onboarding methods.
            </summary>
            <summary>
            Wrappers for remote settings for IoT.
            </summary>
            <content>
            Wrappers for Device Information.
            </content>
            <summary>
            Windows update APIs for IoT.
            </summary>
            <content>
            Xbox Live Sandbox Wrappers
            </content>
            <content>
            SMBShare Wrappers
            </content>
            <content>
            UserManagement Wrappers
            </content>
            <content>
            Register Application Wrappers
            </content>
            <content>
            Fiddler setup Wrappers
            </content>
            <content>
            MediaCapture Wrappers
            </content>
            <content>
            XboxSettings Wrappers
            </content>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.manualCertificate">
            <summary>
            A manually provided certificate for trust validation.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UnvalidatedCert">
            <summary>
            Gets or sets handler for untrusted certificate handling
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetRootDeviceCertificateAsync">
            <summary>
            Gets the root certificate from the device.
            </summary>
            <returns>The device certificate.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetManualCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Sets the manual certificate.
            </summary>
            <param name="cert">Manual certificate</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServerCertificateValidation(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Validate the server certificate
            </summary>
            <param name="sender">The sender object</param>
            <param name="certificate">The server's certificate</param>
            <param name="chain">The cert chain</param>
            <param name="sslPolicyErrors">Policy Errors</param>
            <returns>whether the cert passes validation</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetInstallStatusAsync">
            <summary>
            Gets the status of a pending or most recent installation, if any. 
            </summary>
            <returns>The status</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PostAsync(System.Uri,System.IO.Stream,System.String)">
            <summary>
            Submits the http post request to the specified uri.
            </summary>
            <param name="uri">The uri to which the post request will be issued.</param>
            <param name="requestStream">Optional stream containing data for the request body.</param>
            <param name="requestStreamContentType">The type of that request body data.</param>
            <returns>Task tracking the completion of the POST request</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PutAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Submits the http put request to the specified uri.
            </summary>
            <param name="uri">The uri to which the put request will be issued.</param>
            <param name="body">The HTTP content comprising the body of the request.</param>
            <returns>Task tracking the PUT completion.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAsync(System.Uri)">
            <summary>
            Submits the http delete request to the specified uri.
            </summary>
            <param name="uri">The uri to which the delete request will be issued.</param>
            <returns>Task tracking HTTP completion</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAsync(System.Uri)">
            <summary>
            Submits the http get request to the specified uri.
            </summary>
            <param name="uri">The uri to which the get request will be issued.</param>
            <returns>Response data as a stream.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableCrashDumpsApi">
            <summary>
            API to retrieve list of the available crash dumps (for sideloaded applications).
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CrashDumpFileApi">
            <summary>
            API to download or delete a crash dump file (for a sideloaded application).
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CrashDumpSettingsApi">
            <summary>
            API to control the crash dump settings for a sideloaded application.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpListAsync">
            <summary>
            Get a list of app crash dumps on the device. 
            </summary>
            <returns>List of AppCrashDump objects, which represent crashdumps on the device. </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump)">
            <summary>
            Download a sideloaded app's crash dump.  
            </summary>
            <param name="crashdump"> The AppCrashDump to download</param>
            <returns>Stream of the crash dump</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAppCrashDumpAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump)">
            <summary>
            Delete an app crash dump stored on the device. 
            </summary>
            <param name="crashdump">The crashdump to be deleted</param>
            <returns>Task tracking completion of the request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpSettingsAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackage)">
            <summary>
            Get the crash settings for a sideloaded app. 
            </summary>
            <param name="app">The app to get settings for</param>
            <returns>The crash settings for the app</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetAppCrashDumpSettingsAsync(System.String)">
            <summary>
            Get the crash settings for a sideloaded app. 
            </summary>
            <param name="packageFullname">The app to get settings for</param>
            <returns>The crash settings for the app</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetAppCrashDumpSettingsAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackage,System.Boolean)">
            <summary>
            Set the crash settings for a sideloaded app. 
            </summary>
            <param name="app">The app to set crash settings for.</param>
            <param name="enable">Whether to enable or disable crash collection for the app. </param>
            <returns>Task tracking completion of the request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetAppCrashDumpSettingsAsync(System.String,System.Boolean)">
            <summary>
            Set the crash settings for a sideloaded app. 
            </summary>
            <param name="packageFullName">The app to set crash settings for.</param>
            <param name="enable">Whether to enable or disable crash collection for the app. </param>
            <returns>Task tracking completion of the request.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpSettings">
            <summary>
            Per-app crash dump settings.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpSettings.CrashDumpEnabled">
            <summary>
            Gets a value indicating whether crash dumps are enabled for the app
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump">
            <summary>
            Represents a crash dump collected from a sideloaded app. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.FileDateAsString">
            <summary>
            Gets the timestamp of the crash as a string.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.FileDate">
            <summary>
            Gets the timestamp of the crash.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.Filename">
            <summary>
            Gets the filename of the crash file. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.FileSizeInBytes">
            <summary>
            Gets the size of the crash dump, in bytes
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDump.PackageFullName">
            <summary>
            Gets the package full name of the app that crashed. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpList">
            <summary>
            A list of crash dumps.  Internal usage only. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppCrashDumpList.CrashDumps">
            <summary>
            Gets a list of crash dumps on the device. 
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstalledPackagesApi">
            <summary>
            API to retrieve list of installed packages.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallStateApi">
            <summary>
            Install state API.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageManagerApi">
            <summary>
            API for package management.
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppInstallStatus">
            <summary>
            App Install Status handler.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetInstalledAppPackagesAsync">
            <summary>
            Gets the collection of applications installed on the device.
            </summary>
            <returns>AppPackages object containing the list of installed application packages.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallApplicationAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Int16,System.Int16,System.Boolean)">
            <summary>
            Installs an application
            </summary>
            <param name="appName">Friendly name (ex: Hello World) of the application. If this parameter is not provided, the name of the package is assumed to be the app name.</param>
            <param name="packageFileName">Full name of the application package file.</param>
            <param name="dependencyFileNames">List containing the full names of any required dependency files.</param>
            <param name="certificateFileName">Full name of the optional certificate file.</param>
            <param name="stateCheckIntervalMs">How frequently we should check the installation state.</param>
            <param name="timeoutInMinutes">Operation timeout.</param>
            <param name="uninstallPreviousVersion">Indicate whether or not the previous app version should be uninstalled prior to installing.</param>
            <remarks>InstallApplication sends ApplicationInstallStatus events to indicate the current progress in the installation process.
            Some applications may opt to not register for the AppInstallStatus event and await on InstallApplication.</remarks>
            <returns>Task for tracking completion of install initialization.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UninstallApplicationAsync(System.String)">
            <summary>
            Uninstalls the specified application.
            </summary>
            <param name="packageName">The name of the application package to uninstall.</param>
            <returns>Task tracking the uninstall operation.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CreateAppInstallEndpointAndBoundaryString(System.String,System.Uri@,System.String@)">
            <summary>
            Builds the application installation Uri and generates a unique boundary string for the multipart form data.
            </summary>
            <param name="packageName">The name of the application package.</param>
            <param name="uri">The endpoint for the install request.</param>
            <param name="boundaryString">Unique string used to separate the parts of the multipart form data.</param>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SendAppInstallStatus(Microsoft.Tools.WindowsDevicePortal.ApplicationInstallStatus,Microsoft.Tools.WindowsDevicePortal.ApplicationInstallPhase,System.String)">
            <summary>
            Sends application install status.
            </summary>
            <param name="status">Status of the installation.</param>
            <param name="phase">Current installation phase (ex: Uninstalling previous version)</param>
            <param name="message">Optional error message describing the install status.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackages">
            <summary>
            Object representing a list of Application Packages
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackages.Packages">
            <summary>
            Gets a list of the packages
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AppPackages.ToString">
            <summary>
            Presents a user readable representation of a list of AppPackages
            </summary>
            <returns>User readable list of AppPackages.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState">
            <summary>
            Object representing the install state
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.Code">
            <summary>
            Gets install state code
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.CodeText">
            <summary>
            Gets message text
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.Reason">
            <summary>
            Gets reason for state
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstallState.WasSuccessful">
            <summary>
            Gets a value indicating whether this was successful
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo">
            <summary>
            object representing the package information
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.Name">
            <summary>
            Gets package name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.FamilyName">
            <summary>
            Gets package family name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.FullName">
            <summary>
            Gets package full name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.AppId">
            <summary>
            Gets package relative Id
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.Publisher">
            <summary>
            Gets package publisher
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.Version">
            <summary>
            Gets package version
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.PackageOrigin">
            <summary>
            Gets package origin, a measure of how the app was installed. 
            PackageOrigin_Unknown            = 0,
            PackageOrigin_Unsigned           = 1,
            PackageOrigin_Inbox              = 2,
            PackageOrigin_Store              = 3,
            PackageOrigin_DeveloperUnsigned  = 4,
            PackageOrigin_DeveloperSigned    = 5,
            PackageOrigin_LineOfBusiness     = 6
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.IsSideloaded">
            <summary>
            Helper method to determine if the app was sideloaded and therefore can be used with e.g. GetFolderContentsAsync
            </summary>
            <returns> True if the package is sideloaded. </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageInfo.ToString">
            <summary>
            Get a string representation of the package
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion">
            <summary>
            Object representing a package version
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Build">
            <summary>
             Gets version build
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Major">
            <summary>
            Gets package Major number
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Minor">
            <summary>
            Gets package minor number
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Revision">
            <summary>
            Gets package revision
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.Version">
            <summary>
            Gets package version
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.PackageVersion.ToString">
            <summary>
            Get a string representation of a version
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFileApi">
            <summary>
            API to upload, download or delete a file in a folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RenameFileApi">
            <summary>
            API to rename a file in a folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFilesApi">
            <summary>
            API to retrieve the list of files in a folder.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFoldersApi">
            <summary>
            API to retrieve the list of accessible top-level folders.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetKnownFoldersAsync">
            <summary>
            Gets a list of Known Folders on the device. 
            </summary>
            <returns>List of known folders available on this device.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFolderContentsAsync(System.String,System.String,System.String)">
            <summary>
            Gets a list of files in a Known Folder (e.g. LocalAppData).
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Contents of the requested folder.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetFileAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Gets a file from LocalAppData or another Known Folder on the device. 
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filename">The name of the file we are downloading.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Stream to the downloaded file.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.UploadFileAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Uploads a file to a Known Folder (e.g. LocalAppData)
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filepath">The path to the file we are uploading.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Task tracking completion of the upload request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteFileAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes a file from a Known Folder. 
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filename">The name of the file we are deleting.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Task tracking completion of the delete request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RenameFileAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Renames a file in a Known Folder. 
            </summary>
            <param name="knownFolderId">The known folder id for the root of the path.</param>
            <param name="filename">The name of the file we are renaming.</param>
            <param name="newFilename">The new name for this file.</param>
            <param name="subPath">An optional subpath to the folder.</param>
            <param name="packageFullName">The package full name if using LocalAppData.</param>
            <returns>Task tracking completion of the rename request.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BuildCommonFilePayload(System.String,System.String,System.String)">
            <summary>
            Do some common parsing and validation of file explorer parameters.
            </summary>
            <param name="knownFolderId">The known folder id.</param>
            <param name="subPath">The optional subpath for the folder.</param>
            <param name="packageFullName">The packagefullname if using LocalAppData.</param>
            <returns>Dictionary of param name to value.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFolders">
            <summary>
            Known Folders object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFolders.Folders">
            <summary>
            Gets the list of known folders.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.KnownFolders.ToString">
            <summary>
            Overridden ToString method providing a user readable
            list of known folders.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FolderContents">
            <summary>
            Folder contents object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FolderContents.Contents">
            <summary>
            Gets the list of folders and files in this folder.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FolderContents.ToString">
            <summary>
            Overridden ToString method providing a user readable
            display of a folder's contents. Tries to match the formatting
            of regular DIR commands.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation">
            <summary>
            Details about a folder or file.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.CurrentDir">
            <summary>
            Gets the current directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.DateCreated">
            <summary>
            Gets the current directory.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.Id">
            <summary>
            Gets the Id.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.Name">
            <summary>
            Gets the Name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.SubPath">
            <summary>
            Gets the SubPath (equivalent to CurrentDir for files).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.Type">
            <summary>
            Gets the Type.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.SizeInBytes">
            <summary>
            Gets the size of the file (0 for folders).
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.IsFolder">
            <summary>
            Gets a value indicating whether the current item is a folder by checking for FILE_ATTRIBUTE_DIRECTORY
            See https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.FileOrFolderInformation.ToString">
            <summary>
            Overridden ToString method providing a user readable
            display of a file or folder. Tries to match the formatting
            of regular DIR commands.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InstalledDevicesApi">
            <summary>
            API to retrieve list of installed devices.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDeviceListAsync">
            <summary>
            Get a listing of installed devices
            </summary>
            <returns>List of installed devices</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceList">
            <summary>
            Object representing a device entry
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceList.Devices">
            <summary>
            Gets the Device Class
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device">
            <summary>
            Object representing a device entry
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.Class">
            <summary>
            Gets the Device Class
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.Description">
            <summary>
            Gets the Device Description
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.FriendlyName">
            <summary>
            Gets the friendly (human-readable) name for the device.  Usually more descriptive than Description. Does not apply to all Devices.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.ID">
            <summary>
            Gets the Device ID
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.Manufacturer">
            <summary>
            Gets the Device Manufacturer
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.ParentID">
            <summary>
            Gets the Device ParentID, used for pairing 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.ProblemCode">
            <summary>
            Gets the Device Problem Code
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Device.StatusCode">
            <summary>
            Gets the Device Status Code
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TagApi">
            <summary>
            API to add or delete a tag to the DNS-SD advertisement.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.TagsApi">
            <summary>
            API to retrieve or delete the currently applied tags for the device.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetServiceTagsAsync">
            <summary>
            Gets a list of DNS-SD tags being broadcast by this device. 
            </summary>
            <returns>Array of strings, each one an individual tag.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AddServiceTagAsync(System.String)">
            <summary>
            Adds a tag to this device's DNS-SD broadcast. 
            </summary>
            <param name="tagValue">The tag to assign to the device.</param>
            <returns>Task tracking adding the tag.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteAllTagsAsync">
            <summary>
            Delete all tags from the device's DNS-SD broadcast. 
            </summary>
            <returns>Task tracking deletion of all tags.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeleteTagAsync(System.String)">
            <summary>
            Delete a specific tag from the device's DNS-SD broadcast. 
            </summary>
            <param name="tagValue">The tag to delete from the device broadcast.</param>
            <returns>Task tracking deletion of the tag.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceTags">
            <summary>
            Service tags object
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ServiceTags.Tags">
            <summary>
            Gets the DNS-SD service tags
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.AvailableBugChecksApi">
            <summary>
            API to retrieve list of the available bugcheck minidumps.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BugcheckFileApi">
            <summary>
            API to download a bugcheck minidump file.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.BugcheckSettingsApi">
            <summary>
            API to control bugcheck minidump settings.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.LiveKernelDumpApi">
            <summary>
            API to retrieve a live kernel dump.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.LiveProcessDumpApi">
            <summary>
            API to retrieve a live dump from a running user mode process.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDumpfileListAsync">
            <summary>
            Get a list of dumpfiles on the system. 
            </summary>
            <returns>List of Dumpfiles.  Use GetDumpFile to download the file. </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDumpFileAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile)">
            <summary>
            Download a dumpfile from the system. 
            </summary>
            <param name="crashdump"> Dumpfile object to be downloaded</param>
            <returns>Stream of the dump file </returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetLiveKernelDumpAsync">
            <summary>
            Takes a live kernel dump of the device.  This does not reboot the device. 
            </summary>
            <returns>Stream of the kernel dump</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetLiveProcessDumpAsync(System.Int32)">
            <summary>
            Take a live dump of a process on the system. 
            </summary>
            <param name="pid"> PID of the process to get a live dump of.</param>
            <returns>Stream of the process live dump</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDumpFileSettingsAsync">
            <summary>
            Get information on how and when dump files are saved on the device. 
            </summary>
            <returns>Dumpfile settings object.  This can be edited and returned to the device to alter the settings.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetDumpFileSettingsAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings)">
            <summary>
            Set how and when dump files are saved on the device. 
            </summary>
            <param name="dfs">Altered DumpFileSettings object to set on the device</param>
            <returns>Task tracking completion of the request</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings">
            <summary>
            DumpFileSettings object.  Used to get and set how and when a dump is saved on the device. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes">
            <summary>
            The 3 types of dumps  that can be saved on the device (or not saved at all). 
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.Disabled">
            <summary>
            Don't collect device crash dumps
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.CompleteMemoryDump">
            <summary>
            Collect all in use memory
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.KernelDump">
            <summary>
            Don't include usermode memory in the dump
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpTypes.Minidump">
            <summary>
            Limited kernel dump
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.AutoReboot">
            <summary>
            Gets or sets a value indicating whether the device should restart after a crash dump is taken.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.DumpType">
            <summary>
            Gets or sets the type of dump to be saved when a bugcheck occurs.  
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.MaxDumpCount">
            <summary>
            Gets or sets the max number of dumps to be saved on the device. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileSettings.Overwrite">
            <summary>
            Gets or sets a value indicating whether new dumps should overwrite older dumps. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileList">
            <summary>
            Gets a list of kernel dumps on the device. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DumpFileList.DumpFiles">
            <summary>
            Gets a list of kernel dumps on the device. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile">
            <summary>
            Represents a dumpfile stored on the device. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.FileDateAsString">
            <summary>
            Gets the timestamp of the crash as a string.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.FileDate">
            <summary>
            Gets the timestamp of the crash.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.Filename">
            <summary>
            Gets the filename of the crash file. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dumpfile.FileSizeInBytes">
            <summary>
            Gets the size of the crash dump, in bytes
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RealtimeEtwSessionApi">
            <summary>
            API to create a realtime ETW session.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.CustomEtwProvidersApi">
            <summary>
            API to get the list of registered custom ETW providers.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProvidersApi">
            <summary>
            API to get the list of registered ETW providers.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.realtimeEventsWebSocket">
            <summary>
            Web socket to get ETW events.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.isListeningForRealtimeEvents">
            <summary>
            Determines if the event listener has been registered
            </summary>
        </member>
        <member name="E:Microsoft.Tools.WindowsDevicePortal.DevicePortal.RealtimeEventsMessageReceived">
            <summary>
            The ETW event message received handler
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetCustomEtwProvidersAsync">
            <summary>
            Returns the current set of registered custom ETW providers.
            </summary>
            <returns>EtwProviders object containing a list of providers, friendly name and GUID</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetEtwProvidersAsync">
            <summary>
            Returns the current set of registered ETW providers.
            </summary>
            <returns>EtwProviders object containing a list of providers, friendly name and GUID</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ToggleEtwProviderAsync(Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo,System.Boolean,System.Int32)">
            <summary>
            Toggles the listening state of a specific provider on the realtime events WebSocket.
            </summary>
            <param name="etwProvider">The provider to update the listening state of.</param>
            <param name="isEnabled">Determines whether the listening state should be enabled or disabled.</param>
            /// <param name="level">Verbosity level - 1 for least, 5 for most verbose. </param>
            <returns>Task for toggling the listening state of the specified provider.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.ToggleEtwProviderAsync(System.Guid,System.Boolean,System.Int32)">
            <summary>
            Toggles the listening state of a specific provider on the realtime events WebSocket.
            </summary>
            <param name="etwProvider">The GUID of the provider to update the listening state of.</param>
            <param name="isEnabled">Determines whether the listening state should be enabled or disabled.</param>
            <param name="level">Verbosity level - 1 for least, 5 for most verbose. </param>
            <returns>Task for toggling the listening state of the specified provider.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StartListeningForEtwEventsAsync">
            <summary>
            Starts listening for ETW events with it being returned via the RealtimeEventsMessageReceived event handler.
            </summary>
            <returns>Task for connecting to the WebSocket but not for listening to it.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.StopListeningForEtwEventsAsync">
            <summary>
            Stop listening for ETW events.
            </summary>
            <returns>Task for stop listening for ETW events and disconnecting from the WebSocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.InitializeRealtimeEventsWebSocketAsync">
            <summary>
            Creates a new <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> if it hasn't already been initialized.
            </summary>
            <returns>Task for connecting the ETW realtime event WebSocket.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventsReceivedHandler(Microsoft.Tools.WindowsDevicePortal.WebSocket{Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents},Microsoft.Tools.WindowsDevicePortal.WebSocketMessageReceivedEventArgs{Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents})">
            <summary>
            Handler for the ETW received event that passes the event to the RealtimeEventsMessageReceived handler.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.Tools.WindowsDevicePortal.WebSocket`1"/> object sending the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents">
            <summary>
            ETW Events.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.stashedList">
            <summary>
            Saves the downconverted list of events 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.Events">
            <summary>
            Gets the list of ETW Events that occured in the last second. 
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.Frequency">
            <summary>
            Gets the event frequency. 
            This is always 10 million (10000000) in RS2 devices.  
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEvents.RawEvents">
            <summary>
            Gets or sets the raw list of events.  Not for straight usage, as it's entirely unformatted. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo">
            <summary>
            ETW Events Info. Allows strongly typed access to guaranteed fields 
            like ID or Timestamp, and raw (as string) access to all other 
            payload data, like Latency or PID. 
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo" /> class.  Used by the DataContract at access time. 
            </summary>
            <param name="dictionary">Base dictionary used to populate the object. </param>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.ID">
            <summary>
            Gets the event identifer.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Keyword">
            <summary>
            Gets the event keyword.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Level">
            <summary>
            Gets the event level.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Provider">
            <summary>
            Gets the event provider name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwEventInfo.Timestamp">
            <summary>
            Gets the event timestamp. 
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviders">
            <summary>
            ETW Providers.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviders.Providers">
            <summary>
            Gets list of ETW providers
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo">
            <summary>
            ETW Provider Info. Contains the Name and GUID.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo.GUID">
            <summary>
            Gets provider guid.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.EtwProviderInfo.Name">
            <summary>
            Gets provider name.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfigApi">
            <summary>
            API for getting IP config data.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetIpConfigAsync">
            <summary>
            Gets the IP configuration data of the device.
            </summary>
            <returns>object containing details of the device's network configuration.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp">
            <summary>
            DHCP object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseExpiresRaw">
            <summary>
             Gets the time at which the lease will expire, in ticks.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseObtainedRaw">
            <summary>
            Gets the time at which the lease was obtained, in ticks.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.Address">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseExpires">
            <summary>
            Gets the lease expiration time.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.Dhcp.LeaseObtained">
            <summary>
            Gets the lease obtained time.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpAddressInfo">
            <summary>
            IP Address info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpAddressInfo.Address">
            <summary>
            Gets the address
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpAddressInfo.SubnetMask">
            <summary>
            Gets the subnet mask
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfiguration">
            <summary>
            IP Configuration object
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.IpConfiguration.Adapters">
            <summary>
            Gets the list of networking adapters
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo">
            <summary>
            Networking adapter info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Description">
            <summary>
            Gets the description
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.MacAddress">
            <summary>
            Gets the hardware address
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Index">
            <summary>
            Gets the index
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Id">
            <summary>
            Gets the name
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.AdapterType">
            <summary>
            Gets the type
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Dhcp">
            <summary>
            Gets DHCP info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.Gateways">
            <summary>
            Gets Gateway info
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.NetworkAdapterInfo.IpAddresses">
            <summary>
            Gets the list of IP addresses
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceFamilyApi">
            <summary>
            API for getting the device family.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.MachineNameApi">
            <summary>
            API for getting the machine name.
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.OsInfoApi">
            <summary>
            API for getting the OS information.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms">
            <summary>
            Device portal platforms
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.Unknown">
            <summary>
            Unknown platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.Windows">
            <summary>
            Windows platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.Mobile">
            <summary>
            Mobile platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.HoloLens">
            <summary>
            HoloLens platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.XboxOne">
            <summary>
            Xbox One platform
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTDragonboard410c">
            <summary>
            Windows IoT on Dragonboard 410c
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTMinnowboardMax">
            <summary>
            Windows IoT on Minnowboard Max
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTRaspberryPi2">
            <summary>
            Windows IoT on Raspberry Pi 2
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.IoTRaspberryPi3">
            <summary>
            Windows IoT on Raspberry Pi 3
            </summary>
        </member>
        <member name="F:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DevicePortalPlatforms.VirtualMachine">
            <summary>
            A virtual machine. This may or may not be an emulator.
            </summary>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDeviceFamilyAsync">
            <summary>
            Gets the family name (ex: Windows.Holographic) of the device.
            </summary>
            <returns>String containing the device's family.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetDeviceNameAsync">
            <summary>
            Gets the name of the device.
            </summary>
            <returns>String containing the device's name.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.GetOperatingSystemInformationAsync">
            <summary>
            Gets information about the device's operating system.
            </summary>
            <returns>OperatingSystemInformation object containing details of the installed operating system.</returns>
        </member>
        <member name="M:Microsoft.Tools.WindowsDevicePortal.DevicePortal.SetDeviceNameAsync(System.String)">
            <summary>
            Sets the device's name
            </summary>
            <param name="name">The name to assign to the device.</param>
            <remarks>The new name does not take effect until the device has been restarted.</remarks>
            <returns>Task tracking setting the device name completion.</returns>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceName">
            <summary>
            Device name object.
            </summary>
        </member>
        <member name="P:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceName.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:Microsoft.Tools.WindowsDevicePortal.DevicePortal.DeviceOsFamily">
            <summary>
            Device family object.
            </summar