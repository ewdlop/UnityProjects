<Type Name="AssemblyMirror" FullName="Mono.Debugger.Soft.AssemblyMirror">
  <TypeSignature Language="C#" Value="public class AssemblyMirror : Mono.Debugger.Soft.Mirror" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyMirror extends Mono.Debugger.Soft.Mirror" />
  <AssemblyInfo>
    <AssemblyName>Mono.Debugger.Soft</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Debugger.Soft.Mirror</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an Assembly in the debuggee.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Soft.MethodMirror EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.Debugger.Soft.MethodMirror EntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Debugger.Soft.MethodMirror</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyObject">
      <MemberSignature Language="C#" Value="public Mono.Debugger.Soft.ObjectMirror GetAssemblyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Mono.Debugger.Soft.ObjectMirror GetAssemblyObject() cil managed" />
      <MemberType>Method</MemberType>
      