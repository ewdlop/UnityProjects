//
// SqlSharpDataAdapter.cs - data adapter for SQL#
//                          but uses a data reader 
//                          as the source of data
//
// based on
// System.Data.SqlSharpClient.SqlSharpDataAdapter.cs
// in Mono http://www.go-mono.com/
//
// Author:
//   Rodrigo Moya (rodrigo@ximian.com)
//   Daniel Morgan (danielmorgan@verizon.net)
//   Tim Coleman (tim@timcoleman.com)
//
// (C) Ximian, Inc 2002
// Copyright (C) 2002 Tim Coleman
// Copyright (C) 2002, 2003 Daniel Morgan
//

using System;
using System.ComponentModel;
using System.Data;
using System.Data.Common;

namespace Mono.Data.SqlSharp 
{
	[DefaultEvent ("RowUpdated")]
	public sealed class SqlSharpDataAdapter : DbDataAdapter, IDbDataAdapter 
	{
		#region Fields

		bool disposed = false;	
		IDbCommand deleteCommand;
		IDbCommand insertCommand;
		IDbCommand selectCommand;
		IDbCommand updateCommand;

		#endregion

		#region Constructors
		
		public SqlSharpDataAdapter () 	
		{
		}

		public SqlSharpDataAdapter (IDbCommand selectCommand) 
		{
			DeleteCommand = null;
			InsertCommand = null;
			SelectCommand = selectCommand;
			UpdateCommand = null;
		}

		#endregion

		#region Properties

//		[DataCategory ("Update")]
		[DataSysDescription ("Used during Update for deleted rows in DataSet.")]
		[DefaultValue (null)]
		public IDbCommand DeleteCommand {
			get { return deleteCommand; }
			set { deleteCommand = value; }
		}

//		[DataCategory ("Update")]
		[DataSysDescription ("Used during Update for new rows in DataSet.")]
		[DefaultValue (null)]
		public IDbCommand InsertCommand {
			get { return insertCommand; }
			set { insertCommand = value; }
		}

//		[DataCategory ("Fill")]
		[DataSysDescription ("Used during Fill/FillSchema.")]
		[DefaultValue (null)]
		public IDbCommand SelectCommand {
			get { return selectCommand; }
			set { selectCommand = value; }
		}

//		[DataCategory ("Update")]
		[DataSysDescription ("Used during Update for modified rows in DataSet.")]
		[DefaultValue (null)]
		public IDbCommand UpdateCommand {
			get { return updateCommand; }
			set { updateCommand = value; }
		}

		IDbCommand IDbDataAdapter.DeleteCommand {
			get { return DeleteCommand