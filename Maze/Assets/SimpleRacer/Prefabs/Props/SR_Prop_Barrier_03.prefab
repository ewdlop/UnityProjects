
			Assert.AreEqual((SqlByte)255, TestByte2 | TestByte255, "Bitwise or operaror 2" + Error);
		}

		[Test]
		public void DivisionOperator()
		{

			SqlByte TestByte2 = new SqlByte(2);
			SqlByte TestByte4 = new SqlByte(4);
			SqlByte TestByte255 = new SqlByte(255);
			SqlByte TestByte0 = new SqlByte(0);

			Assert.AreEqual((SqlByte)2,TestByte4 / TestByte2, "Division operator 1" + Error);
			Assert.AreEqual((SqlByte)127, TestByte255 / TestByte2, "Division operaror 2" + Error);

			try {
				TestByte2 = TestByte255 / TestByte0;
				Assert.Fail("Division operator 3" + Error);
			} catch (Exception e) {
				Assert.AreEqual(typeof(DivideByZeroException), e.GetType(), "DivideByZeroException");
			}

		}

		[Test]
		public void EqualityOperator()
		{

			SqlByte TestByte15 = new SqlByte(15);
			SqlByte TestByte15II = new SqlByte(15);
			SqlByte TestByte255 = new SqlByte(255);

			Assert.IsTrue ((TestByte15 == TestByte15II).Value, "== operator" + Error);
			Assert.IsTrue (!(TestByte15 == TestByte255).Value, "== operator 2" + Error);
			Assert.IsTrue (!(TestByte15 != TestByte15II).Value, "!= operator" + Error);
			Assert.IsTrue ((TestByte15 != TestByte255).Value, "!= operator 2" + Error);

		}

		[Test]
		public void ExclusiveOrOperator()
		{

			SqlByte TestByte15 = new SqlByte(15);
			SqlByte TestByte10 = new SqlByte(10);
			SqlByte TestByte255 = new SqlByte(255);

			Assert.AreEqual((SqlByte)5, (TestByte15 ^ TestByte10), "Exclusive or operator 1" + Error);
			Assert.AreEqual((SqlByte)240, (TestByte15 ^ TestByte255), "Exclusive or operator 2" + Error);
		}

		[Test]
		public void ThanOrEqualOperators()
		{

			SqlByte TestByte165 = new SqlByte(165);
			SqlByte TestByte100 = new SqlByte(100);
			SqlByte TestByte100II = new SqlByte(100);
			SqlByte TestByte255 = new SqlByte(255);

			Assert.IsTrue ((TestByte165 > TestByte100).Value, "> operator 1" + Error);
			Assert.IsTrue (!(TestByte165 > TestByte255).Value, "> operator 2" + Error);
			Assert.IsTrue (!(TestByte100 > TestByte100II).Value, "> operator 3" + Error);
			Assert.IsTrue (!(TestByte165 >= TestByte255).Value, ">= operator 