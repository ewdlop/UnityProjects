n clbe = new CommandLineBuilderExtension ();

			ale.ProductName = "a";
			ale.ARFC (clbe);
			
			Assert.AreEqual ("/product:a", clbe.ToString (), "A1");
		}

		[Test]
		public void TestProductVersion ()
		{
			ALExtended ale = new ALExtended ();
			CommandLineBuilderExtension clbe = new CommandLineBuilderExtension ();

			ale.ProductVersion = "a";
			ale.ARFC (clbe);
			
			Assert.AreEqual ("/productversion:a", clbe.ToString (), "A1");
		}

		[Test]
		public void TestResponseFiles ()
		{
			ALExtended ale = new ALExtended ();
			CommandLineBuilderExtension clbe = new CommandLineBuilderExtension ();

			ale.ResponseFiles = new string [2] { "a", "b" };
			ale.ARFC (clbe);
			
			Assert.AreEqual ("@a @b", clbe.ToString (), "A1");
		}

		[Test]
		public void TestSourceModules ()
		{
			ALExtended ale = new ALExtended ();
			CommandLineBuilderExtension clbe = new CommandLineBuilderExtension ();

			ale.SourceModules = new ITaskItem [2] { new TaskItem ("a"), new TaskItem ("b") };
			ale.ARFC (clbe);
			
			Assert.AreEqual ("a b", clbe.ToString (), "A1");
		}

		[Test]
		public void TestTargetType ()
		{
			ALExtended ale = new ALExtended ();
			CommandLineBuilderExtension clbe = new CommandLineBuilderExtension ();

			ale.TargetType = "a";
			ale.ARFC (clbe);
			
			Assert.AreEqual ("/target:a", clbe.ToString (), "A1");
		}

		[Test]
		public void TestTemplateFile ()
		{
			ALExtended ale = new ALExtended ();
			CommandLineBuilderExtension clbe = new CommandLineBuilderExtension ();

			ale.TemplateFile = "a";
			ale.ARFC (clbe);
			
			Assert.AreEqual ("/template:a", clbe.ToString (), "A1");
		}

		[Test]
		public void TestTitle ()
		{
			ALExtended