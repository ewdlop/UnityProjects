r.Empty;
			Assert.AreEqual (SystemColors.Window, textBox.BackColor, "#B13");
			Assert.AreEqual (3, _invalidated, "#B14");
			Assert.AreEqual (0, _paint, "#B15");
			
			form.Close ();
		}

		[Test] // bug #80626
		[Ignore ("Depends on default font height")]
		public void BorderStyle_None ()
		{
			textBox.BorderStyle = BorderStyle.None;
			Assert.AreEqual (20, textBox.Height, "#1");
			textBox.CreateControl ();
			Assert.AreEqual (13, textBox.Height, "#2");
		}

		[Test]
		public void ClearTest ()
		{
			textBox.Text = "TextBox1";
			Assert.AreEqual ("TextBox1", textBox.Text, "#28a" );
			textBox.Clear ();
			Assert.AreEqual ("", textBox.Text, "#28b");
		}

		[Test]
		public void ClearUndoTest ()
		{
			textBox.Text = "TextBox1";
			textBox.SelectionLength = 4;
			textBox.Copy ();
			Assert.AreEqual ("Text", textBox.SelectedText, "#29a");
			textBox.Paste ();
			Assert.AreEqual (true, textBox.CanUndo, "#29b");
			textBox.ClearUndo ();
			Assert.AreEqual (false, textBox.CanUndo, "#29c");
		}

		[Test] // bug #80620
		[Ignore ("Depends on default font height")]
		public void ClientRectangle_Borders ()
		{
			textBox.CreateControl ();
			Assert.AreEqual (textBox.ClientRectangle, new TextBox ().ClientRectangle);
		}

		[Test] // bug #80163
		public void ContextMenu ()
		{
			TextBox textBox = new TextBox ();
			Assert.IsNull (textBox.ContextMenu);
		}

		[Test]
		public void CopyTest ()
		{
			textBox.Text = "ABCDE";
			textBox.SelectionLength = 4;
			Assert.AreEqual (1, _changed, "#1");
			textBox.Copy ();
			Assert.AreEqual (1, _changed, "#2");
			Assert.AreEqual ("ABCD", textBox.SelectedText, "#3");
		}

		[Test]
		public void CutTest ()
		{
			textBox.