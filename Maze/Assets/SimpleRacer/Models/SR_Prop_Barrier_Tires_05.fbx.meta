ty>A</Property>
					</PropertyGroup>

					<ItemGroup>
						<Item Include='$(Property)' />
					</ItemGroup>
				</Project>
			";

			proj.LoadXml (documentString);

			Assert.AreEqual ("A", proj.EvaluatedProperties ["Property"].FinalValue, "A1");
			Assert.AreEqual ("A", proj.EvaluatedProperties ["Property"].Value, "A2");
			Assert.AreEqual ("A", GetItems (proj, "Item"), "A3");
		}

		[Test]
		public void TestOrder4 ()
		{
			Engine engine = new Engine (Consts.BinPath);
			Project proj = engine.CreateNewProject ();

			string documentString = @"
				<Project xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">
					<ItemGroup>
						<Item Include='$(Property)' />
					</ItemGroup>

					<PropertyGroup>
						<Property>A</Property>
					</PropertyGroup>
				</Project>
			";

			proj.LoadXml (documentString);

			Assert.AreEqual ("A", proj.EvaluatedProperties ["Property"].FinalValue, "A1");
			Assert.AreEqual ("A", proj.EvaluatedProperties ["Property"].Value, "A2");
			Assert.AreEqual ("A", GetItems (proj, "Item"), "A3");
		}

		[Test]
		public void TestOrder5 ()
		{
			Engine engine = new Engine (Consts.BinPath);
			Project proj = engine.CreateNewProject ();

			string documentString = @"
				<Project xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">
					<ItemGroup>
						<Item Include='$(Property)' />
					</ItemGroup>

					<PropertyGroup>
						<Property>A</Property>
						<Property2>@(Item)</Property2>
					</PropertyGroup>
				</Project>
			";

			proj.LoadXml (documentString);

			Assert.AreEqual ("A", proj.EvaluatedProperties ["Property"].FinalValue, "A1");
			Assert.AreEqual ("A", proj.EvaluatedProperties ["Property"]