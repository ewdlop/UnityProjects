 }
		}

		[MonoTODO]
		[Browsable (false)]
		public Control FieldTemplate { get; private set; }

		[Category ("Behavior")]
		[DefaultValue (true)]
		public bool HtmlEncode {
			get {
				if (htmlEncode == null) {
					MetaColumn column = Column;
					htmlEncode = column != null ? column.HtmlEncode : true;
				}

				return (bool)htmlEncode;
			}
			
			set { htmlEncode = value; }
		}

		IFieldFormattingOptions IFieldTemplateHost.FormattingOptions {
			get { return this; }
		}

		[MonoTODO]
		public DataBoundControlMode Mode { get; set; }

		[Category ("Behavior")]
		[DefaultValue ("")]
		public string NullDisplayText {
			get {
				if (nullDisplayText == null) {
					MetaColumn column = Column;
					if (column != null) {
						nullDisplayText = column.NullDisplayText;
						if (nullDisplayText == null)
							nullDisplayText = String.Empty;
					} else
						nullDisplayText = String.Empty;
				}

				return nullDisplayText;
			}
			
			set { nullDisplayText = value == null ? String.Empty : value; }
		}
		
		[Browsable (false)]
		public virtual MetaTable Table {
			get { return this.FindMetaTable (); }
		}

		[Category ("Behavior")]
		[DefaultValue ("")]
		public virtual string UIHint {
			get {
				if (uiHint == null) {
					MetaColumn column = Column;
					uiHint = column != null ? column.UIHint : String.Empty;
					if (uiHint == null)
						uiHint = String.Empty;
				}

				return uiHint;
			}
			
			set { uiHint = value != null ? value : String.Empty; }
			
		}

		[Themeable (false)]
		[Category ("Behavior")]
		[DefaultValue ("")]
		public virtual string ValidationGroup { get; set; }

		void CreateFieldTemplate ()
		{
			MetaColumn column = Column;
				
			// 