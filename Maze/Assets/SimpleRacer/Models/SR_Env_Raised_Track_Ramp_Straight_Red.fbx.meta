// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using System;
#if ES_BUILD_PCL || ES_BUILD_PN
using System.Collections.Generic;
#endif
using System.Reflection;
#if ES_BUILD_STANDALONE
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security;
#endif
#if ES_BUILD_AGAINST_DOTNET_V35
using Microsoft.Internal;
#endif
using Microsoft.Reflection;

#if ES_BUILD_STANDALONE
namespace Microsoft.Diagnostics.Tracing.Internal
#else
namespace System.Diagnostics.Tracing.Internal
#endif
{
    internal static class Environment
    {
        public static readonly string NewLine = System.Environment.NewLine;

        public static int TickCount => System.Environment.TickCount;

        public static string GetResourceString(string key, params object?[] args)
        {
            string? fmt = rm.GetString(key);
            if (fmt != null)
                return string.Format(fmt, args);

            string sargs = string.Join(", ", args);

            return key + " (" + sargs + ")";
        }

        public static string GetRuntimeResourceString(string key, params object?[] args)
        {
            return GetResourceString(key, args);
        }

        private static readonly System.Resources.ResourceManager rm = new System.Resources.ResourceManager("Microsoft.Diagnostics.Tracing.Messages", typeof(Environment).Assembly());
    }

#if ES_BUILD_STANDALONE
    internal static class BitOperations
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static ui