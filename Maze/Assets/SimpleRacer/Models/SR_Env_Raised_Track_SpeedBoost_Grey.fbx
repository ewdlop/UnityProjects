blyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IntPtr" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileStream">A <see cref="T:System.IntPtr" /> containing a <c>FILE</c> pointer</param>
        <param name="access">A <see cref="T:System.IO.FileAccess" /> value
          that determins how the file may be accessed by the 
          <see cref="T:Mono.Unix.StdioFileStream" /> object.  This parameter is 
          used to specify the initial values of the 
          <see cref="P:System.IO.Stream.CanRead" /> and
          <see cref="P:System.IO.Stream.CanWrite" /> properties.</param>
        <param name="ownsHandle">A <see cref="T:System.Boolean" /> specifying whether or not the created 
          <see cref="T:Mono.Unix.StdioFileStream" /> instance "owns" 
          <paramref name="fileStream" />.</param>
        <summary>Creates a <see cref="T:Mono.Unix.StdioFileStream" /> type,
        wrapping the existing unmanaged <c>FILE</c> pointer
        <paramref name="fileStream" /> with the specified file 
        <paramref name="access" />.</summary>
        <remarks>If <paramref name="ownsHandle" /> is <see langword="true" />,
        then <paramref name="fileStream" /> will be closed via 
        <see cref="M:Mono.Unix.Native.Stdlib.fclose" /> when 
        <see cref="M:Mono.Unix.StdioFileStream.Close" /> is invoked (which is
        also called from the finalizer and from the 
        <see cref="T:System.IDisposable" /> implementation).  Otherwise,
        <paramref name="fileStream" /> will only be flushed on 
        <see cref="M:Mono.Unix.StdioFileStream.Close" /> and not actually
        closed.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileStream" /> is an invalid <c>FILE</c> pointer.
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StdioFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">A <see cref="T:System.String" /> containing the file name to open.</param>
        <param name="mode">A <see cref="T:System.IO.FileMode" /> value that
        determines how to open or create the file.</param>
        <param name="access">A <see cref="T:System.IO.FileAccess" /> value
        that determins how the file may be accessed by the 
        <see cref="T:Mono.Unix.StdioFileStream" /> object.  This parameter is 
        used to specify the initial values of the 
        <see cref="P:System.IO.Stream.CanRead" /> and
        <see cref="P:System.IO.Stream.CanWrite" /> properties.</param>
        <summary>Opens <paramref name="path" /> with the specified file mode 
        <paramref name="mode" /> and file access
        <paramref name="access" />.</summary>
        <remarks>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> or <paramref name="mode" /> is 
          <see langword="null" />.
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> is a <c>0</c>-length string.
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="path" /> could not be opened.
        </exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="path" /> exists and 
          <see cref="F:System.IO.FileMode.CreateNew" /> was specified.
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="path" /> doesn't exist and 
          <see cref="F:System.IO.FileMode.Open" /> was specified.
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not one of 
          <see cref="F:System.IO.FileAccess.Read" />,
          <see cref="F:System.IO.FileAccess.Write" />, or
          <see cref="F:System.IO.FileAccess.ReadWrite" />.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~StdioFileStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The underlying <c>FILE</c> pointer.</summary>
        <value>A <see cref="T:System.IntPtr" /> containing the underlying
					<c>FILE</c> pointer.
        </value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidFileStream">
      <MemberSignature Language="C#" Value="public static readonly IntPtr InvalidFileStream;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int InvalidFileStream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An invalid <c>FILE</c> pointer.</summary>
        <remarks>This is <see cref="F:System.IntPtr.Zero" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFilePosition">
      <MemberSignature Language="C#" Value="public void RestoreFilePosition (Mono.Unix.Native.FilePosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RestoreFilePosition(class Mono.Unix.Native.FilePosition pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Mono.Unix.Native.FilePosition" />
      </Parameters>
      <Docs>
        <param name="pos">
          A <see cref="T:Mono.Unix.Native.FilePosition" /> from which to
          restore the file position.
        </param>
        <summary>Set the current file position saved in a 
        <see cref="T:Mono.Unix.Native.FilePosition" /> instance.</summary>
        <remarks>
          <para>The <see cref="T:Mono.Unix.Native.FilePosition" /> type holds
        a platform-specific representation of a file position.  This is useful
        when the underlying standard C library cannot hold a file position in
        a <c>long</c> data type.  For example, on 32-bit platforms a
        <c>long</c> is usually 32-bits in size; thus valid file
        positions as used from <see cref="P:System.IO.Stream.Position" />
        cannot be set past 2^31 bytes (effectively limiting you to 2GB files).
        </para>
          <para>Use this member if your underlying platform doesn't support
        <see cref="M:System.IO.Stream.Seek" />ing within large files, or you
        need to save text stream information.</para>
        </remarks>
        <altmember cref="M:Mono.Unix.Native.Stdlib.fsetpos" />
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public void Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rewind() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Set <see cref="P:Mono.Unix.StdioFileStream.Position" /> 
        to the beginning of the file.</summary>
        <remarks>This is equivalent to <see cref="M:System.IO.Stream.Seek" />(0, 
        <see cref="F:System.IO.SeekOrigin.Begin" />);</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveFilePosition">
      <MemberSignature Language="C#" Value="public void SaveFilePosition (Mono.Unix.Native.FilePosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFilePosition(class Mono.Unix.Native.FilePosition pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Mono.Unix.Native.FilePosition" />
      </Parameters>
      <Docs>
        <param name="pos">
          A <see cref="T:Mono.Unix.Native.FilePosition" /> in which to save 
          the current file position.
        </param>
        <summary>Save the current file position into a 
        <see cref="T:Mono.Unix.Native.FilePosition" /> instance.</summary>
        <remarks>
          <para>The <see cref="T:Mono.Unix.Native.FilePosition" /> type holds
        a platform-specific representation of a file position.  This is useful
        when the underlying standard C library cannot hold a file position in
        a <c>long</c> data type.  For example, on 32-bit platforms a
        <c>long</c> is usually 32-bits in size; thus valid file
        positions as used from <see cref="P:System.IO.Stream.Position" />
        cannot be set past 2^31 bytes (effectively limiting you to 2GB files).
        </para>
          <para>Use this member if your underlying platform doesn't support
        <see cref="M:System.IO.Stream.Seek" />ing within large files, or you
        need to save text stream information.</para>
        </remarks>
        <altmember cref="M:Mono.Unix.Native.Stdlib.fgetpos" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <param name="origin">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardError">
      <MemberSignature Language="C#" Value="public static readonly IntPtr StandardError;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int StandardError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The standard error file stream.</summary>
        <remarks>This is the 
        <see cref="F:Mono.Unix.Native.Stdlib.stderr" /> global variable.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInput">
      <MemberSignature Language="C#" Value="public static readonly IntPtr StandardInput;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int StandardInput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The standard input file stream.</summary>
        <remarks>This is the 
        <see cref="F:Mono.Unix.Native.Stdlib.stdin" /> global variable.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutput">
      <MemberSignature Language="C#" Value="public static readonly IntPtr StandardOutput;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly native int StandardOutput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The standard output file stream.</summary>
        <remarks>This is the 
        <see cref="F:Mono.Unix.Native.Stdlib.stdout" /> global variable.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Mem