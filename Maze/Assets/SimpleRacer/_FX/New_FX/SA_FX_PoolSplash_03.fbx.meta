//------------------------------------------------------------------------------
//     Copyright (c) Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------------------------

using System.Configuration;
using System.Reflection;
using System.Runtime;
using System.Xml;

namespace System.IdentityModel.Configuration
{
    class TypeResolveHelper
    {
        public static T Resolve<T>(ConfigurationElementInterceptor customTypeElement, Type customType) where T : class
        {
            if (customTypeElement == null)
            {
                throw DiagnosticUtility.ExceptionUtility.ThrowHelperArgumentNull("customTypeElement");
            }

            if (customType == null)
            {
                throw DiagnosticUtility.ExceptionUtility.ThrowHelperError(new TypeLoadException(SR.GetString(SR.ID8030, customTypeElement.ElementAsXml.OuterXml)));
            }
            
            try
            {
                if (!typeof(T).IsAssignableFrom(customType))
                {
                    throw DiagnosticUtility.ThrowHelperConfigurationError(
                        customTypeElement,
                        ConfigurationStrings.Type,
                        SR.GetString(SR.ID1029, customType.AssemblyQualifiedName, typeof(T)));
                }

                if (customTypeElement.ElementAsXml != null)
                {
                    //
                    // Remove any non-element children such as comments.
                    //
                    foreach (XmlNode node in customTypeElement.ElementAsXml.ChildNodes)
                    {
                       