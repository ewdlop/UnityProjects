//------------------------------------------------------------------------------
// <copyright file="BinHexDecoder.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
// <owner current="true" primary="true">Microsoft</owner>
//------------------------------------------------------------------------------

using System;
using System.Diagnostics;

namespace System.Xml
{
    internal class BinHexDecoder : IncrementalReadDecoder {
//
// Fields
//
        byte[]  buffer;
        int     startIndex;
        int     curIndex;
        int     endIndex;
        bool    hasHalfByteCached;
        byte    cachedHalfByte;

//
// IncrementalReadDecoder interface
//
        internal override int DecodedCount { 
            get { 
                return curIndex - startIndex; 
            } 
        }

        internal override bool IsFull { 
            get { 
                return curIndex == endIndex; 
            }
        }

#if SILVERLIGHT && !SILVERLIGHT_DISABLE_SECURITY
        [System.Security.SecuritySafeCritical]
#endif
        internal override unsafe int Decode(char[] chars, int startPos, int len) {
            if ( chars == null ) {
                throw new ArgumentNullException( "chars" );
            }
            if ( len < 0 ) {
                throw new ArgumentOutOfRangeException( "len" );
            }
            if ( startPos < 0 ) {
                throw new ArgumentOutOfRangeException( "startPos" );
            }
            if ( chars.Length - startPos < len ) {
                throw new ArgumentOutOfRangeException( "len" );
            }

            if ( len == 0 ) {
                return 0;
            }
            int bytesDecoded, charsDecoded;
            fixed ( char* pChars = &chars[startPos] ) {
                fixed ( byte* pBytes = &buffer[curIndex] ) {
                    Decode( pChars, pChars + len, pBytes, pBytes + ( endIndex - curIndex ),  
               