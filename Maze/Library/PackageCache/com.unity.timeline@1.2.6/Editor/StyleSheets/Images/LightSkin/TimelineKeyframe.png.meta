<?xml version="1.0"?>
<clause number="10.1" title="Application startup">
  <paragraph>Application startup occurs when the execution environment calls a designated method, which is referred to as the application's entry point. This entry point method is always named Main, and shall have one of the following signatures: <code_example><![CDATA[
static void Main() {...}  
static void Main(string[] args) {...}  
static int Main() {...}  
static int Main(string[] args) {...}  
]]></code_example></paragraph>
  <paragraph>As shown, the entry point may optionally return an <keyword>int</keyword> value. This return value is used in application termination (<hyperlink>10.2</hyperlink>). </paragraph>
  <paragraph>The entry point may optionally have one formal parameter, and this formal parameter may have any name. If such a parameter is declared, it must obey the following constraints: <list><list_item> The implementation shall ensure that the value of this parameter is not null. </list_item><list_item> Let args be the name of the parameter. If the length of the array designated by args is greater than zero, the array members args[0] through args[args.Length-1], inclusive, must refer to strings, called application parameters, which are given implementation-defined values by the host environment prior to application startup. The intent is to supply to the application information determined prior to application startup from elsewhere in the hosted environment. If the host environment is not capable of supplying strings with letters in both uppercase and lowercase, the implementation shall ensure that the strings are received in lowercase. <note>[Note: On systems supporting a command line, application parameters correspond to what are generally known as command-line arguments. end note]</note> </list_item></list></paragraph>
  <paragraph>Since C# supports method overloading, a class or struct may contain multiple definitions of some method, provided each has a different signature. However, within a single program, no class or struct shall contain more than one method called Main whose definition qualifies it to be used as an application entry point. Other overloaded versions of Main are permitted, however, provided they have more than one parameter, or their only parameter is other than type string[]. </paragraph>
  <paragraph>An application can be made up of multiple classes or structs. It is possible for more than one of