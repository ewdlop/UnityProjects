
//------------------------------------------------------------------------------
// <copyright file="TextWriterGenerator.cxx" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
// <owner current="true" primary="true">Microsoft</owner>
//------------------------------------------------------------------------------

// WARNING: This file is generated and should not be modified directly.  Instead,
// modify TextWriterGenerator.cxx and run gen.bat in the same directory.
// This batch file will execute the following commands:
//
//   cl.exe /C /EP /D _UTF8_TEXT_WRITER TextWriterGenerator.cxx > Utf8TextWriter.cs
//   cl.exe /C /EP /D _ENCODED_TEXT_WRITER TextWriterGenerator.cxx > EncodedTextWriter.cs
//
// Because these two implementations of TextWriter are so similar, the C++ preprocessor
// is used to generate each implementation from one template file, using macros and ifdefs.











using System;
using System.IO;
using System.Text;
//using System.Xml.Query;
using System.Xml.Schema;
using System.Diagnostics;
using System.Globalization;

namespace System.Xml {
    // Concrete implementation of XmlRawWriter interface that serializes text events as encoded
    // text.  All other non-text events are ignored.  The general-purpose TextEncodedRawTextWriter uses the
    // Encoder class to output to any encoding.  The TextUtf8RawTextWriter class combined the encoding
    // operation with serialization in order to achieve better performance.
    // </summary>
    internal class TextUtf8RawTextWriter : XmlUtf8RawTextWriter {







        // Construct an instance of this class that serializes to a Stream interface.
        public TextUtf8RawTextWriter( Stream stream, XmlWriterSettings settings ) : base( strea