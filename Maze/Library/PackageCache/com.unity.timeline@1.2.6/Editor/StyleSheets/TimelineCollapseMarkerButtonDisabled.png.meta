<?xml version="1.0"?>
<clause number="12.1.7" title="Local variables">
  <paragraph>A local variable is declared by a <non_terminal where="15.5.1">local-variable-declaration</non_terminal>, which may occur in a block, a <non_terminal where="15.8.3">for-statement</non_terminal>, a <non_terminal where="15.7.2">switch-statement</non_terminal>, or a <non_terminal where="15.13">using-statement</non_terminal>. </paragraph>
  <paragraph>The lifetime of a local variable is the portion of program execution during which storage is guaranteed to be reserved for it. This lifetime extends from entry into the block, <non_terminal where="15.8.3">for-statement</non_terminal>, <non_terminal where="15.7.2">switch-statement</non_terminal>, or  <non_terminal where="15.13">using-statement</non_terminal> with which it is associated, until execution of that block, <non_terminal where="15.8.3">for-statement</non_terminal>, <non_terminal where="15.7.2">switch-statement</non_terminal>, or  <non_terminal where="15.13">using-statement</non_terminal> ends in any way. (Entering an enclosed block or calling a method suspends, but does not end, execution of the current block, <non_terminal where="15.8.3">for-statement</non_terminal>, <non_terminal where="15.7.2">switch-statement</non_terminal>, or <non_terminal where="15.13">using-statement</non_terminal>.) If the parent block,  <non_terminal where="15.8.3">for-statement</non_terminal>, <non_terminal where="15.7.2">switch-statement</non_terminal>, or <non_terminal where="15.13">using-statement</non_terminal> is entered recursively, a new instance of the local variable is created each time, and its <non_terminal where="15.5.1">local-variable-initializer</non_terminal>, if any, is evaluated each time. </paragraph>
  <paragraph>A local variable is not automatically initialized and thus has no default value. For the purpose of definite assignment checking, a local variable is cons