<?xml version="1.0" encoding="utf-8"?>
<Type Name="TextFormatFlags" FullName="System.Windows.Forms.TextFormatFlags">
  <TypeSignature Language="C#" Value="public enum TextFormatFlags" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Windows.Forms.TextFormatFlags" /> enumeration is used by the <see cref="T:System.Windows.Forms.TextRenderer" /> when drawing and measuring text. The <see cref="T:System.Windows.Forms.TextRenderer" /> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <see cref="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" /> flag.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Specifies the display and layout information for text strings.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="Bottom" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Aligns the text on the bottom of the bounding rectangle. Applied only when the text is a single line.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Applies the default formatting, which is left-aligned.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EndEllipsis">
      <MemberSignature Language="C#" Value="EndEllipsis" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Removes the end of trimmed lines, and replaces them with an ellipsis.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExpandTabs">
      <MemberSignature Language="C#" Value="ExpandTabs" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Expands tab characters. The default number of characters per tab is eight. The <see cref="F:System.Windows.Forms.TextFormatFlags.WordEllipsis" />, <see cref="F:System.Windows.Forms.TextFormatFlags.PathEllipsis" />, and <see cref="F:System.Windows.Forms.TextFormatFlags.EndEllipsis" /> values cannot be used with <see cref="F:System.Windows.Forms.TextFormatFlags.ExpandTabs" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExternalLeading">
      <MemberSignature Language="C#" Value="ExternalLeading" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Includes the font external leading in line height. Typically, external leading is not included in the height of a line of text.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GlyphOverhangPadding">
      <MemberSignature Language="C#" Value="GlyphOverhangPadding" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds padding to the bounding rectangle to accommodate overhanging glyphs. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HidePrefix">
      <MemberSignature Language="C#" Value="HidePrefix" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Ignores the ampersand (&amp;) prefix character in the text. The letter that follows will not be underlined, but other mnemonic-prefix characters are still processed. For example, an input string of "A&amp;bc&amp;&amp;d" with <see cref="F:System.Windows.Forms.TextFormatFlags.HidePrefix" /> applied would result in output of "Abc&amp;d".</para>
          <para>Compare with <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" /> and <see cref="F:System.Windows.Forms.TextFormatFlags.PrefixOnly" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Applies to Windows 2000 and Windows XP only: </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HorizontalCenter">
      <MemberSignature Language="C#" Value="HorizontalCenter" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Centers the text horizontally within the bounding rectangle.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Internal">
      <MemberSignature Language="C#" Value="Internal" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Uses the system font to calculate text metrics.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="Left" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Aligns the text on the left side of the clipping area.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LeftAndRightPadding">
      <MemberSignature Language="C#" Value="LeftAndRightPadding" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds padding to both sides of the bounding rectangle.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ModifyString">
      <MemberSignature Language="C#" Value="ModifyString" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Has no effect on the drawn text.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NoClipping">
      <MemberSignature Language="C#" Value="NoClipping" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Allows the overhanging parts of glyphs and unwrapped text reaching outside the formatting rectangle to show.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NoFullWidthCharacterBreak">
      <MemberSignature Language="C#" Value="NoFullWidthCharacterBreak" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prevents a line break at a double-wide character string, so that the line-breaking rule is equivalent to single-wide character strings. For example, <see cref="F:System.Windows.Forms.TextFormatFlags.NoFullWidthCharacterBreak" /> increases the readability of icon labels in Korean windows. This value has no effect unless <see cref="F:System.Windows.Forms.TextFormatFlags.WordBreak" /> is also specified.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Applies to Windows 98, Windows Me, Windows 2000, or Windows XP only:</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NoPadding">
      <MemberSignature Language="C#" Value="NoPadding" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Does not add padding to the bounding rectangle.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NoPrefix">
      <MemberSignature Language="C#" Value="NoPrefix" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Compare with <see cref="F:System.Windows.Forms.TextFormatFlags.HidePrefix" /> and <see cref="F:System.Windows.Forms.TextFormatFlags.PrefixOnly" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Turns off processing of prefix characters. Typically, the ampersand (&amp;) mnemonic-prefix character is interpreted as a directive to underscore the character that follows, and the double-ampersand (&amp;&amp;) mnemonic-prefix characters as a directive to print a single ampersand. By specifying <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" />, this processing is turned off. For example, an input string of "A&amp;bc&amp;&amp;d" with <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" /> applied would result in output of "A&amp;bc&amp;&amp;d".</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PathEllipsis">
      <MemberSignature Language="C#" Value="PathEllipsis" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Removes the center of trimmed lines and replaces it with an ellipsis. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrefixOnly">
      <MemberSignature Language="C#" Value="PrefixOnly" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Draws only an underline at the position of the character following the ampersand (&amp;) prefix character. Does not draw any other characters in the string. For example, an input string of "A&amp;bc&amp;&amp;d" would result in output of " _   ".</para>
          <para>Compare with <see cref="F:System.Windows.Forms.TextFormatFlags.HidePrefix" /> and <see cref="F:System.Windows.Forms.TextFormatFlags.NoPrefix" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Applies to Windows 2000 or Windows XP only: </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PreserveGraphicsClipping">
      <MemberSignature Language="C#" Value="PreserveGraphicsClipping" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Preserves the clipping specified by a <see cref="T:System.Drawing.Graphics" /> object. Applies only to methods receiving an <see cref="T:System.Drawing.IDeviceContext" /> that is a <see cref="T:System.Drawing.Graphics" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PreserveGraphicsTranslateTransform">
      <MemberSignature Language="C#" Value="PreserveGraphicsTranslateTransform" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Preserves the transformation specified by a <see cref="T:System.Drawing.Graphics" />. Applies only to methods receiving an <see cref="T:System.Drawing.IDeviceContext" /> that is a <see cref="T:System.Drawing.Graphics" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="Right" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Aligns the text on the right side of the clipping area.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="RightToLeft" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Displays the text from right to left.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SingleLine">
      <MemberSignature Language="C#" Value="SingleLine" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Displays the text in a single line.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TextBoxControl">
      <MemberSignature Language="C#" Value="TextBoxControl" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the text should be formatted for display on a <see cref="T:System.Windows.Forms.TextBox" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="Top" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Aligns the text on the top of the bounding rectangle.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="VerticalCenter">
      <MemberSignature Language="C#" Value="VerticalCenter" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Centers the text vertically, within the bounding rectangle.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="WordBreak">
      <MemberSignature Language="C#" Value="WordBreak" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Breaks the text at the end of a word.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="WordEllipsis">
      <MemberSignature Language="C#" Value="WordEllipsis" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextFormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Trims the line to the nearest word and an ellipsis is placed at the end of a trimmed line.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   <?xml version="1.0" encoding="utf-8"?>
<Type Name="MachineKeySection" FullName="System.Web.Configuration.MachineKeySection">
  <TypeSignature Language="C#" Value="public sealed class MachineKeySection : System.Configuration.ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Web.Configuration.MachineKeySection" /> class provides a way to programmatically access and modify the content of the MachineKey section in the configuration file. The MachineKey section can be configured at the machine (Machine.config) or application (Web.config) level and controls the keys and algorithms that are used for Windows Forms authentication, view-state validation, and session-state application isolation. For any of these features to work across a network of Web servers (a Web farm), the DecryptionKey and ValidationKey attributes of the MachineKey section must be configured explicitly and identically with valid key values. The AutoGenerate value does not work for Web farms, because it relies on a cryptographically random secret, which is persisted using machine-local protection and will not be the same across more than one computer.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Defines the configuration settings that control the key generation and algorithms that are used in encryption, decryption, and message authentication code (MAC) operations in Windows Forms authentication, view-state validation, and session-state application isolation. This class cannot be inherited.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MachineKeySection ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The constructor is not intended to be used directly from your code. It is called by the ASP.NET configuration system. You obtain an instance of the <see cref="T:System.Web.Configuration.MachineKeySection" /> class by using the <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.Configuration.MachineKeySection" /> class by using default settings.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Decryption">
      <MemberSignature Language="C#" Value="public string Decryption { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryption", DefaultValue="Auto")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.Configuration.MachineKeySection.Decryption" /> property supports the following decryption values: </para>
          <list type="bullet">
            <item>
              <para>Auto, which is the default value, specifies that ASP.NET determines which encryption algorithm to use based on configuration default settings. </para>
            </item>
            <item>
              <para>AES, which specifies that ASP.NET uses the <see cref="F:System.Web.Configuration.MachineKeyValidation.AES" /> algorithm to encrypt data. AES is the default algorithm to encrypt data.</para>
            </item>
            <item>
              <para>3DES, which specifies that ASP.NET uses the <see cref="F:System.Web.Configuration.MachineKeyValidation.TripleDES" /> algorithm to encrypt data. </para>
            </item>
            <item>
              <para>A custom algorithm. </para>
            </item>
          </list>
          <para>This property is  typically set declaratively in the decryption attribute of the <format type="text/html"><a href="4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46">machineKey</a></format> element of the Web.config file. For more information, see the <format type="text/html"><a href="4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46">machineKey</a></format> element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the encryption algorithm that is used for encrypting and decrypting forms authentication data. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DecryptionKey">
      <MemberSignature Language="C#" Value="public string DecryptionKey { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryptionKey", DefaultValue="AutoGenerate,IsolateApps")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> property is used for encryption and decryption, such as in Windows Forms authentication, and for view state when the <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> property is set to "3DES" or "AES".</para>
          <para>Use the "AutoGenerate" option to specify that ASP.NET generates a random key and stores it in the Local Security Authority. The "AutoGenerate" option is part of the default value. </para>
          <para>If you add the "IsolateApps" modifier to the "AutoGenerate" <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> value, ASP.NET generates a unique encrypted key for each application by using each application's <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />. This is the default setting.</para>
          <para>If you add the "IsolateByAppId" modifier to the "AutoGenerate" <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> value, ASP.NET generates a unique encrypted key for each application by using each application's <see cref="P:System.Web.HttpRuntime.AppDomainAppId" />. If two distinct applications share a virtual path (perhaps because those applications are running on different ports), this flag can be used to further distinguish them from one another. The “IsolateByAppId” flag is understood only by ASP.NET 4.5, but it can be used regardless of the <see cref="P:System.Web.Configuration.MachineKeySection.CompatibilityMode" /> setting.</para>
          <para>If you need to support configuration across a network of Web servers (a Web farm), set the <see cref="P:System.Web.Configuration.MachineKeySection.DecryptionKey" /> property manually to ensure consistent configuration. For information about how to manually generate values for the DecryptionKey attribute, see <see cref="http://go.microsoft.com/fwlink/?linkid=155113">How To: Configure MachineKey in ASP.NET 2.0</see>.</para>
          <para>This property is  typically set declaratively in the DecryptionKey attribute of the <format type="text/html"><a href="4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46">machineKey</a></format> element of the Web.config file. For more information, see the <format type="text/html"><a href="4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46">machineKey</a></format> element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the key that is used to encrypt and decrypt data, or the process by which the key is generated. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyValidation Validation { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validation", DefaultValue="SHA1")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.MachineKeyValidationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> property supports encryption algorithms that are defined by the <see cref="T:System.Web.Configuration.MachineKeyValidation" /> enumeration. This property is typically set declaratively in the decryption attribute of the <format type="text/html"><a href="4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46">machineKey</a></format> element of the Web.config file. For more information, see the <format type="text/html"><a href="4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46">machineKey</a></format> element. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the hashing algorithm that is used for validating forms authentication and view state data. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValidationKey">
      <MemberSignature Language="C#" Value="public string ValidationKey { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validationKey", DefaultValue="AutoGenerate,IsolateApps")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> property is used when enableViewStateMAC is true to create a message authentication code (MAC) to enable ASP.NET to determine whether view state has been tampered with. The <see cref="P:System.Web.Configuration.MachineKeySection.ValidationKey" /> property is also used to generate out-of-process, application-specific session IDs to ensure that session state variables are isolated betwee