e;
                this.CurrentScope = new Scope(sin, this.CurrentScope.ContainingScope);
                base.VisitInsert(sin);
                this.CurrentScope = save;
                return sin;
            }

            internal override SqlStatement VisitUpdate(SqlUpdate sup) {
                Scope save = this.CurrentScope;
                this.CurrentScope = new Scope(sup.Select, this.CurrentScope.ContainingScope);
                base.VisitUpdate(sup);
                this.CurrentScope = save;
                return sup;
            }

            internal override SqlStatement VisitDelete(SqlDelete sd) {
                Scope save = this.CurrentScope;
                this.CurrentScope = new Scope(sd, this.CurrentScope.ContainingScope);
                base.VisitDelete(sd);
                this.CurrentScope = save;
                return sd;
            }

            internal override SqlSource VisitJoin(SqlJoin join) {
                Scope save = this.CurrentScope;
                switch (join.JoinType) {
                    case SqlJoinType.CrossApply:
                    case SqlJoin