	{
			if (rawData == null || rawData.Length == 0)
				throw new ArgumentException (SR.Arg_EmptyOrNullArray, nameof (rawData));

			ValidateKeyStorageFlags (keyStorageFlags);

			using (var safePasswordHandle = new SafePasswordHandle (password))
				impl = X509Helper.Import (rawData, safePasswordHandle, keyStorageFlags);
		}

		public X509Certificate (IntPtr handle)
		{
			throw new PlatformNotSupportedException ("Initializing `X509Certificate` from native handle is not supported.");
		}

		internal X509Certificate (X509CertificateImpl impl)
		{
			Debug.Assert (impl != null);
			this.impl = X509Helper.InitFromCertificate (impl);
		}

		public X509Certificate (string fileName)
			: this (fileName, (string)null, X509KeyStorageFlags.DefaultKeySet)
		{
		}

		public X509Certificate (string fileName, string password)
			: this (fileName, password, X509KeyStorageFlags.DefaultKeySet)
		{
		}

		[CLSCompliantAttribute(false)]
		public X509Certificate (string fileName, SecureString password)
			: this (fileName, password, X509KeyStorageFlags.DefaultKeySet)
		{
		}

		public X509Certificate (string fileName, string password, X509KeyStorageFlags keyStorageFlags)
		{
			if (fileName == null)
				throw new ArgumentNullException (nameof (fileName));

			ValidateKeyStorageFlags (keyStorageFlags);

			var rawData = File.ReadAllBytes (fileName);
			using (var safePasswordHandle = new SafePasswordHandle (password))
				impl = X509Helper.Import (rawData, safePasswordHandle, keyStorageFlags);
		}

		[CLSCompliantAttribute (false)]
		public X509Certificate (string fileName, SecureString password, X509KeyStorageFlags keyStorageFlags) : this ()
		{
			if (fileName == null)
				throw new ArgumentNullException (nameof (fileName));

			ValidateKeyStorageFlags (keyStorageFlags);

			var rawData = File.ReadAllBytes (fileName);
			using (var safePasswordHandle = new SafePassword