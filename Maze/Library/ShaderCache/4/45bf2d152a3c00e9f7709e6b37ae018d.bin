ThrowIfInvalid ();

			DateTime notAfter = lazyNotAfter;
			if (notAfter == DateTime.MinValue)
				notAfter = lazyNotAfter = impl.NotAfter;
			return notAfter;
		}

		internal DateTime GetNotBefore ()
		{
			ThrowIfInvalid ();

			DateTime notBefore = lazyNotBefore;
			if (notBefore == DateTime.MinValue)
				notBefore = lazyNotBefore = impl.NotBefore;
			return notBefore;
		}

		/// <summary>
		///     Convert a date to a string.
		/// 
		///     Some cultures, specifically using the Um-AlQura calendar cannot convert dates far into
		///     the future into strings.  If the expiration date of an X.509 certificate is beyond the range
		///     of one of these cases, we need to fall back to a calendar which can express the dates
		/// </summary>
		protected static string FormatDate (DateTime date)
		{
			CultureInfo culture = CultureInfo.CurrentCulture;

			if (!culture.DateTimeFormat.Calendar.IsValidDay (date.Year, date.Month, date.Day, 0)) {
				// The most common case of culture failing to work is in the Um-AlQuara calendar. In this case,
				// we can fall back to the Hijri calendar, otherwise fall back to the invariant culture.
#if !MOBILE
				if (culture.DateTimeFormat.Calendar is UmAlQuraCalendar) {
					culture = culture.Clone () as CultureInfo;
					culture.DateTimeFormat.Calendar = new HijriCalendar ();
				} else
#endif
				{
					culture = CultureInfo.InvariantCulture;
				}
			}

			return date.ToString (culture);
		}