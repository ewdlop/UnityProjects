electedIndex, "#D1");
			Assert.AreEqual (3, tab.TabPages.Count, "#D2");
			Assert.AreEqual (2, _selected_index_changed, "#D3");

			// remove first tab
			tab.Controls.RemoveAt (0);
			Assert.AreEqual (0, tab.SelectedIndex, "#E1");
			Assert.AreEqual (2, tab.TabPages.Count, "#E2");
			Assert.AreEqual (3, _selected_index_changed, "#E3");

			// remove remaining tabs
			tab.Controls.RemoveAt (1);
			tab.Controls.RemoveAt (0);
			Assert.AreEqual (-1, tab.SelectedIndex, "#F1");
			Assert.AreEqual (0, tab.TabPages.Count, "#F2");
			Assert.AreEqual (4, _selected_index_changed, "#F3");
		}

		[Test]
		[Category ("NotWorking")]
		public void Controls_Remove_HandleNotCreated ()
		{
			TabControl tab = new TabControl ();
			tab.SelectedIndexChanged += new EventHandler (SelectedIndexChanged);
			tab.Controls.Add (new TabPage ());
			tab.Controls.Add (new TabPage ());
			tab.Controls.Add (new TabPage ());
			tab.Controls.Add (new TabPage ());
			tab.Controls.Add (new TabPage ());
			tab.Controls.Add (new TabPage ());

			Assert.AreEqual (-1, tab.SelectedIndex, "#A1");
			Assert.AreEqual (6, tab.TabPages.Count, "#A2");
			Assert.AreEqual (0, _selected_index_changed, "#A3");

			// remove selected tab
			tab.SelectedIndex = 2;
			Assert.AreEqual (2, tab.SelectedIndex, "#B1");
			Assert.AreEqual (0, _selected_index_changed, "#B2");
			tab.Controls.RemoveAt (2);
			Assert.AreEqual (0, tab.SelectedIndex, "#B3");
			Assert.AreEqual (5, tab.TabPages.Count, "#B4");
			Assert.AreEqual (0, _selected_index_changed, "#B5");

			// remove not-selected tab
			tab.Controls.RemoveAt (3);
			Assert.AreEqual (0, tab.SelectedIndex, "#C3");
			Assert.AreEqual (4, tab.TabPages.Count, "#C4");
			Assert.AreEqual (0, _selected_index_changed, "#C5");

			// remove last tab
			tab.Controls.RemoveAt (3);
			Assert.AreEqual (0, tab.SelectedIndex, "#D1");
			Assert.AreEqual (3, tab.TabPages.Count, "#D2");
			Assert.AreEqual (0, _selected_index_changed, "#D3");

			// remove first tab
			tab.Controls.RemoveAt (0);
			Assert.AreEqual (0, tab.SelectedIndex, "#E1");
			Assert.AreEqual (2, tab.TabPages.Count, "#E2");
			Assert.AreEqual (0, _selected_index_changed, "#E3");

			// remove remaining tabs
			tab.Controls.RemoveAt (1);
			tab.Controls.RemoveAt (0);
			Assert.AreEqual (0, tab.SelectedIndex, "#F1");
			Assert.AreEqual (0, tab.TabPages.Count, "#F2");
			Assert.AreEqual (0, _selected_index_changed, "#F3");

			Form form = new Form ();
			form.ShowInTaskbar = false;
			form.Controls.Add (tab);
			form.Show ();
			Assert.AreEqual (-1, tab.SelectedIndex, "#G1");
			Assert.AreEqual (0, tab.TabPages.Count, "#G2");
			Assert.AreEqual (0, _selected_index_changed, "#G3");
		}

		[Test]
		public void SelectedIndex ()
		{
			TabControl tab = new TabControl ();
			tab.SelectedIndexChanged += new EventHandler (SelectedIndexChanged);
			tab.Controls.Add (new TabPage ());
			tab.Controls.Add (new TabPage ());

			tab.SelectedIndex = 0;
			Assert.AreEqual (0, _selected_index_changed, "#A1");
			Assert.AreEqual (0, tab.SelectedIndex, "#A2");

			tab.SelectedIndex = -1;
			Assert.AreEqual (0, _selected_index_changed, "#B1");
			Assert.AreEqual (-1, tab.SelectedIndex, "#B2");

			tab.SelectedIndex = 1;
			Assert.AreEqual (0, _selected_index_changed, "#C1");
			Assert.AreEqual (1, tab.SelectedIndex, "#C2");

			tab.SelectedIndex = 1;
			Assert.AreEqual (0, _selected_index_changed, "#D1");
			Assert.AreEqual (1, tab.SelectedIndex, "#D2");


			tab.SelectedIndex = 6;
			Assert.AreEqual (0, _selected_index_changed, "#E1");
			Assert.AreEqual (6, tab.SelectedIndex, "#E2");

			tab.SelectedIndex = 6;
			Assert.AreEqual (0, _selected_index_changed, "#E31");
			Assert.AreEqual (6, tab.SelectedIndex, "#E4");

			Form form = new Form ();
			form.ShowInTaskbar = false;
			form.Controls.Add (tab);

			form.Show ();

			Assert.AreEqual (0, tab.SelectedIndex, "#E5");

			tab.SelectedIndex = 0;
			Assert.AreEqual (0, _selected_index_changed, "#F1");
			Assert.AreEqual (0, tab.SelectedIndex, "#F2");

			tab.SelectedIndex = -1;
			Assert.AreEqual (1, _selected_index_changed, "#G1");
			Assert.AreEqual (-1, tab.SelectedIndex, "#G2");

			tab.SelectedIndex = 1;
			Assert.AreEqual (2, _selected_index_changed, "#H1");
			Assert.AreEqual (1, tab.SelectedIndex, "#H2");

			tab.SelectedIndex = 1;
			Assert.AreEqual (2, _selected_index_changed, "#I1");
			Assert.AreEqual (1, tab.SelectedIndex, "#I2");

			form.Dispose ();
		}

		[Test] // bug #78395
		public void SelectedIndex_Ignore ()
		{
			TabControl c = new TabControl ();
			c.SelectedIndexChanged += new EventHandler (SelectedIndexChanged);
			c.SelectedIndex 