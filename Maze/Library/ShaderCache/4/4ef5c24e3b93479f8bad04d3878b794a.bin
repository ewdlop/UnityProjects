<?xml version="1.0" encoding="utf-8"?>
<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class is used to render HTML 4.0 to desktop browsers. The <see cref="T:System.Web.UI.HtmlTextWriter" /> is also the base class for all markup writers in the <see cref="N:System.Web.UI" /> namespace, including the <see cref="T:System.Web.UI.ChtmlTextWriter" />, <see cref="T:System.Web.UI.Html32TextWriter" />, and <see cref="T:System.Web.UI.XhtmlTextWriter" /> classes. These classes are used to write the elements, attributes, and style and layout information for different types of markup. In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</para>
      <para>In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device. However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the controlAdapters section of the application .browser file. </para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Writes markup characters and text to an ASP.NET server control output stream. This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" /> overload of the <see cref="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" /> constructor uses the <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> constant when indentation of a line is necessary. It calls the <see cref="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" /> overload to initialize the new instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
 