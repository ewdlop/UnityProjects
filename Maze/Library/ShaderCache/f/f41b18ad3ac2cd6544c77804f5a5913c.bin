using System;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Net;
using System.IO;
using System.Configuration;
using System.Web.Configuration;
using System.Collections;
using System.Runtime.Remoting.Messaging;
using System.Reflection;
using System.Threading;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Runtime.Serialization.Formatters.Soap;
using System.Collections.Specialized;

namespace MonoTests.SystemWeb.Framework
{
	internal class MyHost : MarshalByRefObject
	{
		public const string INVOKER_HEADER = "NunitWebInvoker";
		public const string USER_HEADER = "NunitWebUserData";
		public const string EXCEPTION_HEADER = "NunitWebException";
		private const string CURRENT_WEBTEST = "NunitWebCurrentTest";
		public AppDomain AppDomain
		{ get { return AppDomain.CurrentDomain; } }

		public static string Serialize (object o) {
			return Serialize (o, new SoapFormatter ());
		}
		public static string SerializeBinary (object o) {
			return Serialize (o, new SoapFormatter ());
		}
		public static string Serialize (object o, IFormatter f)
		{
			if (o == null)
				return string.Empty;
			using (MemoryStream ms = new MemoryStream ()) {
				try {
					f.Serialize (ms, o);
				}
				catch (Exception ex) {
					Exception inner = o as Exception;
					if (inner != null)
						RethrowException (inner);
					else
						throw;
				}
				return HttpUtility.UrlEncode (ms.ToArray ());
			}
		}

		public static object Deserialize (string s) {
			return Deserialize (s, new SoapFormatter ());
		}
		public static object DeserializeBinary (string s) {
			return Deserial