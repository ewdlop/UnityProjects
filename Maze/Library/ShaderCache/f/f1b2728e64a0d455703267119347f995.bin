Deserialize(ms);
                        } finally {
                            ms.Close();
                        }
                    }
                } 
                catch (Exception exception) { 
                    try {
                        if (IsHostedInAspnet()) {
                            object[]    args = new object[] { Property, this, exception};

                            const string webBaseEventTypeName = "System.Web.Management.WebBaseEvent, " +  AssemblyRef.SystemWeb;
                            
                            Type type = Type.GetType(webBaseEventTypeName, true);
                            
                            type.InvokeMember("RaisePropertyDeserializationWebErrorEvent",
                                BindingFlags.NonPublic|BindingFlags.Static|BindingFlags.InvokeMethod, 
                                null, null, args, CultureInfo.InvariantCulture);
                        }
                    }
                    catch {
                    }
                }

               if (val != null && !Property.PropertyType.IsAssignableFrom(val.GetType())) // is it the correct type
                    val = null;
            }

            //////////////////////////////////////////////
            /// Step 2: Try creating from default value
            if (val == null)
            {
                _UsingDefaultValue = true;
                if (Property.DefaultValue == null || Property.DefaultValue.ToString() == "[null]") {
                    if (Property.PropertyType.IsValueType)
                        return SecurityUtils.SecureCreateInstance(Property.PropertyType);
                    else
                        return null;
                }
                if (!(Property.DefaultValue is string)) {
                    val = Property.DefaultValue;
                } else {
                    try {
         