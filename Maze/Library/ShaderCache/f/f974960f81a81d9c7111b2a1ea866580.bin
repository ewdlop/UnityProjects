tor <T> >_results;            // a list of result pixels
    
    
    bool _inserting_result;
    bool _started;                          // we've started to assemble the values - no more channels permitted
    vector<T> _current_sample;              // one value per channel for the sample currently being inserted
    vector< vector <T> > _current_pixel;    // a list of results for the current pixwel
    vector< vector< vector<T> > > _samples; // a list of pixels
    PixelType _type;
    
    data() : _inserting_result(false),_started(false)
    {  
        if(typeid(T)==typeid(half))
        {
            _type = OPENEXR_IMF_NAMESPACE::HALF;
        }
        else
        {
            _type = OPENEXR_IMF_NAMESPACE::FLOAT;
        }
    }


    // add a value to the current sample
    data & operator << (float value)
    {
        if(_inserting_result)
        {
          _current_result.push_back(value);
        }else{
          _current_sample.push_back(T(value));
        }
        _started=true;
        return *this;
    }
    
    // switch between writing samples and the result
    data 