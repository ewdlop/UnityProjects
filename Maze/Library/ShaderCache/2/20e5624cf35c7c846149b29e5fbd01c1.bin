buffer">
            When this method returns, this parameter contains the specified character
            array with the values between index and (index + count -1) replaced by the
            characters read from the current source.
            </param>
            <param name="index">The position in buffer at which to begin writing.</param>
            <param name="count">The maximum number of characters to read.</param>
            <returns>A Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:AsyncExtensions.ReadLineAsync(System.IO.TextReader)">
            <summary>
            Reads a line of characters from the reader and returns the string asynchronously.
            </summary>
            <param name="source">the source reader.</param>
            <returns>A Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:AsyncExtensions.ReadToEndAsync(System.IO.TextReader)">
            <summary>
            Reads all characters from the current position to the end of the TextReader
            and returns them as one string asynchronously.
            </summary>
            <param name="source">the source reader.</param>
            <returns>A Task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteAsync(System.IO.TextWriter,System.String)">
            <summary>Writes a string asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="value">The string to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteAsync(System.IO.TextWriter,System.Char)">
            <summary>Writes a char asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="value">The char to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteAsync(System.IO.TextWriter,System.Char[])">
            <summary>Writes a char array asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="buffer">The buffer to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteAsync(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)">
            <summary>Writes a subarray of characters asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="buffer">The buffer to write.</param>
            <param name="index">Starting index in the buffer.</param>
            <param name="count">The number of characters to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteLineAsync(System.IO.TextWriter)">
            <summary>Writes a line terminator asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteLineAsync(System.IO.TextWriter,System.String)">
            <summary>Writes a string followed by a line terminator asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="value">The string to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteLineAsync(System.IO.TextWriter,System.Char)">
            <summary>Writes a char followed by a line terminator asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="value">The char to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteLineAsync(System.IO.TextWriter,System.Char[])">
            <summary>Writes a char array followed by a line terminator asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="buffer">The buffer to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.WriteLineAsync(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)">
            <summary>Writes a subarray of characters followed by a line terminator asynchronously to a text stream.</summary>
            <param name="target">The writer.</param>
            <param name="buffer">The buffer to write.</param>
            <param name="index">Starting index in the buffer.</param>
            <param name="count">The number of characters to write.</param>
            <returns>A Task representing the asynchronous write.</returns>
        </member>
        <member name="M:AsyncExtensions.FlushAsync(System.IO.TextWriter)">
            <summary>
            Clears all buffers for the current writer and causes any buffered data to
            be written to the underlying device.
            </summary>
            <param name="target">The writer.</param>
            <returns>A Task representing the asynchronous flush.</returns>
        <