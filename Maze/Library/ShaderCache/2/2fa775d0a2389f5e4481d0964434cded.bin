<?xml version="1.0" encoding="utf-8"?>
<Type Name="TemplateColumn" FullName="System.Web.UI.WebControls.TemplateColumn">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class TemplateColumn : System.Web.UI.WebControls.DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Use the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> column type in a <see cref="T:System.Web.UI.WebControls.DataGrid" /> control to create a column with a customized control layout. You can provide a custom appearance for the heading section, the footer section, and the items section of the column by using the <see cref="P:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate" />, <see cref="P:System.Web.UI.WebControls.TemplateColumn.FooterTemplate" />, and <see cref="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate" /> properties, respectively. You can also control how an item being edited is displayed in the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> object by setting the <see cref="P:System.Web.UI.WebControls.TemplateColumn.EditItemTemplate" /> property.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a column type for the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control that allows you to customize the layout of controls in the column.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateColumn ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this constructor to create and initialize a new instance of the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>a <see cref="T:System.Web.UI.ITemplate" /></value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.TemplateColumn.EditItemTemplate" /> property to control the appearance of the item selected for editing in the <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> object. The appearance is specified by creating a template that defines how the item is rendered in the column. To specify a template for the item selected for editing, first place opening and closing &lt;EditItemTemplate&gt; tags between the opening and closing tags of the &lt;TemplateColumn&gt; element. You can then list the content that controls the appearance of the item between the opening and closing &lt;EditItemTemplate&gt; tags. The content can be as simple as plain text, or it can be made more complex by embedding other controls in the template.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the template for displaying the item selected for editing in a <see cref="T:System.Web.UI.WebControls.TemplateColumn" /> object.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
       