//------------------------------------------------------------------------------
// <copyright file="Parameter.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
//------------------------------------------------------------------------------

namespace System.Web.UI.WebControls {

    using System;
    using System.Collections;
    using System.ComponentModel;
    using System.Data;
    using System.Diagnostics;
    using System.Globalization;


    /// <devdoc>
    /// Represents a parameter to a DataSourceControl.
    /// Parameters can be session variables, web request parameters, or of custom types.
    /// </devdoc>
    [
    DefaultProperty("DefaultValue"),
    ]
    public class Parameter : ICloneable, IStateManager {

        private ParameterCollection _owner;
        private bool _tracking;
        private StateBag _viewState;



        /// <devdoc>
        /// Creates an instance of the Parameter class.
        /// </devdoc>
        public Parameter() {
        }


        /// <devdoc>
        /// Creates an instance of the Parameter class with the specified parameter name.
        /// </devdoc>
        public Parameter(string name) {
            Name = name;
        }


        /// <devdoc>
        /// Creates an instance of the Parameter class with the specified parameter name and db type.
        /// </devdoc>
        public Parameter(string name, DbType dbType) {
            Name = name;
            DbType = dbType;
        }


        /// <devdoc>
        /// Creates an instance of the Parameter class with the specified parameter name, db type, and default value.
        /// </devdoc>
        public Parameter(string name, DbType dbType, string defaultValue) {
            Name = name;
            DbType = dbType;
            DefaultValue = defaultValue;
        }


        /// <devdoc>
        /// Creates an instance of the Parameter class with the specified parameter name and type.
        /// </devdoc>
        public Parameter(string name, TypeCode type) {
            Name = name;
            Type = type;
        }


        /// <devdoc>
        /// Creates an instance of the Parameter class with the specified parameter name, type, and default value.
        /// </devdoc>
        public Parameter(string name, TypeCode type, string defaultValue) {
            Name = name;
            Type = type;
            DefaultValue = defaultValue;
        }


        /// <devdoc>
        /// Used to clone a parameter.
        /// </devdoc>
        protected Parameter(Parameter original) {
            DefaultValue = original.DefaultValue;
            Direction = original.Direction;
            Name = original.Name;
            ConvertEmptyStringToNull = original.ConvertEmptyStringToNull;
            Size = original.Size;
            Type = original.Type;
            DbType = original.DbType;
        }



        /// <devdoc>
        /// Indicates whether the Parameter is tracking view state.
        /// </devdoc>
        protected bool IsTrackingViewState {
            get {
                return _tracking;
            }
        }


        /// <devdoc>
        /// Gets/sets the db type of the parameter's value.
        /// When DbType is DbType.Object, the Type property will be used instead
        /// </devdoc>
        [
        DefaultValue(DbType.Object),
        WebCategory("Parameter"),
        WebSysDescription(SR.Parameter_DbType),
        ]
        public DbType DbType {
            get {
                object o = ViewState["DbType"];
                if (o == null)
                    return DbType.Object;
                return (DbType)o;
            }
            set {
                if (value < DbType.AnsiString || value > DbType.DateTimeOffset) {
                    throw new ArgumentOutOfRangeException("value");
                }
                if (DbType != value) {
                  