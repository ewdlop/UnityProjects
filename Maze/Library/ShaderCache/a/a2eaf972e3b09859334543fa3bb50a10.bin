ll) 
				return false;
			if (rp.IsEmpty ())
				return IsEmpty ();

			if (IsUnrestricted ())
				return rp.IsUnrestricted ();
			else if (rp.IsUnrestricted ())
				return true;

			if (!KeyIsSubsetOf (createList, rp.createList))
				return false;
			if (!KeyIsSubsetOf (readList, rp.readList))
				return false;
			if (!KeyIsSubsetOf (writeList, rp.writeList))
				return false;

			return true;
		}

		public bool IsUnrestricted () 
		{
			return (_state == PermissionState.Unrestricted);
		}

		public override SecurityElement ToXml () 
		{
			SecurityElement se = Element (version);

			if (_state == PermissionState.Unrestricted) {
				se.AddAttribute ("Unrestricted", "true");
			}
			else {
				string path = GetPathList (RegistryPermissionAccess.Create);
				if (path != null)
					se.AddAttribute ("Create", path);
				path = GetPathList (RegistryPermissionAccess.Read);
				if (path != null)
					se.AddAttribute ("Read", path);
				path = GetPathList (RegistryPermissionAccess.Write);
				if 