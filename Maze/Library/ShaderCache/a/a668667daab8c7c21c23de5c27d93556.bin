 control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When <see cref="P:System.Windows.Forms.TreeView.Sorted" /> is set to true, the <see cref="T:System.Windows.Forms.TreeNode" /> objects are sorted in alphabetical order by their <see cref="P:System.Windows.Forms.TreeNode.Text" /> property values. You should always use <see cref="M:System.Windows.Forms.TreeView.BeginUpdate" /> and <see cref="M:System.Windows.Forms.TreeView.EndUpdate" /> to maintain performance when you add a large quantity of items to a sorted <see cref="T:System.Windows.Forms.TreeView" />. When the text of an existing node is changed, you must call <see cref="M:System.Windows.Forms.TreeView.Sort" /> to resort the items. </para>
          <block subset="none" type="note">
            <para>The default sorter uses the <see cref="M:System.Globalization