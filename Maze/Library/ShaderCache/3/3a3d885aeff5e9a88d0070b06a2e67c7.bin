r i1 %cmp, label %if.then, label %if.end

if.then:
  ; There are no side effects on the if.then branch.
  %2 = load float, float* %max, align 4
  %3 = load float, float* %a, align 4
  %sub3 = fsub float %2, %3
  %mul4 = fmul float %sub3, %div
  %4 = load float, float* %min, align 4
  %sub5 = fsub float %4, %3
  %mul6 = fmul float %sub5, %div
  br label %if.end

if.end:
  %tmax.0 = phi float [ %mul4, %if.then ], [ %0, %entry ]
  %tmin.0 = phi float [ %mul6, %if.then ], [ %1, %entry ]

  %add = fadd float %tmax.0, %tmin.0
  ret float %add
}

; Check that we do not hoist loads past a store in any branch of a diamond.
; CHECK-LABEL: @noHoistInDiamondWithOneStore2
; CHECK: fdiv
; CHECK: fcmp
; CHECK: br
define float @noHoistInDiamondWithOneStore2(float %d, float* %min, float* %max, float* %a) {
entry:
  %div = fdiv float 1.000000e+00, %d
  %cmp = fcmp oge float %div, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %e