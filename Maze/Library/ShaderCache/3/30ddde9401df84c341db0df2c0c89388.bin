ual (HttpStatusCode.InternalServerError, test.Response.StatusCode, "#X1-2{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.IsFalse (String.IsNullOrEmpty (p), "#X1-3");
		}

		static void DataField_OnLoad_5 (Page p)
		{
			var lc = p.FindControl ("ListView1") as ListView;
			Assert.IsNotNull (lc, "#A1");

			// If Column is intialized before OnInit is run, the column is not resolved - no exception here.
			var dc = lc.FindChild<DynamicControl> ("FirstName");
			Assert.IsNotNull (dc, "#A1");
			Assert.AreEqual ("FirstName", dc.Column.Name, "#A1-1");
		}

		[Test]
		public void DataFormatString ()
		{
			var test = new WebTest ("ListView_DynamicControl_01.aspx");
			test.Invoker = PageInvoker.CreateOnLoad (DataFormatString_OnLoad);
			var p = test.Run ();
			Assert.IsNotNull (test.Response, "#X1");
			Assert.AreNotEqual (HttpStatusCode.NotFound, test.Response.StatusCode, "#X1-1{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.AreNotEqual (HttpStatusCode.InternalServerError, test.Response.StatusCode, "#X1-2{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.IsFalse (String.IsNullOrEmpty (p), "#X1-3");
		}

		static void DataFormatString_OnLoad (Page p)
		{
			var lc = p.FindControl ("ListView1") as ListView;
			Assert.IsNotNull (lc, "#A1");

			var dc = lc.FindChild<DynamicControl> ("FirstName");
			Assert.IsNotNull (dc, "#B1-1");
			Assert.AreEqual ("FirstName", dc.ID, "#B1-2");
			Assert.AreEqual (String.Empty, dc.Column.DataFormatString, "#B1-3");
			Assert.AreEqual (String.Empty, dc.DataFormatString, "#B1-4");

			dc = lc.FindChild<DynamicControl> ("Active");
			Assert.IsNotNull (dc, "#C1");
			Assert.AreEqual ("Active", dc.ID, "#C1-1");
			Assert.AreEqual ("Boolean value: {0}", dc.Column.DataFormatString, "#C1-2");
			Assert.AreEqual ("Boolean value: {0}", dc.DataFormatString, "#C1-3");

			dc.DataFormatString = String.Empty;
			Assert.AreEqual (String.Empty, dc.DataFormatString, "#C1-4");
			Assert.AreEqual ("Boolean value: {0}", dc.Column.DataFormatString, "#C1-5");
		}

		[Test]
		public void FieldTemplate ()
		{
			var test = new WebTest ("ListView_DynamicControl_03.aspx");
			test.Invoker = PageInvoker.CreateOnLoad (FieldTemplate_OnLoad);
			var p = test.Run ();
			Assert.IsNotNull (test.Response, "#X1");
			Assert.AreNotEqual (HttpStatusCode.NotFound, test.Response.StatusCode, "#X1-1{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.AreNotEqual (HttpStatusCode.InternalServerError, test.Response.StatusCode, "#X1-2{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.IsFalse (String.IsNullOrEmpty (p), "#X1-3");
		}

		static void FieldTemplate_OnLoad (Page p)
		{
			var lc = p.FindControl ("ListView3") as ListView;
			Assert.IsNotNull (lc, "#A1");

			int counter = 1;
			foreach (var entry in FieldTemplatePathTables.FieldTemplateReadOnlyColumns) {
				string columnName = entry.ColumnName;
				var dc = lc.FindChild<PokerDynamicControl> (columnName);
				Assert.IsNotNull (dc, String.Format ("#B{0}-1 ({1}", counter, columnName));
				Assert.AreEqual (columnName, dc.ID, String.Format ("#B{0}-2 ({1})", counter, columnName));

				var templateControl = dc.FieldTemplate;
				var template = templateControl as FieldTemplateUserControl;
				if (entry.IsNull) {
					Assert.IsNull (templateControl, String.Format ("#B{0}-3 ({1})", counter, columnName));
					Assert.IsNull (template, String.Format ("#B{0}-4 ({1})", counter, columnName));
				} else {
					Assert.IsNotNull (templateControl, String.Format ("#B{0}-5 ({1})", counter, columnName));
					Assert.IsNotNull (template, String.Format ("#B{0}-6 ({1})", counter, columnName));
					Assert.AreEqual (entry.ControlVirtualPath, template.AppRelativeVirtualPath, String.Format ("#B{0}-7 ({1})", counter, columnName));
				}

				counter++;
			}
		}

		[Test]
		public void FieldTemplate_1 ()
		{
			var test = new WebTest ("ListView_DynamicControl_04.aspx");
			var p = test.Run ();

			// Fake post-back
			var delegates = new PageDelegates ();
			delegates.PreRenderComplete = FieldTemplate_OnPreRenderComplete_1;
			test.Invoker = new PageInvoker (delegates);
			var fr = new FormRequest (test.Response, "form1");
#if TARGET_DOTNET
			fr.Controls.Add ("ListView4$ctrl0$editMe");
			fr.Controls["ListView4$ctrl0$editMe"].Value = "Edit";
#else
			fr.Controls.Add ("ListView4$ctl01$editMe");
			fr.Controls["ListView4$ctl01$editMe"].Value = "Edit";
#endif
			test.Request = fr;
			p = test.Run ();

			Assert.IsNotNull (test.Response, "#X1");
			Assert.AreNotEqual (HttpStatusCode.NotFound, test.Response.StatusCode, "#X1-1{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.AreNotEqual (HttpStatusCode.InternalServerError, test.Response.StatusCode, "#X1-2{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.IsFalse (String.IsNullOrEmpty (p), "#X1-3");
		}

		static void FieldTemplate_OnPreRenderComplete_1 (Page p)
		{
			var lc = p.FindControl ("ListView4") as ListView;
			Assert.IsNotNull (lc, "#A1");

			int counter = 1;
			foreach (var entry in FieldTemplatePathTables.FieldTemplateEditColumns) {
				string columnName = entry.ColumnName;
				var dc = lc.FindChild<PokerDynamicControl> (columnName);
				Assert.IsNotNull (dc, String.Format ("#B{0}-1 ({1})", counter, columnName));
				Assert.AreEqual (columnName, dc.ID, String.Format ("#B{0}-2 ({1})", counter, columnName));

				var templateControl = dc.FieldTemplate;
				var template = templateControl as FieldTemplateUserControl;
				if (entry.IsNull) {
					Assert.IsNull (templateControl, String.Format ("#B{0}-3 ({1})", counter, columnName));
					Assert.IsNull (template, String.Format ("#B{0}-4 ({1})", counter, columnName));
				} else {
					Assert.IsNotNull (templateControl, String.Format ("#B{0}-5 ({1})", counter, columnName));
					Assert.IsNotNull (template, String.Format ("#B{0}-6 ({1})", counter, columnName));
					Assert.AreEqual (entry.ControlVirtualPath, template.AppRelativeVirtualPath, String.Format ("#B{0}-7 ({1})", counter, columnName));
				}

				counter++;
			}
		}

		// This tests full type name templates
		[Test]
		public void FieldTemplate_2 ()
		{
			FieldTemplatePathTables.SetUp_FullTypeNameTemplates (this);
			var test = new WebTest ("ListView_DynamicControl_03.aspx");
			test.Invoker = PageInvoker.CreateOnLoad (FieldTemplate_OnLoad_2);
			var p = test.Run ();
			Assert.IsNotNull (test.Response, "#X1");
			Assert.AreNotEqual (HttpStatusCode.NotFound, test.Response.StatusCode, "#X1-1{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.AreNotEqual 