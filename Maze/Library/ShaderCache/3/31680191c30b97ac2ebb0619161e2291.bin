nLoad_3);
				var p = test.Run ();
				Assert.IsNotNull (test.Response, "#X1");
				Assert.AreNotEqual (HttpStatusCode.NotFound, test.Response.StatusCode, "#X1-1{0}Returned HTML:{0}{1}", Environment.NewLine, p);
				Assert.AreNotEqual (HttpStatusCode.InternalServerError, test.Response.StatusCode, "#X1-2{0}Returned HTML:{0}{1}", Environment.NewLine, p);
				Assert.IsFalse (String.IsNullOrEmpty (p), "#X1-3");
			} finally {

			}
		}

		static void FieldTemplate_OnLoad_3 (Page p)
		{
			var lc = p.FindControl ("ListView3") as ListView;
			Assert.IsNotNull (lc, "#A1");

			int counter = 1;
			foreach (var entry in FieldTemplatePathTables.FieldTemplateNonDefaultShortColumns) {
				string columnName = entry.ColumnName;
				var dc = lc.FindChild<PokerDynamicControl> (columnName);
				Assert.IsNotNull (dc, String.Format ("#B{0}-1 ({1})", counter, columnName));
				Assert.AreEqual (columnName, dc.ID, String.Format ("#B{0}-2 ({1})", counter, columnName));

				var templateControl = dc.FieldTemplate;
				var template = templateControl as FieldTemplateUserControl;
				if (entry.IsNull) {
					Assert.IsNull (templateControl, String.Format ("#B{0}-3 ({1})", counter, columnName));
					Assert.IsNull (template, String.Format ("#B{0}-4 ({1})", counter, columnName));
				} else {
					Assert.IsNotNull (templateControl, String.Format ("#B{0}-5 ({1})", counter, columnName));
					Assert.IsNotNull (template, String.Format ("#B{0}-6 ({1})", counter, columnName));
					Assert.AreEqual (entry.ControlVirtualPath, template.AppRelativeVirtualPath, String.Format ("#B{0}-7 ({1})", counter, columnName));
				}

				counter++;
			}
		}

		[Test]
		public void GetAttribute ()
		{
			var dc = new DynamicControl ();
			Assert.AreEqual (String.Empty, dc.GetAttribute ("NoSuchAttribute"), "#A1");

			dc.SetAttribute ("MyAttribute", "value");
			Assert.AreEqual ("value", dc.GetAttribute ("MyAttribute"), "#B1");

			// Nice...
			Assert.Throws<KeyNotFoundException> (() => {
				dc.GetAttribute ("NoSuchAttribute");
			}, "#C1");
		}

		[Test]
		public void HtmlEncode ()
		{
			var test = new WebTest ("ListView_DynamicControl_01.aspx");
			test.Invoker = PageInvoker.CreateOnLoad (HtmlEncode_OnLoad);
			var p = test.Run ();
			Assert.IsNotNull (test.Response, "#X1");
			Assert.AreNotEqual (HttpStatusCode.NotFound, test.Response.StatusCode, "#X1-1{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.AreNotEqual (HttpStatusCode.InternalServerError, test.Response.StatusCode, "#X1-2{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.IsFalse (String.IsNullOrEmpty (p), "#X1-3");
		}

		static void HtmlEncode_OnLoad (Page p)
		{
			var lc = p.FindControl ("ListView1") as ListView;
			Assert.IsNotNull (lc, "#A1");

			var dc = lc.FindChild<DynamicControl> ("FirstName");
			Assert.IsNotNull (dc, "#A1-1");
			Assert.IsNotNull (dc.Column, "#A1-2");

			Assert.AreEqual (true, dc.HtmlEncode, "#B1");
			Assert.AreEqual (dc.HtmlEncode, dc.Column.HtmlEncode, "#B1-1");

			dc.HtmlEncode = false;
			Assert.AreEqual (false, dc.HtmlEncode, "#C1");
			Assert.AreNotEqual (dc.HtmlEncode, dc.Column.HtmlEncode, "#C1-1");
		}

		[Test]
		public void IFieldTemplateHost_FormattingOptions ()
		{
			var dc = new DynamicControl ();

			Assert.IsNotNull (((IFieldTemplateHost)dc).FormattingOptions, "#A1");
			Assert.AreEqual (dc, ((IFieldTemplateHost)dc).FormattingOptions, "#A2");
		}

		[Test]
		public void Mode ()
		{
			var dc = new DynamicControl (DataBoundControlMode.Edit);
			Assert.AreEqual (DataBoundControlMode.Edit, dc.Mode, "#A1");

			dc.Mode = DataBoundControlMode.Insert;
			Assert.AreEqual (DataBoundControlMode.Insert, dc.Mode, "#A2");

			dc.Mode = DataBoundControlMode.ReadOnly;
			Assert.AreEqual (DataBoundControlMode.ReadOnly, dc.Mode, "#A3");
		}

		[Test]
		public void NullDisplayText ()
		{
			var test = new WebTest ("ListView_DynamicControl_01.aspx");
			test.Invoker = PageInvoker.CreateOnLoad (NullDisplayText_OnLoad);
			var p = test.Run ();
			Assert.IsNotNull (test.Response, "#X1");
			Assert.AreNotEqual (HttpStatusCode.NotFound, test.Response.StatusCode, "#X1-1{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.AreNotEqual (HttpStatusCode.InternalServerError, test.Response.StatusCode, "#X1-2{0}Returned HTML:{0}{1}", Environment.NewLine, p);
			Assert.IsFalse (String.IsNullOrEmpty (p), "#X1-3");
		}

		static void NullDisplayText_OnLoad (Page p)
		{
			var lc = p.FindControl ("ListView1") as ListView;
			Assert.IsNotNull (lc, "#A1");

			var dc = lc.FindChild<DynamicControl> ("FirstName");
			Assert.IsNotNull (dc, "#A1-1");
			Assert.IsNotNull (dc.Column, "#A1-2");

			Assert.AreEqual (String.Empty, dc.NullDisplayText, "#B1");
			Assert.AreEqual (dc.NullDisplayText, dc.Column.NullDisplayText, "#B1-1");

			dc.NullDisplayText = "Text";
			Assert.AreEqual ("Text", dc.NullDisplayText, "#C1");
			Assert.AreNotEqual (dc.NullDisplayText, dc.Column.NullDisplayText, "#C1-1");

			dc = lc.FindChild<DynamicControl> ("LastName");
			Assert.IsNotNull (dc, "#D1");
			Assert.IsNotNull (dc.Column, "#D1-1");
			Assert.AreEqual ("No value for this column", dc.NullDisplayText, "#D1-2");
			Assert.AreEqual (dc.NullDisplayText, dc.Column.NullDisplayText, "#D1-3");

			dc.NullDisplayText = String.Empty;
			Assert.AreEqual (String.Empty, dc.NullDisplayText, "#E1");
			Assert.AreNotEqual (dc.NullDisplayText, dc.Column.NullDisplayText, "#E1-1");
		}

		[Test]
		public void SetAttribute ()
		{
			var dc = new PokerDynamicControl ();

			string html = dc.RenderToString ();
			Assert.IsNotNull (html, "#A1");

			dc.SetAttribute ("MyAttribute", "Value");
			html = dc.RenderToString ();
			Assert.IsNotNull (html, "#B1");
			Assert.AreEqual ("Value", dc.GetAttribute ("MyAttribute"), "#B2");

			dc.SetAttribute ("MyAttribute", "Another value");
			Assert.AreEqual ("Another value", dc.GetAttribute ("MyAttribute"), "#C1");
		}

		[Test]
		public void SetAttribute_1 ()
		{
			var test = new WebTest ("ListView_DynamicControl_01.aspx");
			var delegates = new PageDelegates ();
			delegates.PreRenderComplete = SetAttribute_OnPreRenderComplete_1;
			test.Invoker = new PageInvoker (delegates);

			var p = test.Run ();
			Assert.IsNotNull (test.Response, "#X1");
	