eSkinnedLocalBounds(int32 OutputIndex) override;

	virtual int32 DistanceCullFade() override;

	virtual int32 ActorWorldPosition() override;

	virtual int32 If(int32 A, int32 B, int32 AGreaterThanB, int32 AEqualsB, int32 ALessThanB, int32 ThresholdArg) override;

	void AllocateSlot(TBitArray<>& InBitArray, int32 InSlotIndex, int32 InSlotCount = 1) const;

#if WITH_EDITOR
	virtual int32 MaterialBakingWorldPosition() override;
#endif

	virtual int32 TextureCoordinate(uint32 CoordinateIndex, bool UnMirrorU, bool UnMirrorV) override;

	//static const TCHAR* GetVTAddressMode(TextureAddress Address);

	uint32 AcquireVTStackIndex(
		ETextureMipValueMode MipValueMode, 
		TextureAddress AddressU, TextureAddress AddressV, 
		float AspectRatio, 
		int32 CoordinateIndex, 
		int32 MipValue0Index, int32 MipValue1Index, 
		int32 PreallocatedStackTextureIndex, 
		bool bAdaptive, bool bGenerateFeedback);

	virtual int32 TextureSample(
		int32 TextureIndex,
		int32 CoordinateIndex,
		EMaterialSamplerType SamplerType,
		int32 MipValue0Index = INDEX_NONE,
		int32 MipValue1Index = INDEX_NONE,
		ETextureMipValueMode MipValueMode = TMVM_None,
		ESamplerSourceMode SamplerSource = SSM_FromTextureAsset,
		int32 TextureReferenceIndex = INDEX_NONE,
		bool AutomaticViewMipBias = false,
		bool AdaptiveVirtualTexture = false
	) override;

	virtual int32 TextureProperty(int32 TextureIndex, EMaterialExposedTextureProperty Property) override;
	virtual int32 TextureDecalMipmapLevel(int32 TextureSizeInput) override;
	virtual int32 TextureDecalDerivative(bool bDDY) override;

	virtual int32 DecalLifetimeOpacity() override;

	virtual int32 PixelDepth() override;

	/** Calculate screen aligned UV coordinates from an offset fraction or texture coordinate */
	int32 GetScreenAlignedUV(int32 Offset, int32 ViewportUV, bool bUseOffset);

	virtual int32 SceneDepth(int32 Offset, int32 ViewportUV, bool bUseOffset) override;
	
	// @param SceneTextureId of type ESceneTextureId e.g. PPI_SubsurfaceColor
	virtual int32 SceneTextureLookup(int32 ViewportUV, uint32 InSceneTextureId, bool bFiltered) override;

	virtual int32 GetSceneTextureViewSize(int32 SceneTextureId, bool InvProperty) override;

	// @param bTextureLookup true: texture, false:no texture lookup, usually to get the size
	void UseSceneTextureId(ESceneTextureId SceneTextureId, bool bTextureLookup);

	virtual int32 SceneColor(int32 Offset, int32 ViewportUV, bool bUseOffset) override;

	virtual int32 Texture(UTexture* InTexture, int32& TextureReferenceIndex, EMaterialSamplerType SamplerType, ESamplerSourceMode SamplerSource = SSM_FromTextureAsset, ETextureMipValueMode MipValueMode = TMVM_None) override;
	virtual int32 TextureParameter(FName ParameterName, UTexture* DefaultValue, int32& TextureReferenceIndex, EMaterialSamplerType SamplerType, ESamplerSourceMode SamplerSource = SSM_FromTextureAsset) override;

	virtual int32 VirtualTexture(URuntimeVirtualTexture* InTexture, int32 TextureLayerIndex, int32 PageTableLayerIndex, int32& TextureReferenceIndex, EMaterialSamplerType SamplerType) override;
	virtual int32 VirtualTextureParameter(FName ParameterName, URuntimeVirtualTexture* DefaultValue, int32 TextureLayerIndex, int32 PageTableLayerIndex, int32& TextureReferenceIndex, EMaterialSamplerType SamplerType) override;
	virtual int32 VirtualTextureUniform(int32 TextureIndex, int32 VectorIndex) override;
	virtual int32 VirtualTextureUniform(FName ParameterName, int32 TextureIndex, int32 VectorIndex) override;
	virtual int32 VirtualTextureWorldToUV(int32 WorldPositionIndex, int32 P0, int32 P1, int32 P2) override;
	virtual int32 VirtualTextureUnpack(int32 CodeIndex0, int32 CodeIndex1, int32 CodeIndex2, int32 P0, EVirtualTextureUnpackType UnpackType) override;

	virtual int32 ExternalTexture(const FGuid& ExternalTextureGuid) override;
	virtual int32 ExternalTexture(UTexture* InTexture, int32& TextureReferenceIndex) override;
	virtual int32 ExternalTextureParameter(FName ParameterName, UTexture* DefaultValue, int32& TextureReferenceIndex) override;
	virtual int32 ExternalTextureCoordinateScaleRotation(int32 TextureReferenceIndex, TOptional<FName> ParameterName) override;
	virtual int32 ExternalTextureCoordinateScaleRotation(const FGuid& ExternalTextureGuid) override;
	virtual int32 ExternalTextureCoordinateOffset(int32 TextureReferenceIndex, TOptional<FName> ParameterName) override;
	virtual int32 ExternalTextureCoordinateOffset(const FGuid& ExternalTextureGuid) override;

	virtual UObject* GetReferencedTexture(int32 Index);

	virtual int32 StaticBool(bool bValue) override;
	virtual int32 StaticBoolParameter(FName ParameterName, bool bDefaultValue) override;
	virtual int32 StaticComponentMask(int32 Vector, FName ParameterName, bool bDefaultR, bool bDefaultG, bool bDefaultB, bool bDefaultA) override;
	virtual const FMaterialLayersFunctions* StaticMaterialLayersParameter(FName ParameterName) override;

	virtual bool GetStaticBoolValue(int32 BoolIndex, bool& bSucceeded) override;

	virtual int32 StaticTerrainLayerWeight(FName ParameterName, int32 Default) override;

	virtual int32 VertexColor() override;

	virtual int32 PreSkinVertexOffset() override;
	virtual int32 PostSkinVertexOffset() override;

	virtual int32 PreSkinnedPosition() override;
	virtual int32 PreSkinnedNormal() override;

	virtual int32 VertexInterpolator(uint32 InterpolatorIndex) override;

	virtual int32 Add(int32 A, int32 B) override;
	virtual int32 Sub(int32 A, int32 B) override;
	virtual int32 Mul(int32 A, int32 B) override;
	virtual int32 Div(int32 A, int32 B) override;
	virtual int32 Dot(int32 A, int32 B) override;
	virtual int32 Cross(int32 A, int32 B) override;
	virtual int32 Power(int32 Base, int32 Exponent) override;
	virtual int32 Logarithm2(int32 X) override;
	virtual int32 Logarithm10(int32 X) override;
	virtual int32 SquareRoot(int32 X) override;
	virtual int32 Length(int32 X) override;
	virtual int32 Step(int32 Y, int32 X) override;
	virtual int32 SmoothStep(int32 X, int32 Y, int32 A) override;
	virtual int32 InvLerp(int32 X, int32 Y, int32 A) override;
	virtual int32 Lerp(int32 X, int32 Y, int32 A) override;
	virtual int32 Min(int32 A, int32 B) override;
	virtual int32 Max(int32 A, int32 B) override;
	virtual int32 Clamp(int32 X, int32 A, int32 B) override;
	virtual int32 Saturate(int32 X) override;
	virtual int32 ComponentMask(int32 Vector, bool R, bool G, bool B, bool A) override;
	virtual int32 AppendVector(int32 A, int32 B) override;

	int32 TransformBase(EMaterialCommonBasis SourceCoordBasis, EMaterialCommonBasis DestCoordBasis, int32 A, int AWComponent);
	
	virtual int32 TransformVector(EMaterialCommonBasis SourceCoordBasis, EMaterialCommonBasis DestCoordBasis, int32 A) override;
	virtual int32 TransformPosition(EMaterialCommonBasis SourceCoordBasis, EMaterialCommonBasis DestCoordBasis, int32 A) override;
	virtual int32 DynamicParameter(FLinearColor& DefaultValue, uint32 ParameterIndex = 0) override;
	virtual int32 LightmapUVs() override;
	virtual int32 PrecomputedAOMask() override;
	virtual int32 GIReplace(int32 Direct, int32 StaticIndirect, int32 DynamicIndirect) override;
	virtual int32 ShadowReplace(int32 Default, int32 Shadow) override;
	virtual int32 ReflectionCapturePassSwitch(int32 Default, int32 Reflection) override;

	virtual int32 RayTracingQualitySwitchReplace(int32 Normal, int32 RayTraced);

	virtual int32 VirtualTextureOutputReplace(int32 Default, int32 VirtualTexture) override;

	virtual int32 ObjectOrientation() override;

	virtual int32 RotateAboutAxis(int32 NormalizedRotationAxisAndAngleIndex, int32 PositionOnAxisIndex, int32 PositionIndex) override;

	virtual int32 TwoSidedSign() override;
	virtual int32 VertexNormal() override;
	virtual int32 VertexTangent() override;
	virtual int32 PixelNormalWS() override;
	virtual int32 DDX(int32 X) override;
	virtual int32 DDY(int32 X) override;

	virtual int32 AntialiasedTextureMask(int32 Tex, int32 UV, float Threshold, uint8 Channel) override;
	virtual int32 DepthOfFieldFunction(int32 Depth, int32 FunctionValueIndex) override;
	virtual int32 Sobol(int32 Cell, int32 Index, int32 Seed) override;
	virtual int32 TemporalSobol(int32 Index, int32 Seed) override;
	virtual int32 Noise(int32 Position, float Scale, int32 Quality, uint8 NoiseFunction, bool bTurbulence, int32 Levels, float OutputMin, float OutputMax, float LevelScale, int32 FilterWidth, bool bTiling, uint32 RepeatSize) override;
	virtual int32 VectorNoise(int32 Position, int32 Quality, uint8 NoiseFunction, bool bTiling, uint32 TileSize) override;

	virtual int32 BlackBody(int32 Temp) override;

	virtual int32 GetHairUV() override;
	virtual int32 GetHairDimensions() override;
	virtual int32 GetHairSeed() override;
	virtual int32 GetHairTangent(bool bUseTangentSpace) override;
	virtual int32 GetHairRootUV() override;
	virtual int32 GetHairBaseColor() override;
	virtual int32 GetHairRoughness() override;
	virtual int32 GetHairDepth() override;
	virtual int32 GetHairCoverage() override;
	virtual int32 GetHairAuxilaryData() override;
	virtual int32 GetHairAtlasUVs() override;
	virtual int32 GetHairColorFromMelanin(int32 Melanin, int32 Redness, int32 DyeColor) override;
	virtual int32 DistanceToNearestSurface(int32 PositionArg) override;
	virtual int32 DistanceFieldGradient(int32 PositionArg) override;
	virtual int32 AtmosphericFogColor(int32 WorldPosition) override;
	virtual int32 AtmosphericLightVector() override;
	virtual int32 AtmosphericLightColor() override;

	virtual int32 SkyAtmosphereLightIlluminance(int32 WorldPosition, int32 LightIndex) override;
	virtual int32 SkyAtmosphereLightDirection(int32 LightIndex) override;
	virtual int32 SkyAtmosphereLightDiskLuminance(int32 LightIndex) override;
	virtual int32 SkyAtmosphereViewLuminance() override;
	virtual int32 SkyAtmosphereAerialPerspective(int32 WorldPosition) override;
	virtual int32 SkyAtmosphereDistantLightScatteredLuminance() override;

	// Water
	virtual int32 SceneDepthWithoutWater(int32 Offset, int32 ViewportUV, bool bUseOffset, float FallbackDepth) override;

	virtual int32 GetCloudSampleAltitude() override;
	virtual int32 GetCloudSampleAltitudeInLayer() override;
	virtual int32 GetCloudSampleNormAltitudeInLayer() override;
	virtual int32 GetVolumeSampleConservativeDensity() override;

	virtual int32 CustomPrimitiveData(int32 OutputIndex, EMaterialValueType Type) override;

	virtual int32 ShadingModel(EMaterialShadingModel InSelectedShadingModel) override;

	virtual int32 MapARPassthroughCameraUV(int32 UV) override;

	virtual int32 CustomExpression(class UMaterialExpressionCustom* Custom, int32 OutputIndex, TArray<int32>& CompiledInputs) override;
	virtual int32 CustomOutput(class UMaterialExpressionCustomOutput* Custom, int32 OutputIndex, int32 OutputCode) override;

	virtual int32 VirtualTextureOutput(uint8 MaterialAttributeMask) override;

#if HANDLE_CUSTOM_OUTPUTS_AS_MATERIAL_ATTRIBUTES
	/** Used to translate code for custom output attributes such as ClearCoatBottomNormal */
	void GenerateCustomAttributeCode(int32 OutputIndex, int32 OutputCode, EMaterialValueType OutputType, FString& DisplayName);
#endif

	/**
	 * Adds code to return a random value shared by all geometry for any given instanced static mesh
	 *
	 * @return	Code index
	 */
	virtual int32 PerInstanceRandom() override;

	/**
	 * Returns a mask that either enables or disables selection on a per-instance basis when instancing
	 *
	 * @return	Code index
	 */
	virtual int32 PerInstanceFadeAmount() override;

	/**
	 * Returns a custom data on a per-instance basis when instancing
	 * @DataIndex - index in array that represents custom data
	 *
	 * @return	Code index
	 */
	virtual int32 PerInstanceCustomData(int32 DataIndex, int32 DefaultValueIndex) override;

	/**
	 * Returns a float2 texture coordinate after 2x2 transform and offset applied
	 *
	 * @return	Code index
	 */
	virtual int32 RotateScaleOffsetTexCoords(int32 TexCoordCodeIndex, int32 RotationScale, int32 Offset) override;

	/**
	* Handles SpeedTree vertex animation (wind, smooth LOD)
	*
	* @return	Code index
	*/
	virtual int32 SpeedTree(int32 GeometryArg, int32 WindArg, int32 LODArg, float BillboardThreshold, bool bAccurateWindVelocities, bool bExtraBend, int32 ExtraBendArg) override;

	/**
	 * Adds code for texture coordinate offset to localize large UV
	 *
	 * @return	Code index
	 */
	virt