 :: buf                ! data buffer
 INTEGER :: errcode                                               ! error code
 INTEGER(size_t) :: namelen                                       ! name length
 INTEGER(size_t) :: namelen1                                      ! name length

 INTERFACE
  INTEGER FUNCTION h5tbread_field_name_dl_c(loc_id,namelen,dset_name,namelen1,field_name,&
  start,nrecords,type_size,buf)

  USE h5global
  IMPLICIT NONE
  !DEC$IF DEFINED(HDF5F90_WINDOWS)
  !DEC$ATTRIBUTES C,reference,decorate,alias:'H5TBREAD_FIELD_NAME_DL_C'::h5tbread_field_name_dl_c
  !DEC$ENDIF
  !DEC$ATTRIBUTES reference :: dset_name
  !DEC$ATTRIBUTES reference :: field_name
  INTEGER(hid_t),   INTENT(in) :: loc_id                           ! file or group identifier
  CHARACTER(LEN=*), INTENT(in) :: dset_name                        ! name of the dataset
  CHARACTER(LEN=*), INTENT(in) :: field_name                       ! name of the field
  INTEGER(hsize_t), INTENT(in) :: start                            ! start record
  INTEGER(hsize_t), INTENT(in) :: nrecords                         ! records
  INTEGER(size_t),  INTENT(in) :: type_size                        ! type size
  DOUBLE PRECISION, INTENT(in), DIMENSION(*) :: buf                ! data buffer
  INTEGER :: errcode                                               ! error code
  INTEGER(size_t) :: namelen                                       ! name length
  INTEGER(size_t) :: namelen1                                      ! name length
  END FUNCTION h5tbread_field_name_dl_c
 END INTERFACE

 namelen  = LEN(dset_name)
 namelen1 = LEN(field_name)

 errcode = h5tbread_field_name_dl_c(loc_id,namelen,dset_name,namelen1,field_name,&
  start,nrecords,type_size,buf)

END SUBROUTINE h5tbread_field_name_f_double

!-------------------------------------------------------------------------
! Function: h5tbread_field_name_f_string
!
! Purpose: Reads one field
!
! Programmer: pvn@ncsa.uiuc.edu
!
! Date: October 12, 2004
!
! Comments:
!
! Modifications:
!
!-------------------------------------------------------------------------

SUBROUTINE h5tbread_field_name_f_string(loc_id,&
                                      dset_name,&
                                      field_name,&
                                      start,&
                                      nrecords,&
                                      type_size,&
                                      buf,&
                                      errcode )

 IMPLICIT NONE

!
!This definition is needed for Windows DLLs
!DEC$if defined(BUILD_HDF5_HL_DLL)
!DEC$attributes dllexport :: h5tbread_field_name_f_string
!DEC$endif
!

 INTEGER(hid_t),   INTENT(in) :: loc_id                           ! file or group identifier
 CHARACTER(LEN=*), INTENT(in) :: dset_name                        ! name of the dataset
 CHARACTER(LEN=*), INTENT(in) :: field_name                       ! name of the field
 INTEGER(hsize_t), INTENT(in) :: start                            ! start record
 INTEGER(hsize_t), INTENT(in) :: nrecords                         ! records
 INTEGER(size_t),  INTENT(in) :: type_size                        ! type size
 CHARACTER(LEN=*), INTENT(in), DIMENSION(*) :: buf                ! data buffer
 INTEGER :: errcode                                               ! error code
 INTEGER(size_t) :: namelen                                       ! name length
 INTEGER(size_t) :: namelen1                                      ! name length

 INTERFACE
  INTEGER FUNCTION h5tbread_field_name_st_c(loc_id,namelen,dset_name,namelen1,field_name,&
  start,nrecords,type_size,buf)

  USE h5global
  IMPLICIT NONE
  !DEC$IF DEFINED(HDF5F90_WINDOWS)
  !DEC$ATTRIBUTES C,reference,decorate,alias:'H5TBREAD_FIELD_NAME_ST_C'::h5tbread_field_name_st_c
  !DEC$ENDIF
  !DEC$ATTRIBUTES reference :: dset_name
  !DEC$ATTRIBUTES reference :: field_name
  INTEGER(hid_t),   INTENT(in) :: loc_id                           ! file or group identifier
  CHAR