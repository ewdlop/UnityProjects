CTER(LEN=*), INTENT(in), DIMENSION(*) :: buf                ! data buffer
  INTEGER :: errcode                                               ! error code
  INTEGER(size_t) :: namelen                                       ! name length
  END FUNCTION h5tbread_field_index_st_c
 END INTERFACE

 namelen  = LEN(dset_name)

 errcode = h5tbread_field_index_st_c(loc_id,namelen,dset_name,field_index,&
  start,nrecords,type_size,buf)

END SUBROUTINE h5tbread_field_index_f_string


!-------------------------------------------------------------------------
! Function: h5tbinsert_field_f_int
!
! Purpose: Inserts one field
!
! Programmer: pvn@ncsa.uiuc.edu
!
! Date: October 13, 2004
!
! Comments:
!
! Modifications:
!
!-------------------------------------------------------------------------

SUBROUTINE h5tbinsert_field_f_int(loc_id,&
                                  dset_name,&
                                  field_name,&
                                  field_type,&
                                  field_index,&
                                  buf,&
                                  errcode )
 IMPLICIT NONE

!
!This definition is needed for Windows DLLs
!DEC$if defined(BUILD_HDF5_HL_DLL)
!DEC$attributes dllexport :: h5tbinsert_field_f_int
!DEC$endif
!

 INTEGER(hid_t),   INTENT(in) :: loc_id                           ! file or group identifier
 CHARACTER(LEN=*), INTENT(in) :: dset_name                        ! name of the dataset
 CHARACTER(LEN=*), INTENT(in) :: field_name                       ! name of the field
 INTEGER(hid_t), INTENT(in)   :: field_type                       ! field type
 INTEGER, INTENT(in) :: field_index                               ! field_index
 INTEGER, INTENT(in), DIMENSION(*) :: buf                         ! data buffer
 INTEGER(size_t) :: namelen                                       ! name length
 INTEGER(size_t) :: namelen1                   