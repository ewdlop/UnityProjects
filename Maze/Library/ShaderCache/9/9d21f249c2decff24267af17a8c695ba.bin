et_table_info_c
 END INTERFACE

 namelen = LEN(dset_name)
 errcode = h5tbget_table_info_c(loc_id,namelen,dset_name,nfields,nrecords)

END SUBROUTINE h5tbget_table_info_f


!-------------------------------------------------------------------------
! Function: h5tbget_field_info_f
!
! Purpose: Get information about fields
!
! Return: Success: 0, Failure: -1
!
! Programmer: pvn@ncsa.uiuc.edu
!
! Date: October 13, 2004
!
! Comments:
!
! Modifications: 
!  Added optional parameter for returning the maximum character length
!  in the field name array. March 3, 2011 
!
!-------------------------------------------------------------------------

SUBROUTINE h5tbget_field_info_f(loc_id,&
                                dset_name,&
                                nfields,&
                                field_names,&
                                field_sizes,&
                                field_offsets,&
                                type_size,&
                                errcode, maxlen_out )

  IMPLICIT NONE
!
!This definition is needed for Windows DLLs
!DEC$if defined(BUILD_HDF5_HL_DLL)
!DEC$attributes dllexport :: h5tbget_field_info_f
!DEC$endif
!
  INTEGER(hid_t),   INTENT(in) :: loc_id                                ! file or group identifier
  CHARACTER(LEN=*), INTENT(in) :: dset_name                             ! name of the dataset
  INTEGER(hsize_t), INTENT(in) :: nfields                               ! nfields
  CHARACTER(LEN=*), DIMENSION(nfields), INTENT(inout) :: field_names    ! field names
  INTEGER(size_t),  DIMENSION(nfields), INTENT(inout) :: field_sizes    ! field sizes
  INTEGER(size_t),  DIMENSION(nfields), INTENT(inout) :: field_offsets  ! field offsets
  INTEGER(size_t),  INTENT(inout):: type_size                           ! type size
  INTEGER :: errcode                                                    ! error code
  INTEGER, OPTIONAL :: maxlen_out                                       ! maximum character len of the field names
  INTEGER(size_t) :: namelen                                            ! name length
  INTEGER(size_t), DIMENSION(nfields) :: namelen2                       ! name lengths
  INTEGER(hsize_t) :: i                                   