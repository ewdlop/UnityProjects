throw null; } }
        public abstract System.Type ValueType { get; }
        public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get { throw null; } }
        public virtual object ChangeType(object value, System.Type targetType) { throw null; }
        public virtual object ChangeType(object value, System.Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver) { throw null; }
        public virtual bool IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype datatype) { throw null; }
        public abstract object ParseValue(string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);
    }
    public enum XmlSchemaDatatypeVariety
    {
        Atomic = 0,
        List = 1,
        Union = 2,
    }
    [System.FlagsAttribute]
    public enum XmlSchemaDerivationMethod
    {
        [System.Xml.Serialization.XmlEnumAttribute("#all")]
        All = 255,
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Empty = 0,
        [System.Xml.Serialization.XmlEnumAttribute("extension")]
        Extension = 2,
        [System.Xml.Serialization.XmlEnumAttribute("list")]
        List = 8,
        [System.Xml.Serialization.XmlIgnoreAttribute]
        None = 256,
        [System.Xml.Serialization.XmlEnumAttribute("restriction")]
        Restriction = 4,
        [System.Xml.Serialization.XmlEnumAttribute("substitution")]
        Substitution = 1,
        [System.Xml.Serialization.XmlEnumAttribute("union")]
        Union = 16,
    }
    public partial class XmlSchemaDocumentation : System.Xml.Schema.XmlSchemaObject
    {
        public XmlSchemaDocumentation() { }
        [System.Xml.Serialization.XmlAttributeAttribute("xml:lang")]
        public string Language { get { throw null; } set { } }
 