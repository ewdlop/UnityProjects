eContent
    {
        public XmlSchemaSimpleTypeUnion() { }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaSimpleType[] BaseMemberTypes { get { throw null; } }
        [System.Xml.Serialization.XmlElementAttribute("simpleType", typeof(System.Xml.Schema.XmlSchemaSimpleType))]
        public System.Xml.Schema.XmlSchemaObjectCollection BaseTypes { get { throw null; } }
        [System.Xml.Serialization.XmlAttributeAttribute("memberTypes")]
        public System.Xml.XmlQualifiedName[] MemberTypes { get { throw null; } set { } }
    }
    public partial class XmlSchemaTotalDigitsFacet : System.Xml.Schema.XmlSchemaNumericFacet
    {
        public XmlSchemaTotalDigitsFacet() { }
    }
    public partial class XmlSchemaType : System.Xml.Schema.XmlSchemaAnnotated
    {
        public XmlSchemaType() { }
        [System.ObsoleteAttribute("This property has been deprecated. Please use BaseXmlSchemaType property that returns a strongly typed base schema type. http://go.microsoft.com/fwlink/?linkid=14202")]
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public object BaseSchemaType { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaType BaseXmlSchemaType { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaDatatype Datatype { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaDerivationMethod DerivedBy { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute((System.Xml.Schema.XmlSchemaDerivationMethod)(256))]
        [System.Xml.Serialization.XmlAttributeAttribute("final")]
        public System.Xml.Schema.XmlSchemaDerivationMethod Final { get { throw null; } set { } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public virtual bool IsMixed { get { throw null; } set { } }
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get { throw null; } set { } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.XmlQualifiedName QualifiedName { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlTypeCode TypeCode { get { throw null; } }
        public static System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode typeCode) { throw null; }
        public static System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType(System.Xml.XmlQualifiedName qualifiedName) { throw null; }
        public static System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode typeCode) { throw null; }
        public static System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType(System.Xml.XmlQualifiedName qualifiedName) { throw null; }
        public static bool IsDerivedFrom(System.Xml.Schema.XmlSchemaType derivedType, System.Xml.Schema.XmlSchemaType baseType, System.Xml.Schema.XmlSchemaDerivationMethod except) { throw null; }
    }
    public partial class XmlSchemaUnique : System.Xml.Schema.XmlSchemaIdentityConstraint
    {
        public XmlSchemaUnique() { }
    }
    public enum XmlSchemaUse
    {
        [System.Xml.Serialization.XmlIgnoreAttribute]
        None = 0,
        [System.Xml.Serialization.XmlEnumAttribute("optional")]
        Optional = 1,
        [System.Xml.Serialization.XmlEnumAttribute("prohibited")]
        Prohibited = 2,
        [System.Xml.Serialization.XmlEnumAttribute("required")]
        Required = 3,
    }
    [System.SerializableAttribute]
    public partial class XmlSchemaValidationException : System.Xml.Schema.XmlSchemaException
    {
        public XmlSchemaValidationException() { }
        protected XmlSchemaValidationException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        public XmlSchemaValidationException(string message) { }
        public XmlSchemaValidationException(string message, System.Exception innerException) { }
        public XmlSchemaValidationException(string message, System.Exception innerException, int lineNumber, int linePosition) { }
        public object SourceObject { get { throw null; } }