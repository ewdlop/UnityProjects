ternal XmlMemberMapping() { }
        public bool Any { get { throw null; } }
        public bool CheckSpecified { get { throw null; } }
        public string ElementName { get { throw null; } }
        public string MemberName { get { throw null; } }
        public string Namespace { get { throw null; } }
        public string TypeFullName { get { throw null; } }
        public string TypeName { get { throw null; } }
        public string TypeNamespace { get { throw null; } }
        public string XsdElementName { get { throw null; } }
        public string GenerateTypeName(System.CodeDom.Compiler.CodeDomProvider codeProvider) { throw null; }
    }
    public partial class XmlMembersMapping : System.Xml.Serialization.XmlMapping
    {
        internal XmlMembersMapping() { }
        public int Count { get { throw null; } }
        public System.Xml.Serialization.XmlMemberMapping this[int index] { get { throw null; } }
        public string TypeName { get { throw null; } }
        public string TypeNamespace { get { throw null; } }
    }
    [System.AttributeUsageAttribute((System.AttributeTargets)(10624), AllowMultiple=false)]
    public partial class XmlNamespaceDeclarationsAttribute : System.Attribute
    {
        public XmlNamespaceDeclarationsAttribute() { }
    }
    public partial class XmlNodeEventArgs : System.EventArgs
    {
        internal XmlNodeEventArgs() { }
        public int LineNumber { get { throw null; } }
        public int LinePosition { get { throw null; } }
        public string LocalName { get { throw null; } }
        public string Name { get { throw null; } }
        public string NamespaceURI { get { throw null; } }
        public System.Xml.XmlNodeType NodeType { get { throw null; } }
        public object ObjectBeingDeserialized { get { throw null; } }
        public string Text { get { throw null; } }
    }
    public delegate void XmlNodeEventHandler(object sender, System.Xml.Serialization.XmlNodeEventArgs e);
    public partial class XmlReflectionImporter
    {
        public XmlReflectionImporter() { }
        public XmlReflectionImporter(string defaultNamespace) { }
        public XmlReflectionImporter(System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) { }
        public XmlReflectionImporter(System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) { }
        public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) { throw null; }
        public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) { throw null; }
        public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) { throw null; }
        public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access) { throw null; }
        public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(System.Type type) { throw null; }
        public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(System.Type type, string defaultNamespace) { throw null; }
        public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(System.Type type, System.Xml.Serialization.XmlRootAttribute root) { throw null; }
        public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(System.Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) { throw null; }
        public void IncludeType(System.Type type) { }
        public void IncludeTypes(System.Reflection.ICustomAttri