    public override System.Type ValueType { get { throw null; } }
        public override System.Xml.Schema.XmlSchemaType XmlType { get { throw null; } }
        public System.Xml.Schema.XmlAtomicValue Clone() { throw null; }
        object System.ICloneable.Clone() { throw null; }
        public override string ToString() { throw null; }
        public override object ValueAs(System.Type type, System.Xml.IXmlNamespaceResolver nsResolver) { throw null; }
    }
    [System.Xml.Serialization.XmlRootAttribute("schema", Namespace="http://www.w3.org/2001/XMLSchema")]
    public partial class XmlSchema : System.Xml.Schema.XmlSchemaObject
    {
        public const string InstanceNamespace = "http://www.w3.org/2001/XMLSchema-instance";
        public const string Namespace = "http://www.w3.org/2001/XMLSchema";
        public XmlSchema() { }
        [System.ComponentModel.DefaultValueAttribute((System.Xml.Schema.XmlSchemaForm)(0))]
        [System.Xml.Serialization.XmlAttributeAttribute("attributeFormDefault")]
        public System.Xml.Schema.XmlSchemaForm AttributeFormDefault { get { throw null; } set { } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaObjectTable AttributeGroups { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaObjectTable Attributes { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute((System.Xml.Schema.XmlSchemaDerivationMethod)(256))]
        [System.Xml.Serialization.XmlAttributeAttribute("blockDefault")]
        public System.Xml.Schema.XmlSchemaDerivationMethod BlockDefault { get { throw null; } set { } }
        [System.ComponentModel.DefaultValueAttribute((System.Xml.Schema.XmlSchemaForm)(0))]
        [System.Xml.Serialization.XmlAttributeAttribute("elementFormDefault")]
        public System.Xml.Schema.XmlSchemaForm ElementFormDefault { get { throw null; } set { } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaObjectTable Elements { get { throw null; } }
        [System.ComponentModel.DefaultValueAttribute((System.Xml.Schema.XmlSchemaDerivationMethod)(256))]
        [System.Xml.Serialization.XmlAttributeAttribute("finalDefault")]
        public System.Xml.Schema.XmlSchemaDerivationMethod FinalDefault { get { throw null; } set { } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaObjectTable Groups { get { throw null; } }
        [System.Xml.Serialization.XmlAttributeAttribute("id", DataType="ID")]
        public string Id { get { throw null; } set { } }
        [System.Xml.Serialization.XmlElementAttribute("import", typeof(System.Xml.Schema.XmlSchemaImport))]
        [System.Xml.Serialization.XmlElementAttribute("include", typeof(System.Xml.Schema.XmlSchemaInclude))]
        [System.Xml.Serialization.XmlElementAttribute("redefine", typeof(System.Xml.Schema.XmlSchemaRedefine))]
        public System.Xml.Schema.XmlSchemaObjectCollection Includes { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public bool IsCompiled { get { throw null; } }
        [System.Xml.Serialization.XmlElementAttribute("annotation", typeof(System.Xml.Schema.XmlSchemaAnnotation))]
        [System.Xml.Serialization.XmlElementAttribute("attribute", typeof(System.Xml.Schema.XmlSchemaAttribute))]
        [System.Xml.Serialization.XmlElementAttribute("attributeGroup", typeof(System.Xml.Schema.XmlSchemaAttributeGroup))]
        [System.Xml.Serialization.XmlElementAttribute("complexType", typeof(System.Xml.Schema.XmlSchemaComplexType))]
        [System.Xml.Serialization.XmlElementAttribute("element", typeof(System.Xml.Schema.XmlSchemaElement))]
        [System.Xml.Serialization.XmlElementAttribute("group", typeof(System.Xml.Schema.XmlSchemaGroup))]
        [System.Xml.Serialization.XmlElementAttribute("notation", typeof(System.Xml.Schema.XmlSchemaNotation))]
        [System.Xml.Serialization.XmlElementAttribute("simpleType", typeof(System.Xml.Schema.XmlSchemaSimpleType))]
        public System.Xml.Schema.XmlSchemaObjectCollection Items { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaObjectTable Notations { get { throw null; } }
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Xml.Schema.XmlSchemaObjectTable SchemaTypes { get { throw null; } }
        [System.Xml.Serialization.XmlAttributeAttribute("targetNamespace", DataType="anyURI")]
        public string TargetNamespace { get { throw null; } set { } }
        [System.Xml.Serialization.XmlAnyAttributeAttribute]
        public System.Xml.XmlAttribute[] UnhandledAttributes { get { throw null; } set { } }
        [System.Xml.Serialization.XmlAttributeAttribute("version", DataType="token")]
        public string Version { get { throw null; } set { } }
        [System.ObsoleteAttribute("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")]
        public void Compile(System.Xml.Schema.ValidationEventHandler validationEventHandler) { }
        [System.ObsoleteAttribute("Use System.Xml.Schema.XmlSchemaSet for schema compilation and validation. http://go.microsoft.com/fwlink/?linkid=14202")]
        public void Compile(System.Xml.Schema.ValidationEventHandler validationEventHandler, System.Xml.XmlResolver resolver) { }
        public static System.Xml.Schema.XmlSchema Read(System.IO.Stream stream, System.Xml.Schema.ValidationEventHandler validationEventHandler) { throw null; }
        public static System.Xml.Schema.XmlSchema Read(System.IO.TextReader reader, System.Xml.Schema.ValidationEventHandler validationEventHandler) { throw null; }
        public static System.Xml.Schema.XmlSchema Read(System.Xml.XmlReader reader, System.Xml.Schema.ValidationEventHandler validationEventHandler) { throw null; }
        public void Write