g SetAttribute(string localName, string namespaceURI, string value) { throw null; }
        public virtual System.Xml.XmlAttribute SetAttributeNode(string localName, string namespaceURI) { throw null; }
        public virtual System.Xml.XmlAttribute SetAttributeNode(System.Xml.XmlAttribute newAttr) { throw null; }
        public override void WriteContentTo(System.Xml.XmlWriter w) { }
        public override void WriteTo(System.Xml.XmlWriter w) { }
    }
    public partial class XmlEntity : System.Xml.XmlNode
    {
        internal XmlEntity() { }
        public override string BaseURI { get { throw null; } }
        public override string InnerText { get { throw null; } set { } }
        public override string InnerXml { get { throw null; } set { } }
        public override bool IsReadOnly { get { throw null; } }
        public override string LocalName { get { throw null; } }
        public override string Name { get { throw null; } }
        public override System.Xml.XmlNodeType NodeType { get { throw null; } }
        public string NotationName { get { throw null; } }
        public override string OuterXml { get { throw null; } }
        public string PublicId { get { throw null; } }
        public string SystemId { get { throw null; } }
        public override System.Xml.XmlNode CloneNode(bool deep) { throw null; }
        public override void WriteContentTo(System.Xml.XmlWriter w) { }
        public override void WriteTo(System.Xml.XmlWriter w) { }
    }
    public partial class XmlEntityReference : System.Xml.XmlLinkedNode
    {
        protected internal XmlEntityReference(string name, System.Xml.XmlDocument doc) { }
        public override string BaseURI { get { throw null; } }
        public override bool IsReadOnly { get { throw null; } }
        public override string LocalName { get { throw null; } }
        public override string Name { get { throw null; } }
        public override System.Xml.XmlNodeType NodeType { get { throw null; } }
        public override string Value { get { throw null; } set { } }
        public override System.Xml.XmlNode CloneNode(bool deep) { throw null; }
        public override void WriteContentTo(System.Xml.XmlWriter w) { }
        public override void WriteTo(System.Xml.XmlWriter w) { }
    }
    [System.SerializableAttribute]
    public partial class XmlException : System.SystemException
    {
        public XmlException() { }
        protected XmlException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
        pu