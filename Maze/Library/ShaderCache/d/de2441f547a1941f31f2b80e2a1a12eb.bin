esSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    public partial class ProcessDesigner : System.ComponentModel.Design.ComponentDesigner
    {
        public ProcessDesigner() { }
        [System.MonoTODOAttribute]
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
    }
    public partial class ProcessModuleDesigner : System.ComponentModel.Design.ComponentDesigner
    {
        public ProcessModuleDesigner() { }
        [System.MonoTODOAttribute]
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
    }
    public partial class ProcessThreadDesigner : System.ComponentModel.Design.ComponentDesigner
    {
        public ProcessThreadDesigner() { }
        [System.MonoTODOAttribute]
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
    }
}
namespace System.Messaging.Design
{
    public partial class MessageDesigner : System.ComponentModel.Design.ComponentDesigner
    {
        public MessageDesigner() { }
        [System.MonoTODOAttribute]
        protected override void PreFilterProperties(System.Collections.IDictionary properties) { }
    }
}
namespace System.Resources.Tools
{
    public partial interface ITargetAwareCodeDomProvider
    {
        bool SupportsProperty(System.Type type, string propertyName, bool isWritable);
    }
    public static partial class StronglyTypedResourceBuilder
    {
        public static System.CodeDom.CodeCompileUnit Create(System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable) { unmatchable = default(string[]); throw null; }
        public static System.CodeDom.CodeCompileUnit Create(System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable) { unmatchable = default(string[]); throw null; }
        public static System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable) { unmatchable = default(string[]); throw null; }
        public static System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable) { unmatchable = default(string[]); throw null; }
      