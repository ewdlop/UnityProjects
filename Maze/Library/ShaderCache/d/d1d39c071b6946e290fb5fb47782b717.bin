thisdir = docs
SUBDIRS = 
include ../build/rules.make

DISTFILES = \
	clr-abi.txt                 \
	compiler.txt                \
	control-flow-analysis.txt   \
	cs-errors.config            \
	monodoc.xml                 \
	new-anonymous-design.txt    \
	order.txt                   \
	$(DOC_SOURCE_FILES)         \
	$(wildcard ecma334/*.xml)

DOC_SOURCE_FILES = \
	lang-csharp.source          \
	Mono.source                 \
	netdocs.source              \
	Novell.source

ASSEMBLED_DOCS = \
	cs-errors.tree cs-errors.zip      \
	ecma334.tree ecma334.zip          \
	Mono.tree Mono.zip                \
	netdocs.tree netdocs.zip          \
	Novell.tree Novell.zip            

MONODOC_SOURCES_INSTALL_FILES = \
	$(ASSEMBLED_DOCS)             \
	$(DOC_SOURCE_FILES)

CLEAN_FILES += $(ASSEMBLED_DOCS)

ifndef DISABLE_MCS_DOCS
ifneq ($(PROFILE), $(DEFAULT_PROFILE))
DISABLE_MCS_DOCS = yes
endif
endif

ifdef MCS_MODE
DISABLE_MCS_DOCS = yes
endif

csproj-local test-local run-test-local run-test-ondotnet-local doc-update:

clean-local:
	-rm -f $(CLEAN_FILES)

dist-local: dist-default


MONODOC_INSTALL_DIR = $(DESTDIR)$(mono_libdir)/monodoc

ifdef DISABLE_MCS_DOCS
all-local:

install-local:

uninstall-local:

else
all-local: $(ASSEMBLED_DOCS)

install-local:
	$(MKINSTALLDIRS) $(MONODOC_INSTALL_DIR) $(MONODOC_INSTALL_DIR)/sources
	$(INSTALL_DATA) $(MONODOC_SOURCES_INSTALL_FILES) $(MONODOC_INSTALL_DIR)/sources
	$(INSTALL_DATA) monodoc.xml $(MONODOC_INSTALL_DIR)

uninstall-local:
	-rm -f $(MONODOC_INSTALL_DIR)/monodoc.xml
	-rm -f $