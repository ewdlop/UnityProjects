ngedEventHandler(object sender, System.ComponentModel.Design.MenuCommandsChangedEventArgs e);
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum MenuCommandsChangedType
    {
        CommandAdded = 0,
        CommandChanged = 2,
        CommandRemoved = 1,
    }
    public partial class MenuCommandService : System.ComponentModel.Design.IMenuCommandService, System.IDisposable
    {
        public MenuCommandService(System.IServiceProvider serviceProvider) { }
        public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get { throw null; } }
        public event System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged { add { } remove { } }
        public virtual void AddCommand(System.ComponentModel.Design.MenuCommand command) { }
        public virtual void AddVerb(System.ComponentModel.Design.DesignerVerb verb) { }
        public void Dispose() { }
        protected virtual void Dispose(bool disposing) { }
        protected void EnsureVerbs() { }
        public System.ComponentModel.Design.MenuCommand FindCommand(System.ComponentModel.Design.CommandID commandID) { throw null; }
        protected System.ComponentModel.Design.MenuCommand FindCommand(System.Guid guid, int id) { throw null; }
        protected System.Collections.ICollection GetCommandList(System.Guid guid) { throw null; }
        protected object GetService(System.Type serviceType) { throw null; }
        public virtual bool GlobalInvoke(System.ComponentModel.Design.CommandID commandID) { throw null; }
        public virtual bool GlobalInvoke(System.ComponentModel.Design.CommandID commandId, object arg) { throw null; }
        protected virtual void OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs e) { }
        public virtual void RemoveCommand(System.ComponentModel.Design.MenuCommand command) { }
        public virtual void RemoveVerb(System.ComponentModel.Design.DesignerVerb verb) { }
        public virtual void ShowContextMenu(System.ComponentModel.Design.CommandID menuID, int x, int y) { }
    }
    public sealed partial class MultilineStringEditor : System.Drawing.Design.UITypeEditor
    {
        public MultilineStringEditor() { }
        public override object EditValue(System.ComponentModel.ITypeDescriptorContext context, System.IServiceProvider provider, object value) { throw null; }
        public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    public abstract partial class ObjectSelectorEditor : System.Drawing.Design.UITypeEditor
    {
        protected object currValue;
        protected object prevValu