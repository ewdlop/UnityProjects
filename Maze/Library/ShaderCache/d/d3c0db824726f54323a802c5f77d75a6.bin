r atomization while parsing the string if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:NCName type. </param>
        <param name="nsmgr">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to use while parsing the string if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:QName type.</param>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.XmlNamespaceManager nsmgr);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" /> method validates the specified string against a built-in or user-defined simple type. For example, if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> represents the type xs:date, then an instance of <see cref="T:System.DateTime" /> is returned.</para>
          <para>The following are the steps performed during the <see cref="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" /> method's validation process.</para>
          <list type="ordered">
            <item>
              <para>Convert the specified string to its corresponding Common Language Runtime (CLR) type.</para>
            </item>
            <item>
              <para>Verify that the value does not violate any facets that are defined for the simple type.</para>
            </item>
          </list>
          <para>The converted value is then returned as an <see cref="T:System.Object" /> and can be cast safely to the type that is returned by the <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> property.</para>
          <para>When the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents a list type, the input string value is converted to a list of one or more objects. When the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents a list type, an attempt is made to parse the input value as a member type of the union. If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse. If the parse is unsuccessful, an exception is thrown.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, validates the specified string against a built-in or user-defined simple type.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Object" /> that can be safely cast to the type that is returned by the <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> property.</para>
        </returns>
        <param name="s">
          <attribution license="cc4" from="Microsoft" modified="false" />The string to validate against the simple type.</param>
        <param name="nameTable">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlNameTable" /> to use for atomization while parsing the string if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:NCName type. </param>
        <param name="nsmgr">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlNamespaceManager" /> object to use while parsing the string if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:QName type.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'System.Xml.XmlTokenizedType'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Allows the string to be read as a particular XML type, for example, a CDATA section type.</para>
          <para>The following table shows the token types.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XmlTokenizedType</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>CDATA</para>
              </term>
              <description>
                <para>CDATA type</para>
              </description>
            </item>
            <item>
              <term>
                <para>ID</para>
              </term>
              <description>
                <para>ID type</para>
              </description>
            </item>
            <item>
              <term>
                <para>IDREF</para>
              </term>
              <description>
                <para>IDREF type</para>
              </description>
            </item>
            <item>
              <term>
                <para>IDREFS</para>
              </term>
              <description>
                <para>IDREFS type</para>
              </description>
            </item>
            <item>
              <term>
                <para>ENTITY</para>
              </term>
              <description>
                <para>ENTITY type</para>
              </description>
            </item>
            <item>
              <term>
                <para>