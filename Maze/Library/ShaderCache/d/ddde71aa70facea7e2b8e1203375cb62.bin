 }
        [System.MonoNotSupportedAttribute("")]
        protected virtual System.Web.UI.Control CreateViewControl() { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public System.Drawing.Rectangle GetBounds() { throw null; }
        [System.MonoTODOAttribute]
        public virtual string GetDesignTimeHtml() { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public virtual string GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection regions) { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory(System.IServiceProvider serviceProvider) { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public virtual string GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion region) { throw null; }
        [System.MonoTODOAttribute]
        protected virtual string GetEmptyDesignTimeHtml() { throw null; }
        [System.MonoTODOAttribute]
        protected virtual string GetErrorDesignTimeHtml(System.Exception e) { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public virtual string GetPersistenceContent() { throw null; }
        [System.MonoTODOAttribute]
        [System.ObsoleteAttribute("Use GetPersistenceContent() instead")]
        public virtual string GetPersistInnerHtml() { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public System.Web.UI.Design.ViewRendering GetViewRendering() { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public static System.Web.UI.Design.ViewRendering GetViewRendering(System.Web.UI.Control control) { throw null; }
        [System.MonoNotSupportedAttribute("")]
        public static System.Web.UI.Design.ViewRendering GetViewRendering(System.Web.UI.Design.ControlDesigner designer) { throw null; }
        [System.MonoTODOAttribute]
        public override void Initialize(System.ComponentModel.IComponent component) { }
        [System.MonoTODOAttribute]
        public void Invalidate() { }
        [System.MonoTODOAttribute]
        public void Invalidate(System.Drawing.Rectangle rectangle) { }
        [System.MonoTODOAttribute]
        public static void InvokeTransactedChange(System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description) { }
        [System.MonoTODOAttribute]
        public static void InvokeTransactedChange(System.ComponentModel.IComponent c