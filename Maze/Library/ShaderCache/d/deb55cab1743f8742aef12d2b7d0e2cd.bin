pe expressionType, object owner) { }
        public ExpressionContext(System.CodeDom.CodeExpression expression, System.Type expressionType, object owner, object presetValue) { }
        public System.CodeDom.CodeExpression Expression { get { throw null; } }
        public System.Type ExpressionType { get { throw null; } }
        public object Owner { get { throw null; } }
        public object PresetValue { get { throw null; } }
    }
    public partial interface ICodeDomDesignerReload
    {
        bool ShouldReloadDesigner(System.CodeDom.CodeCompileUnit newTree);
    }
    public abstract partial class MemberCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase
    {
        protected MemberCodeDomSerializer() { }
        public abstract void Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.ComponentModel.MemberDescriptor descriptor, System.CodeDom.CodeStatementCollection statements);
        public abstract bool ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.ComponentModel.MemberDescriptor descriptor);
    }
    public sealed partial class ObjectStatementCollection : System.Collections.IEnumerable
    {
        internal ObjectStatementCollection() { }
        public System.CodeDom.CodeStatementCollection this[object statementOwner] { get { throw null; } }
        public bool ContainsKey(object statementOwner) { throw null; }
        public System.Collections.IDictionaryEnumerator GetEnumerator() { throw null; }
        public void Populate(System.Collections.ICollection statementOwners) { }
        public void Populate(object owner) { }
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() { throw null; }
    }
    public sealed partial class RootContext
    {
        public RootContext(System.CodeDom.CodeExpression expression, object value) { }
   