inuation != CALLBACK_RAN);
            continuation();
        }        
    };


    /// <summary>Gets an awaiter.</summary>
    /// <returns>Returns itself as the awaiter.</returns>
    public BeginEndAwaitableAdapter GetAwaiter() {

        return this;
    }


    /// <summary>Gets whether the awaited APM operation completed.</summary>
    public bool IsCompleted {
        get {
        
            // We are completed if the callback was called and it set the continuation to the CALLBACK_RAN sentinel.
            // If the operation completes asynchronously, there's still a chance we'll see CALLBACK_RAN here, in which
            // case we're still good to keep running synchronously.           
            return (_continuation == CALLBACK_RAN);            
        }
    }

    /// <summary>Schedules the continuation to run when the operation completes.</summary>
    /// <param name="continuation">The continuation.</param>
    [SecurityCritical]
    public void UnsafeOnCompleted(Action continuation) {

        Contract.Assert(continuation != null);
        OnCompleted(continuation); 
    }


    /// <summary>Schedules the continuation to run when the operation completes.</summary>
    /// <param name="continuation">The continuation.</param>
    public void OnCompleted(Action continuation) {

        Contract.Assert(continuation != null);

        // If the continuation field is null, then set it to be the target continuation
        // so that when t