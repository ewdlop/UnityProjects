at the
		// initializer can be called multiple times (in case multiple creation
		// attempts have to be made).
		public static HttpListener CreateAndStartHttpListener (string host, out int port, string path, AuthenticationSchemes? authSchemes = null, Action<HttpListener> initializer = null)
		{
			// There's no way to create an HttpListener with a system-assigned port.
			// So we use NetworkHelpers.FindFreePort, and re-try if we fail because someone else has already used the port.
			for (int i = 0; i < 10; i++) {
				try {
					var tentativePort = NetworkHelpers.FindFreePort ();
					var listener = CreateAndStartHttpListener (host, tentativePort, path, authSchemes, initializer);
					port = tentativePort;
					return listener;
				} catch (SocketException se) {
					if (se.SocketErrorCode == SocketError.AddressAlreadyInUse)
						continue;
					throw;
				}
			}
			throw new Exception ("Unable to create HttpListener after 10 attempts");
		}

		// Creates and starts an HttpListener using the specified host, path
		// and authSchemes. The method will try to find an unused port, and
		// use that (multiple attempts with random port numbers will be made).
		//
		// If specified, the initializer will be called immediately after the
		// HttpListener is created (typical usage would be to set/change
		// properties before starting the listener). Be aware that the
		// initializer can be called multiple times (in case multiple creation
		// attempts have to be made).
		//
		// The resulting uri w