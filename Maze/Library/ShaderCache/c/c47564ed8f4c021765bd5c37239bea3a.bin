GetResourceString("Arg_ExecutionEngineException"));        
        }
#endif

        // Same problem with the Encoder, this only happens with Everett Encoders
        [Serializable]
        internal sealed class MLangEncoder : ISerializable, IObjectReference
        {
            // Might need this when GetRealObjecting
            [NonSerialized]
            private Encoding realEncoding = null;

            // Constructor called by serialization, have to handle deserializing from Everett
            internal MLangEncoder(SerializationInfo info, StreamingContext context)
            {
                // Any info?
                if (info==null) throw new ArgumentNullException("info");
                Contract.EndContractBlock();

                this.realEncoding = (Encoding)info.GetValue("m_encoding", typeof(Encoding));
            }

            // Just get it from GetEncoder
            [System.Security.SecurityCritical]  // auto-generated
            public Object GetRealObject(StreamingContext context)
            {
                return this.realEncoding.GetEncoder();
            }

#if FEATURE_SERIALIZATION
            // ISerializable implementation, get data for this object
            [System.Security.SecurityCritical]  // auto-generated_required
            void ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
            {
                // We cannot ever call this.
                Contract.Assert(false, "Didn't expect 