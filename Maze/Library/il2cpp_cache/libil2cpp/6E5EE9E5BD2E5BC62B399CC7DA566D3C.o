//------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------

namespace System.ServiceModel.Channels
{
    using System.Diagnostics;
    using System.Runtime;
    using System.ServiceModel;

    // Pool of channels used by OneWayChannelFactories
    class ChannelPool<TChannel> : IdlingCommunicationPool<ChannelPoolKey, TChannel>
        where TChannel : class, IChannel
    {
        static AsyncCallback onCloseComplete = Fx.ThunkCallback(new AsyncCallback(OnCloseComplete));

        public ChannelPool(ChannelPoolSettings settings)
            : base(settings.MaxOutboundChannelsPerEndpoint, settings.IdleTimeout, settings.LeaseTimeout)
        {
        }

        protected override void AbortItem(TChannel item)
        {
            item.Abort();
        }

        protected override void CloseItem(TChannel item, TimeSpan timeout)
        {
            item.Close(timeout);
        }

        protected override void CloseItemAsync(TChannel item, TimeSpan timeout)
        {
            bool succeeded = false;

            try
            {
                IAsyncResult result = item.BeginClose(timeout, onCloseComplete, item);

                if (result.Co