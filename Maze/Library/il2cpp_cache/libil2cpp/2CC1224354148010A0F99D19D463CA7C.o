2, 0, S("abcde"), 1, 2, -2);
    test(S("abcde"), 2, 0, S("abcde"), 1, 3, -3);
    test(S("abcde"), 2, 0, S("abcde"), 1, 4, -4);
    test(S("abcde"), 2, 0, S("abcde"), 1, 5, -4);
    test(S("abcde"), 2, 0, S("abcde"), 2, 0, 0);
    test(S("abcde"), 2, 0, S("abcde"), 2, 1, -1);
    test(S("abcde"), 2, 0, S("abcde"), 2, 2, -2);
    test(S("abcde"), 2, 0, S("abcde"), 2, 3, -3);
    test(S("abcde"), 2, 0, S("abcde"), 2, 4, -3);
    test(S("abcde"), 2, 0, S("abcde"), 4, 0, 0);
    test(S("abcde"), 2, 0, S("abcde"), 4, 1, -1);
    test(S("abcde"), 2, 0, S("abcde"), 4, 2, -1);
    test(S("abcde"), 2, 0, S("abcde"), 5, 0, 0);
    test(S("abcde"), 2, 0, S("abcde"), 5, 1, 0);
    test(S("abcde"), 2, 0, S("abcde"), 6, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcde"), 2, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcde"), 2, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcde"), 2, 0, S("abcdefghij"), 0, 11, -10);
    test(S("abcde"), 2, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcde"), 2, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcde"), 2, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcde"), 2, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcde"), 2, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcde"), 2, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcde"), 2, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcde"), 2, 0, S("abcdefghij"), 5, 6, -5);
    test(S("abcde"), 2, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcde"), 2, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcde"), 2, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcde"), 2, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 2, 1, S(""), 0, 0, 1);
    test(S("abcde"), 2, 1, S(""), 0, 1, 1);
    test(S("abcde"), 2, 1, S(""), 1, 0, 0);
    test(S("abcde"), 2, 1, S("abcde"), 0, 0, 1);
    test(S("abcde"), 2, 1, S("abcde"), 0, 1, 2);
    test(S("abcde"), 2, 1, S("abcde"), 0, 2, 2);
    test(S("abcde"), 2, 1, S("abcde"), 0, 4, 2);
    test(S("abcde"), 2, 1, S("abcde"), 0, 5, 2);
    test(S("abcde"), 2, 1, S("abcde"), 0, 6, 2);
    test(S("abcde"), 2, 1, S("abcde"), 1, 0, 1);
    test(S("abcde"), 2, 1, S("abcde"), 1, 1, 1);
    test(S("abcde"), 2, 1, S("abcde"), 1, 2, 1);
    test(S("abcde"), 2, 1, S("abcde"), 1, 3, 1);
    test(S("abcde"), 2, 1, S("abcde"), 1, 4, 1);
    test(S("abcde"), 2, 1, S("abcde"), 1, 5, 1);
    test(S("abcde"), 2, 1, S("abcde"), 2, 0, 1);
}

template <class S>
void test12()
{
    test(S("abcde"), 2, 1, S("abcde"), 2, 1, 0);
    test(S("abcde"), 2, 1, S("abcde"), 2, 2, -1);
    test(S("abcde"), 2, 1, S("abcde"), 2, 3, -2);
    test(S("abcde"), 2, 1, S("abcde"), 2, 4, -2);
    test(S("abcde"), 2, 1, S("abcde"), 4, 0, 1);
    test(S("abcde"), 2, 1, S("abcde"), 4, 1, -2);
    test(S("abcde"), 2, 1, S("abcde"), 4, 2, -2);
    test(S("abcde"), 2, 1, S("abcde"), 5, 0, 1);
    test(S("abcde"), 2, 1, S("abcde"), 5, 1, 1);
    test(S("abcde"), 2, 1, S("abcde"), 6, 0, 0);
    test(S("abcde"), 2, 1, S("abcdefghij"), 0, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 0, 1, 2);
    test(S("abcde"), 2, 1, S("abcdefghij"), 0, 5, 2);
    test(S("abcde"), 2, 1, S("abcdefghij"), 0, 9, 2);
    test(S("abcde"), 2, 1, S("abcdefghij"), 0, 10, 2);
    test(S("abcde"), 2, 1, S("abcdefghij"), 0, 11, 2);
    test(S("abcde"), 2, 1, S("abcdefghij"), 1, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 1, 1, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 1, 4, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 1, 8, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 1, 9, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 1, 10, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 5, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 5, 1, -3);
    test(S("abcde"), 2, 1, S("abcdefghij"), 5, 2, -3);
    test(S("abcde"), 2, 1, S("abcdefghij"), 5, 4, -3);
    test(S("abcde"), 2, 1, S("abcdefghij"), 5, 5, -3);
    test(S("abcde"), 2, 1, S("abcdefghij"), 5, 6, -3);
    test(S("abcde"), 2, 1, S("abcdefghij"), 9, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 9, 1, -7);
    test(S("abcde"), 2, 1, S("abcdefghij"), 9, 2, -7);
    test(S("abcde"), 2, 1, S("abcdefghij"), 10, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 10, 1, 1);
    test(S("abcde"), 2, 1, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 0, 1, 2);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 0, 10, 2);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 0, 19, 2);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 0, 20, 2);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 0, 21, 2);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 1, 1, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 1, 9, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 1, 18, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 1, 19, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 1, 20, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 10, 1, -8);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 10, 5, -8);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 10, 9, -8);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 10, 10, -8);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 10, 11, -8);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 19, 1, -17);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 19, 2, -17);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 20, 0, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcde"), 2, 1, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 2, 2, S(""), 0, 0, 2);
    test(S("abcde"), 2, 2, S(""), 0, 1, 2);
    test(S("abcde"), 2, 2, S(""), 1, 0, 0);
    test(S("abcde"), 2, 2, S("abcde"), 0, 0, 2);
    test(S("abcde"), 2, 2, S("abcde"), 0, 1, 2);
    test(S("abcde"), 2, 2, S("abcde"), 0, 2, 2);
    test(S("abcde"), 2, 2, S("abcde"), 0, 4, 2);
    test(S("abcde"), 2, 2, S("abcde"), 0, 5, 2);
    test(S("abcde"), 2, 2, S("abcde"), 0, 6, 2);
    test(S("abcde"), 2, 2, S("abcde"), 1, 0, 2);
    test(S("abcde"), 2, 2, S("abcde"), 1, 1, 1);
    test(S("abcde"), 2, 2, S("abcde"), 1, 2, 1);
    test(S("abcde"), 2, 2, S("abcde"), 1, 3, 1);
    test(S("abcde"), 2, 2, S("abcde"), 1, 4, 1);
    test(S("abcde"), 2, 2, S("abcde"), 1, 5, 1);
    test(S("abcde"), 2, 2, S("abcde"), 2, 0, 2);
    test(S("abcde"), 2, 2, S("abcde"), 2, 1, 1);
    test(S("abcde"), 2, 2, S("abcde"), 2, 2, 0);
    test(S("abcde"), 2, 2, S("abcde"), 2, 3, -1);
    test(S("abcde"), 2, 2, S("abcde"), 2, 4, -1);
    test(S("abcde"), 2, 2, S("abcde"), 4, 0, 2);
    test(S("abcde"), 2, 2, S("abcde"), 4, 1, -2);
    test(S("abcde"), 2, 2, S("abcde"), 4, 2, -2);
    test(S("abcde"), 2, 2, S("abcde"), 5, 0, 2);
    test(S("abcde"), 2, 2, S("abcde"), 5, 1, 2);
    test(S("abcde"), 2, 2, S("abcde"), 6, 0, 0);
    test(S("abcde"), 2, 2, S("abcdefghij"), 0, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 0, 1, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 0, 5, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 0, 9, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 0, 10, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 0, 11, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 1, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 1, 1, 1);
    test(S("abcde"), 2, 2, S("abcdefghij"), 1, 4, 1);
    test(S("abcde"), 2, 2, S("abcdefghij"), 1, 8, 1);
    test(S("abcde"), 2, 2, S("abcdefghij"), 1, 9, 1);
    test(S("abcde"), 2, 2, S("abcdefghij"), 1, 10, 1);
    test(S("abcde"), 2, 2, S("abcdefghij"), 5, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 5, 1, -3);
    test(S("abcde"), 2, 2, S("abcdefghij"), 5, 2, -3);
    test(S("abcde"), 2, 2, S("abcdefghij"), 5, 4, -3);
}

template <class S>
void test13()
{
    test(S("abcde"), 2, 2, S("abcdefghij"), 5, 5, -3);
    test(S("abcde"), 2, 2, S("abcdefghij"), 5, 6, -3);
    test(S("abcde"), 2, 2, S("abcdefghij"), 9, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 9, 1, -7);
    test(S("abcde"), 2, 2, S("abcdefghij"), 9, 2, -7);
    test(S("abcde"), 2, 2, S("abcdefghij"), 10, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 10, 1, 2);
    test(S("abcde"), 2, 2, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 0, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 0, 1, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 0, 10, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 0, 19, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 0, 20, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 0, 21, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 1, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 1, 1, 1);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 1, 9, 1);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 1, 18, 1);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 1, 19, 1);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 1, 20, 1);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 10, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 10, 1, -8);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 10, 5, -8);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 10, 9, -8);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 10, 10, -8);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 10, 11, -8);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 19, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 19, 1, -17);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 19, 2, -17);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 20, 0, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 20, 1, 2);
    test(S("abcde"), 2, 2, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 2, 3, S(""), 0, 0, 3);
    test(S("abcde"), 2, 3, S(""), 0, 1, 3);
    test(S("abcde"), 2, 3, S(""), 1, 0, 0);
    test(S("abcde"), 2, 3, S("abcde"), 0, 0, 3);
    test(S("abcde"), 2, 3, S("abcde"), 0, 1, 2);
    test(S("abcde"), 2, 3, S("abcde"), 0, 2, 2);
    test(S("abcde"), 2, 3, S("abcde"), 0, 4, 2);
    test(S("abcde"), 2, 3, S("abcde"), 0, 5, 2);
    test(S("abcde"), 2, 3, S("abcde"), 0, 6, 2);
    test(S("abcde"), 2, 3, S("abcde"), 1, 0, 3);
    test(S("abcde"), 2, 3, S("abcde"), 1, 1, 1);
    test(S("abcde"), 2, 3, S("abcde"), 1, 2, 1);
    test(S("abcde"), 2, 3, S("abcde"), 1, 3, 1);
    test(S("abcde"), 2, 3, S("abcde"), 1, 4, 1);
    test(S("abcde"), 2, 3, S("abcde"), 1, 5, 1);
    test(S("abcde"), 2, 3, S("abcde"), 2, 0, 3);
    test(S("abcde"), 2, 3, S("abcde"), 2, 1, 2);
    test(S("abcde"), 2, 3, S("abcde"), 2, 2, 1);
    test(S("abcde"), 2, 3, S("abcde"), 2, 3, 0);
    test(S("abcde"), 2, 3, S("abcde"), 2, 4, 0);
    test(S("abcde"), 2, 3, S("abcde"), 4, 0, 3);
    test(S("abcde"), 2, 3, S("abcde"), 4, 1, -2);
    test(S("abcde"), 2, 3, S("abcde"), 4, 2, -2);
    test(S("abcde"), 2, 3, S("abcde"), 5, 0, 3);
    test(S("abcde"), 2, 3, S("abcde"), 5, 1, 3);
    test(S("abcde"), 2, 3, S("abcde"), 6, 0, 0);
    test(S("abcde"), 2, 3, S("abcdefghij"), 0, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 0, 1, 2);
    test(S("abcde"), 2, 3, S("abcdefghij"), 0, 5, 2);
    test(S("abcde"), 2, 3, S("abcdefghij"), 0, 9, 2);
    test(S("abcde"), 2, 3, S("abcdefghij"), 0, 10, 2);
    test(S("abcde"), 2, 3, S("abcdefghij"), 0, 11, 2);
    test(S("abcde"), 2, 3, S("abcdefghij"), 1, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 1, 1, 1);
    test(S("abcde"), 2, 3, S("abcdefghij"), 1, 4, 1);
    test(S("abcde"), 2, 3, S("abcdefghij"), 1, 8, 1);
    test(S("abcde"), 2, 3, S("abcdefghij"), 1, 9, 1);
    test(S("abcde"), 2, 3, S("abcdefghij"), 1, 10, 1);
    test(S("abcde"), 2, 3, S("abcdefghij"), 5, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 5, 1, -3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 5, 2, -3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 5, 4, -3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 5, 5, -3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 5, 6, -3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 9, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 9, 1, -7);
    test(S("abcde"), 2, 3, S("abcdefghij"), 9, 2, -7);
    test(S("abcde"), 2, 3, S("abcdefghij"), 10, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 10, 1, 3);
    test(S("abcde"), 2, 3, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 0, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 0, 1, 2);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 0, 10, 2);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 0, 19, 2);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 0, 20, 2);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 0, 21, 2);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 1, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 1, 1, 1);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 1, 9, 1);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 1, 18, 1);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 1, 19, 1);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 1, 20, 1);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 10, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 10, 1, -8);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 10, 5, -8);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 10, 9, -8);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 10, 10, -8);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 10, 11, -8);
}

template <class S>
void test14()
{
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 19, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 19, 1, -17);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 19, 2, -17);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 20, 0, 3);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 20, 1, 3);
    test(S("abcde"), 2, 3, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 2, 4, S(""), 0, 0, 3);
    test(S("abcde"), 2, 4, S(""), 0, 1, 3);
    test(S("abcde"), 2, 4, S(""), 1, 0, 0);
    test(S("abcde"), 2, 4, S("abcde"), 0, 0, 3);
    test(S("abcde"), 2, 4, S("abcde"), 0, 1, 2);
    test(S("abcde"), 2, 4, S("abcde"), 0, 2, 2);
    test(S("abcde"), 2, 4, S("abcde"), 0, 4, 2);
    test(S("abcde"), 2, 4, S("abcde"), 0, 5, 2);
    test(S("abcde"), 2, 4, S("abcde"), 0, 6, 2);
    test(S("abcde"), 2, 4, S("abcde"), 1, 0, 3);
    test(S("abcde"), 2, 4, S("abcde"), 1, 1, 1);
    test(S("abcde"), 2, 4, S("abcde"), 1, 2, 1);
    test(S("abcde"), 2, 4, S("abcde"), 1, 3, 1);
    test(S("abcde"), 2, 4, S("abcde"), 1, 4, 1);
    test(S("abcde"), 2, 4, S("abcde"), 1, 5, 1);
    test(S("abcde"), 2, 4, S("abcde"), 2, 0, 3);
    test(S("abcde"), 2, 4, S("abcde"), 2, 1, 2);
    test(S("abcde"), 2, 4, S("abcde"), 2, 2, 1);
    test(S("abcde"), 2, 4, S("abcde"), 2, 3, 0);
    test(S("abcde"), 2, 4, S("abcde"), 2, 4, 0);
    test(S("abcde"), 2, 4, S("abcde"), 4, 0, 3);
    test(S("abcde"), 2, 4, S("abcde"), 4, 1, -2);
    test(S("abcde"), 2, 4, S("abcde"), 4, 2, -2);
    test(S("abcde"), 2, 4, S("abcde"), 5, 0, 3);
    test(S("abcde"), 2, 4, S("abcde"), 5, 1, 3);
    test(S("abcde"), 2, 4, S("abcde"), 6, 0, 0);
    test(S("abcde"), 2, 4, S("abcdefghij"), 0, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 0, 1, 2);
    test(S("abcde"), 2, 4, S("abcdefghij"), 0, 5, 2);
    test(S("abcde"), 2, 4, S("abcdefghij"), 0, 9, 2);
    test(S("abcde"), 2, 4, S("abcdefghij"), 0, 10, 2);
    test(S("abcde"), 2, 4, S("abcdefghij"), 0, 11, 2);
    test(S("abcde"), 2, 4, S("abcdefghij"), 1, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 1, 1, 1);
    test(S("abcde"), 2, 4, S("abcdefghij"), 1, 4, 1);
    test(S("abcde"), 2, 4, S("abcdefghij"), 1, 8, 1);
    test(S("abcde"), 2, 4, S("abcdefghij"), 1, 9, 1);
    test(S("abcde"), 2, 4, S("abcdefghij"), 1, 10, 1);
    test(S("abcde"), 2, 4, S("abcdefghij"), 5, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 5, 1, -3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 5, 2, -3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 5, 4, -3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 5, 5, -3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 5, 6, -3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 9, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 9, 1, -7);
    test(S("abcde"), 2, 4, S("abcdefghij"), 9, 2, -7);
    test(S("abcde"), 2, 4, S("abcdefghij"), 10, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 10, 1, 3);
    test(S("abcde"), 2, 4, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 0, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 0, 1, 2);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 0, 10, 2);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 0, 19, 2);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 0, 20, 2);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 0, 21, 2);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 1, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 1, 1, 1);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 1, 9, 1);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 1, 18, 1);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 1, 19, 1);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 1, 20, 1);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 10, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 10, 1, -8);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 10, 5, -8);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 10, 9, -8);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 10, 10, -8);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 10, 11, -8);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 19, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 19, 1, -17);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 19, 2, -17);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 20, 0, 3);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 20, 1, 3);
    test(S("abcde"), 2, 4, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 4, 0, S(""), 0, 0, 0);
    test(S("abcde"), 4, 0, S(""), 0, 1, 0);
    test(S("abcde"), 4, 0, S(""), 1, 0, 0);
    test(S("abcde"), 4, 0, S("abcde"), 0, 0, 0);
    test(S("abcde"), 4, 0, S("abcde"), 0, 1, -1);
    test(S("abcde"), 4, 0, S("abcde"), 0, 2, -2);
    test(S("abcde"), 4, 0, S("abcde"), 0, 4, -4);
    test(S("abcde"), 4, 0, S("abcde"), 0, 5, -5);
    test(S("abcde"), 4, 0, S("abcde"), 0, 6, -5);
    test(S("abcde"), 4, 0, S("abcde"), 1, 0, 0);
    test(S("abcde"), 4, 0, S("abcde"), 1, 1, -1);
    test(S("abcde"), 4, 0, S("abcde"), 1, 2, -2);
    test(S("abcde"), 4, 0, S("abcde"), 1, 3, -3);
    test(S("abcde"), 4, 0, S("abcde"), 1, 4, -4);
    test(S("abcde"), 4, 0, S("abcde"), 1, 5, -4);
    test(S("abcde"), 4, 0, S("abcde"), 2, 0, 0);
    test(S("abcde"), 4, 0, S("abcde"), 2, 1, -1);
    test(S("abcde"), 4, 0, S("abcde"), 2, 2, -2);
    test(S("abcde"), 4, 0, S("abcde"), 2, 3, -3);
    test(S("abcde"), 4, 0, S("abcde"), 2, 4, -3);
}

template <class S>
void test15()
{
    test(S("abcde"), 4, 0, S("abcde"), 4, 0, 0);
    test(S("abcde"), 4, 0, S("abcde"), 4, 1, -1);
    test(S("abcde"), 4, 0, S("abcde"), 4, 2, -1);
    test(S("abcde"), 4, 0, S("abcde"), 5, 0, 0);
    test(S("abcde"), 4, 0, S("abcde"), 5, 1, 0);
    test(S("abcde"), 4, 0, S("abcde"), 6, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcde"), 4, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcde"), 4, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcde"), 4, 0, S("abcdefghij"), 0, 11, -10);
    test(S("abcde"), 4, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcde"), 4, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcde"), 4, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcde"), 4, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcde"), 4, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcde"), 4, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcde"), 4, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcde"), 4, 0, S("abcdefghij"), 5, 6, -5);
    test(S("abcde"), 4, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcde"), 4, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcde"), 4, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcde"), 4, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 4, 1, S(""), 0, 0, 1);
    test(S("abcde"), 4, 1, S(""), 0, 1, 1);
    test(S("abcde"), 4, 1, S(""), 1, 0, 0);
    test(S("abcde"), 4, 1, S("abcde"), 0, 0, 1);
    test(S("abcde"), 4, 1, S("abcde"), 0, 1, 4);
    test(S("abcde"), 4, 1, S("abcde"), 0, 2, 4);
    test(S("abcde"), 4, 1, S("abcde"), 0, 4, 4);
    test(S("abcde"), 4, 1, S("abcde"), 0, 5, 4);
    test(S("abcde"), 4, 1, S("abcde"), 0, 6, 4);
    test(S("abcde"), 4, 1, S("abcde"), 1, 0, 1);
    test(S("abcde"), 4, 1, S("abcde"), 1, 1, 3);
    test(S("abcde"), 4, 1, S("abcde"), 1, 2, 3);
    test(S("abcde"), 4, 1, S("abcde"), 1, 3, 3);
    test(S("abcde"), 4, 1, S("abcde"), 1, 4, 3);
    test(S("abcde"), 4, 1, S("abcde"), 1, 5, 3);
    test(S("abcde"), 4, 1, S("abcde"), 2, 0, 1);
    test(S("abcde"), 4, 1, S("abcde"), 2, 1, 2);
    test(S("abcde"), 4, 1, S("abcde"), 2, 2, 2);
    test(S("abcde"), 4, 1, S("abcde"), 2, 3, 2);
    test(S("abcde"), 4, 1, S("abcde"), 2, 4, 2);
    test(S("abcde"), 4, 1, S("abcde"), 4, 0, 1);
    test(S("abcde"), 4, 1, S("abcde"), 4, 1, 0);
    test(S("abcde"), 4, 1, S("abcde"), 4, 2, 0);
    test(S("abcde"), 4, 1, S("abcde"), 5, 0, 1);
    test(S("abcde"), 4, 1, S("abcde"), 5, 1, 1);
    test(S("abcde"), 4, 1, S("abcde"), 6, 0, 0);
    test(S("abcde"), 4, 1, S("abcdefghij"), 0, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 0, 1, 4);
    test(S("abcde"), 4, 1, S("abcdefghij"), 0, 5, 4);
    test(S("abcde"), 4, 1, S("abcdefghij"), 0, 9, 4);
    test(S("abcde"), 4, 1, S("abcdefghij"), 0, 10, 4);
    test(S("abcde"), 4, 1, S("abcdefghij"), 0, 11, 4);
    test(S("abcde"), 4, 1, S("abcdefghij"), 1, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 1, 1, 3);
    test(S("abcde"), 4, 1, S("abcdefghij"), 1, 4, 3);
    test(S("abcde"), 4, 1, S("abcdefghij"), 1, 8, 3);
    test(S("abcde"), 4, 1, S("abcdefghij"), 1, 9, 3);
    test(S("abcde"), 4, 1, S("abcdefghij"), 1, 10, 3);
    test(S("abcde"), 4, 1, S("abcdefghij"), 5, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 5, 1, -1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 5, 2, -1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 5, 4, -1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 5, 5, -1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 5, 6, -1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 9, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 9, 1, -5);
}

template <class S>
void test16()
{
    test(S("abcde"), 4, 1, S("abcdefghij"), 9, 2, -5);
    test(S("abcde"), 4, 1, S("abcdefghij"), 10, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 10, 1, 1);
    test(S("abcde"), 4, 1, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 0, 1, 4);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 0, 10, 4);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 0, 19, 4);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 0, 20, 4);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 0, 21, 4);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 1, 1, 3);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 1, 9, 3);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 1, 18, 3);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 1, 19, 3);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 1, 20, 3);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 10, 1, -6);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 10, 5, -6);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 10, 9, -6);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 10, 10, -6);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 10, 11, -6);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 19, 1, -15);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 19, 2, -15);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 20, 0, 1);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcde"), 4, 1, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 4, 2, S(""), 0, 0, 1);
    test(S("abcde"), 4, 2, S(""), 0, 1, 1);
    test(S("abcde"), 4, 2, S(""), 1, 0, 0);
    test(S("abcde"), 4, 2, S("abcde"), 0, 0, 1);
    test(S("abcde"), 4, 2, S("abcde"), 0, 1, 4);
    test(S("abcde"), 4, 2, S("abcde"), 0, 2, 4);
    test(S("abcde"), 4, 2, S("abcde"), 0, 4, 4);
    test(S("abcde"), 4, 2, S("abcde"), 0, 5, 4);
    test(S("abcde"), 4, 2, S("abcde"), 0, 6, 4);
    test(S("abcde"), 4, 2, S("abcde"), 1, 0, 1);
    test(S("abcde"), 4, 2, S("abcde"), 1, 1, 3);
    test(S("abcde"), 4, 2, S("abcde"), 1, 2, 3);
    test(S("abcde"), 4, 2, S("abcde"), 1, 3, 3);
    test(S("abcde"), 4, 2, S("abcde"), 1, 4, 3);
    test(S("abcde"), 4, 2, S("abcde"), 1, 5, 3);
    test(S("abcde"), 4, 2, S("abcde"), 2, 0, 1);
    test(S("abcde"), 4, 2, S("abcde"), 2, 1, 2);
    test(S("abcde"), 4, 2, S("abcde"), 2, 2, 2);
    test(S("abcde"), 4, 2, S("abcde"), 2, 3, 2);
    test(S("abcde"), 4, 2, S("abcde"), 2, 4, 2);
    test(S("abcde"), 4, 2, S("abcde"), 4, 0, 1);
    test(S("abcde"), 4, 2, S("abcde"), 4, 1, 0);
    test(S("abcde"), 4, 2, S("abcde"), 4, 2, 0);
    test(S("abcde"), 4, 2, S("abcde"), 5, 0, 1);
    test(S("abcde"), 4, 2, S("abcde"), 5, 1, 1);
    test(S("abcde"), 4, 2, S("abcde"), 6, 0, 0);
    test(S("abcde"), 4, 2, S("abcdefghij"), 0, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 0, 1, 4);
    test(S("abcde"), 4, 2, S("abcdefghij"), 0, 5, 4);
    test(S("abcde"), 4, 2, S("abcdefghij"), 0, 9, 4);
    test(S("abcde"), 4, 2, S("abcdefghij"), 0, 10, 4);
    test(S("abcde"), 4, 2, S("abcdefghij"), 0, 11, 4);
    test(S("abcde"), 4, 2, S("abcdefghij"), 1, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 1, 1, 3);
    test(S("abcde"), 4, 2, S("abcdefghij"), 1, 4, 3);
    test(S("abcde"), 4, 2, S("abcdefghij"), 1, 8, 3);
    test(S("abcde"), 4, 2, S("abcdefghij"), 1, 9, 3);
    test(S("abcde"), 4, 2, S("abcdefghij"), 1, 10, 3);
    test(S("abcde"), 4, 2, S("abcdefghij"), 5, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 5, 1, -1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 5, 2, -1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 5, 4, -1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 5, 5, -1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 5, 6, -1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 9, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 9, 1, -5);
    test(S("abcde"), 4, 2, S("abcdefghij"), 9, 2, -5);
    test(S("abcde"), 4, 2, S("abcdefghij"), 10, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 10, 1, 1);
    test(S("abcde"), 4, 2, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 0, 1, 4);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 0, 10, 4);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 0, 19, 4);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 0, 20, 4);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 0, 21, 4);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 1, 1, 3);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 1, 9, 3);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 1, 18, 3);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 1, 19, 3);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 1, 20, 3);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 10, 1, -6);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 10, 5, -6);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 10, 9, -6);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 10, 10, -6);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 10, 11, -6);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 19, 1, -15);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 19, 2, -15);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 20, 0, 1);
}

template <class S>
void test17()
{
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcde"), 4, 2, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 5, 0, S(""), 0, 0, 0);
    test(S("abcde"), 5, 0, S(""), 0, 1, 0);
    test(S("abcde"), 5, 0, S(""), 1, 0, 0);
    test(S("abcde"), 5, 0, S("abcde"), 0, 0, 0);
    test(S("abcde"), 5, 0, S("abcde"), 0, 1, -1);
    test(S("abcde"), 5, 0, S("abcde"), 0, 2, -2);
    test(S("abcde"), 5, 0, S("abcde"), 0, 4, -4);
    test(S("abcde"), 5, 0, S("abcde"), 0, 5, -5);
    test(S("abcde"), 5, 0, S("abcde"), 0, 6, -5);
    test(S("abcde"), 5, 0, S("abcde"), 1, 0, 0);
    test(S("abcde"), 5, 0, S("abcde"), 1, 1, -1);
    test(S("abcde"), 5, 0, S("abcde"), 1, 2, -2);
    test(S("abcde"), 5, 0, S("abcde"), 1, 3, -3);
    test(S("abcde"), 5, 0, S("abcde"), 1, 4, -4);
    test(S("abcde"), 5, 0, S("abcde"), 1, 5, -4);
    test(S("abcde"), 5, 0, S("abcde"), 2, 0, 0);
    test(S("abcde"), 5, 0, S("abcde"), 2, 1, -1);
    test(S("abcde"), 5, 0, S("abcde"), 2, 2, -2);
    test(S("abcde"), 5, 0, S("abcde"), 2, 3, -3);
    test(S("abcde"), 5, 0, S("abcde"), 2, 4, -3);
    test(S("abcde"), 5, 0, S("abcde"), 4, 0, 0);
    test(S("abcde"), 5, 0, S("abcde"), 4, 1, -1);
    test(S("abcde"), 5, 0, S("abcde"), 4, 2, -1);
    test(S("abcde"), 5, 0, S("abcde"), 5, 0, 0);
    test(S("abcde"), 5, 0, S("abcde"), 5, 1, 0);
    test(S("abcde"), 5, 0, S("abcde"), 6, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcde"), 5, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcde"), 5, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcde"), 5, 0, S("abcdefghij"), 0, 11, -10);
    test(S("abcde"), 5, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcde"), 5, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcde"), 5, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcde"), 5, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcde"), 5, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcde"), 5, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcde"), 5, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcde"), 5, 0, S("abcdefghij"), 5, 6, -5);
    test(S("abcde"), 5, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcde"), 5, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcde"), 5, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcde"), 5, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 5, 1, S(""), 0, 0, 0);
    test(S("abcde"), 5, 1, S(""), 0, 1, 0);
    test(S("abcde"), 5, 1, S(""), 1, 0, 0);
    test(S("abcde"), 5, 1, S("abcde"), 0, 0, 0);
    test(S("abcde"), 5, 1, S("abcde"), 0, 1, -1);
    test(S("abcde"), 5, 1, S("abcde"), 0, 2, -2);
    test(S("abcde"), 5, 1, S("abcde"), 0, 4, -4);
    test(S("abcde"), 5, 1, S("abcde"), 0, 5, -5);
    test(S("abcde"), 5, 1, S("abcde"), 0, 6, -5);
    test(S("abcde"), 5, 1, S("abcde"), 1, 0, 0);
    test(S("abcde"), 5, 1, S("abcde"), 1, 1, -1);
    test(S("abcde"), 5, 1, S("abcde"), 1, 2, -2);
    test(S("abcde"), 5, 1, S("abcde"), 1, 3, -3);
    test(S("abcde"), 5, 1, S("abcde"), 1, 4, -4);
    test(S("abcde"), 5, 1, S("abcde"), 1, 5, -4);
    test(S("abcde"), 5, 1, S("abcde"), 2, 0, 0);
    test(S("abcde"), 5, 1, S("abcde"), 2, 1, -1);
    test(S("abcde"), 5, 1, S("abcde"), 2, 2, -2);
    test(S("abcde"), 5, 1, S("abcde"), 2, 3, -3);
    test(S("abcde"), 5, 1, S("abcde"), 2, 4, -3);
    test(S("abcde"), 5, 1, S("abcde"), 4, 0, 0);
    test(S("abcde"), 5, 1, S("abcde"), 4, 1, -1);
    test(S("abcde"), 5, 1, S("abcde"), 4, 2, -1);
    test(S("abcde"), 5, 1, S("abcde"), 5, 0, 0);
}

template <class S>
void test18()
{
    test(S("abcde"), 5, 1, S("abcde"), 5, 1, 0);
    test(S("abcde"), 5, 1, S("abcde"), 6, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghij"), 0, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghij"), 0, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghij"), 0, 5, -5);
    test(S("abcde"), 5, 1, S("abcdefghij"), 0, 9, -9);
    test(S("abcde"), 5, 1, S("abcdefghij"), 0, 10, -10);
    test(S("abcde"), 5, 1, S("abcdefghij"), 0, 11, -10);
    test(S("abcde"), 5, 1, S("abcdefghij"), 1, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghij"), 1, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghij"), 1, 4, -4);
    test(S("abcde"), 5, 1, S("abcdefghij"), 1, 8, -8);
    test(S("abcde"), 5, 1, S("abcdefghij"), 1, 9, -9);
    test(S("abcde"), 5, 1, S("abcdefghij"), 1, 10, -9);
    test(S("abcde"), 5, 1, S("abcdefghij"), 5, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghij"), 5, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghij"), 5, 2, -2);
    test(S("abcde"), 5, 1, S("abcdefghij"), 5, 4, -4);
    test(S("abcde"), 5, 1, S("abcdefghij"), 5, 5, -5);
    test(S("abcde"), 5, 1, S("abcdefghij"), 5, 6, -5);
    test(S("abcde"), 5, 1, S("abcdefghij"), 9, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghij"), 9, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghij"), 9, 2, -1);
    test(S("abcde"), 5, 1, S("abcdefghij"), 10, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghij"), 10, 1, 0);
    test(S("abcde"), 5, 1, S("abcdefghij"), 11, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcde"), 5, 1, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcde"), 6, 0, S(""), 0, 0, 0);
    test(S("abcde"), 6, 0, S(""), 0, 1, 0);
    test(S("abcde"), 6, 0, S(""), 1, 0, 0);
    test(S("abcde"), 6, 0, S("abcde"), 0, 0, 0);
    test(S("abcde"), 6, 0, S("abcde"), 0, 1, 0);
    test(S("abcde"), 6, 0, S("abcde"), 0, 2, 0);
    test(S("abcde"), 6, 0, S("abcde"), 0, 4, 0);
    test(S("abcde"), 6, 0, S("abcde"), 0, 5, 0);
    test(S("abcde"), 6, 0, S("abcde"), 0, 6, 0);
    test(S("abcde"), 6, 0, S("abcde"), 1, 0, 0);
    test(S("abcde"), 6, 0, S("abcde"), 1, 1, 0);
    test(S("abcde"), 6, 0, S("abcde"), 1, 2, 0);
    test(S("abcde"), 6, 0, S("abcde"), 1, 3, 0);
    test(S("abcde"), 6, 0, S("abcde"), 1, 4, 0);
    test(S("abcde"), 6, 0, S("abcde"), 1, 5, 0);
    test(S("abcde"), 6, 0, S("abcde"), 2, 0, 0);
    test(S("abcde"), 6, 0, S("abcde"), 2, 1, 0);
    test(S("abcde"), 6, 0, S("abcde"), 2, 2, 0);
    test(S("abcde"), 6, 0, S("abcde"), 2, 3, 0);
    test(S("abcde"), 6, 0, S("abcde"), 2, 4, 0);
    test(S("abcde"), 6, 0, S("abcde"), 4, 0, 0);
    test(S("abcde"), 6, 0, S("abcde"), 4, 1, 0);
    test(S("abcde"), 6, 0, S("abcde"), 4, 2, 0);
    test(S("abcde"), 6, 0, S("abcde"), 5, 0, 0);
    test(S("abcde"), 6, 0, S("abcde"), 5, 1, 0);
    test(S("abcde"), 6, 0, S("abcde"), 6, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 0, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 0, 5, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 0, 9, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 0, 10, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 0, 11, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 1, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 1, 4, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 1, 8, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 1, 9, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 1, 10, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 5, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 5, 2, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 5, 4, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 5, 5, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 5, 6, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 9, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 9, 2, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghij"), 11, 0, 0);
}

template <class S>
void test19()
{
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 0, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 0, 10, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 0, 19, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 0, 20, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 0, 21, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 1, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 1, 9, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 1, 18, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 1, 19, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 1, 20, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 10, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 10, 5, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 10, 9, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 10, 10, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 10, 11, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 19, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 19, 2, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcde"), 6, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 0, 0, S(""), 0, 0, 0);
    test(S("abcdefghij"), 0, 0, S(""), 0, 1, 0);
    test(S("abcdefghij"), 0, 0, S(""), 1, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcde"), 0, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcde"), 0, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcde"), 0, 2, -2);
    test(S("abcdefghij"), 0, 0, S("abcde"), 0, 4, -4);
    test(S("abcdefghij"), 0, 0, S("abcde"), 0, 5, -5);
    test(S("abcdefghij"), 0, 0, S("abcde"), 0, 6, -5);
    test(S("abcdefghij"), 0, 0, S("abcde"), 1, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcde"), 1, 2, -2);
    test(S("abcdefghij"), 0, 0, S("abcde"), 1, 3, -3);
    test(S("abcdefghij"), 0, 0, S("abcde"), 1, 4, -4);
    test(S("abcdefghij"), 0, 0, S("abcde"), 1, 5, -4);
    test(S("abcdefghij"), 0, 0, S("abcde"), 2, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 0, 0, S("abcde"), 2, 3, -3);
    test(S("abcdefghij"), 0, 0, S("abcde"), 2, 4, -3);
    test(S("abcdefghij"), 0, 0, S("abcde"), 4, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcde"), 4, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcde"), 4, 2, -1);
    test(S("abcdefghij"), 0, 0, S("abcde"), 5, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcde"), 5, 1, 0);
    test(S("abcdefghij"), 0, 0, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 0, 11, -10);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcdefghij"), 0, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 0, 1, S(""), 0, 0, 1);
    test(S("abcdefghij"), 0, 1, S(""), 0, 1, 1);
}

template <class S>
void test20()
{
    test(S("abcdefghij"), 0, 1, S(""), 1, 0, 0);
    test(S("abcdefghij"), 0, 1, S("abcde"), 0, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 0, 1, 0);
    test(S("abcdefghij"), 0, 1, S("abcde"), 0, 2, -1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 0, 4, -3);
    test(S("abcdefghij"), 0, 1, S("abcde"), 0, 5, -4);
    test(S("abcdefghij"), 0, 1, S("abcde"), 0, 6, -4);
    test(S("abcdefghij"), 0, 1, S("abcde"), 1, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 1, 2, -1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 1, 3, -1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 1, 4, -1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 1, 5, -1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 2, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 2, 1, -2);
    test(S("abcdefghij"), 0, 1, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 0, 1, S("abcde"), 2, 3, -2);
    test(S("abcdefghij"), 0, 1, S("abcde"), 2, 4, -2);
    test(S("abcdefghij"), 0, 1, S("abcde"), 4, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 4, 1, -4);
    test(S("abcdefghij"), 0, 1, S("abcde"), 4, 2, -4);
    test(S("abcdefghij"), 0, 1, S("abcde"), 5, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 5, 1, 1);
    test(S("abcdefghij"), 0, 1, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 0, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 0, 1, 0);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 0, 5, -4);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 0, 9, -8);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 0, 10, -9);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 0, 11, -9);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 1, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 1, 4, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 1, 8, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 1, 9, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 1, 10, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 5, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 5, 1, -5);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 5, 2, -5);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 5, 4, -5);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 9, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 9, 1, -9);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 9, 2, -9);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 10, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 10, 1, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 0, 1, 0);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 0, 10, -9);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 0, 19, -18);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 0, 20, -19);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 0, 21, -19);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 1, 9, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 1, 18, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 1, 19, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 1, 20, -1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 10, 1, -10);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 10, 5, -10);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 10, 9, -10);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 19, 1, -19);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 19, 2, -19);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 20, 0, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcdefghij"), 0, 1, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 0, 5, S(""), 0, 0, 5);
    test(S("abcdefghij"), 0, 5, S(""), 0, 1, 5);
    test(S("abcdefghij"), 0, 5, S(""), 1, 0, 0);
    test(S("abcdefghij"), 0, 5, S("abcde"), 0, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcde"), 0, 1, 4);
    test(S("abcdefghij"), 0, 5, S("abcde"), 0, 2, 3);
    test(S("abcdefghij"), 0, 5, S("abcde"), 0, 4, 1);
    test(S("abcdefghij"), 0, 5, S("abcde"), 0, 5, 0);
    test(S("abcdefghij"), 0, 5, S("abcde"), 0, 6, 0);
    test(S("abcdefghij"), 0, 5, S("abcde"), 1, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 0, 5, S("abcde"), 1, 2, -1);
    test(S("abcdefghij"), 0, 5, S("abcde"), 1, 3, -1);
    test(S("abcdefghij"), 0, 5, S("abcde"), 1, 4, -1);
    test(S("abcdefghij"), 0, 5, S("abcde"), 1, 5, -1);
    test(S("abcdefghij"), 0, 5, S("abcde"), 2, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcde"), 2, 1, -2);
    test(S("abcdefghij"), 0, 5, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 0, 5, S("abcde"), 2, 3, -2);
    test(S("abcdefghij"), 0, 5, S("abcde"), 2, 4, -2);
    test(S("abcdefghij"), 0, 5, S("abcde"), 4, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcde"), 4, 1, -4);
    test(S("abcdefghij"), 0, 5, S("abcde"), 4, 2, -4);
    test(S("abcdefghij"), 0, 5, S("abcde"), 5, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcde"), 5, 1, 5);
    test(S("abcdefghij"), 0, 5, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 0, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 0, 1, 4);
}

template <class S>
void test21()
{
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 0, 5, 0);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 0, 9, -4);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 0, 10, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 0, 11, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 1, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 1, 4, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 1, 8, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 1, 9, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 1, 10, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 5, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 5, 1, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 5, 2, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 5, 4, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 9, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 9, 1, -9);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 9, 2, -9);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 10, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 10, 1, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 0, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 0, 1, 4);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 0, 10, -5);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 0, 19, -14);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 0, 20, -15);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 0, 21, -15);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 1, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 1, 9, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 1, 18, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 1, 19, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 1, 20, -1);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 10, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 10, 1, -10);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 10, 5, -10);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 10, 9, -10);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 19, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 19, 1, -19);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 19, 2, -19);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 20, 0, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 20, 1, 5);
    test(S("abcdefghij"), 0, 5, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 0, 9, S(""), 0, 0, 9);
    test(S("abcdefghij"), 0, 9, S(""), 0, 1, 9);
    test(S("abcdefghij"), 0, 9, S(""), 1, 0, 0);
    test(S("abcdefghij"), 0, 9, S("abcde"), 0, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcde"), 0, 1, 8);
    test(S("abcdefghij"), 0, 9, S("abcde"), 0, 2, 7);
    test(S("abcdefghij"), 0, 9, S("abcde"), 0, 4, 5);
    test(S("abcdefghij"), 0, 9, S("abcde"), 0, 5, 4);
    test(S("abcdefghij"), 0, 9, S("abcde"), 0, 6, 4);
    test(S("abcdefghij"), 0, 9, S("abcde"), 1, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 0, 9, S("abcde"), 1, 2, -1);
    test(S("abcdefghij"), 0, 9, S("abcde"), 1, 3, -1);
    test(S("abcdefghij"), 0, 9, S("abcde"), 1, 4, -1);
    test(S("abcdefghij"), 0, 9, S("abcde"), 1, 5, -1);
    test(S("abcdefghij"), 0, 9, S("abcde"), 2, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcde"), 2, 1, -2);
    test(S("abcdefghij"), 0, 9, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 0, 9, S("abcde"), 2, 3, -2);
    test(S("abcdefghij"), 0, 9, S("abcde"), 2, 4, -2);
    test(S("abcdefghij"), 0, 9, S("abcde"), 4, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcde"), 4, 1, -4);
    test(S("abcdefghij"), 0, 9, S("abcde"), 4, 2, -4);
    test(S("abcdefghij"), 0, 9, S("abcde"), 5, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcde"), 5, 1, 9);
    test(S("abcdefghij"), 0, 9, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 0, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 0, 1, 8);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 0, 5, 4);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 0, 9, 0);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 0, 10, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 0, 11, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 1, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 1, 4, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 1, 8, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 1, 9, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 1, 10, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 5, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 5, 1, -5);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 5, 2, -5);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 5, 4, -5);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 9, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 9, 1, -9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 9, 2, -9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 10, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 10, 1, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 0, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 0, 1, 8);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 0, 10, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 0, 19, -10);
}

template <class S>
void test22()
{
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 0, 20, -11);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 0, 21, -11);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 1, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 1, 9, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 1, 18, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 1, 19, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 1, 20, -1);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 10, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 10, 1, -10);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 10, 5, -10);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 10, 9, -10);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 19, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 19, 1, -19);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 19, 2, -19);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 20, 0, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 20, 1, 9);
    test(S("abcdefghij"), 0, 9, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 0, 10, S(""), 0, 0, 10);
    test(S("abcdefghij"), 0, 10, S(""), 0, 1, 10);
    test(S("abcdefghij"), 0, 10, S(""), 1, 0, 0);
    test(S("abcdefghij"), 0, 10, S("abcde"), 0, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcde"), 0, 1, 9);
    test(S("abcdefghij"), 0, 10, S("abcde"), 0, 2, 8);
    test(S("abcdefghij"), 0, 10, S("abcde"), 0, 4, 6);
    test(S("abcdefghij"), 0, 10, S("abcde"), 0, 5, 5);
    test(S("abcdefghij"), 0, 10, S("abcde"), 0, 6, 5);
    test(S("abcdefghij"), 0, 10, S("abcde"), 1, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 0, 10, S("abcde"), 1, 2, -1);
    test(S("abcdefghij"), 0, 10, S("abcde"), 1, 3, -1);
    test(S("abcdefghij"), 0, 10, S("abcde"), 1, 4, -1);
    test(S("abcdefghij"), 0, 10, S("abcde"), 1, 5, -1);
    test(S("abcdefghij"), 0, 10, S("abcde"), 2, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcde"), 2, 1, -2);
    test(S("abcdefghij"), 0, 10, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 0, 10, S("abcde"), 2, 3, -2);
    test(S("abcdefghij"), 0, 10, S("abcde"), 2, 4, -2);
    test(S("abcdefghij"), 0, 10, S("abcde"), 4, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcde"), 4, 1, -4);
    test(S("abcdefghij"), 0, 10, S("abcde"), 4, 2, -4);
    test(S("abcdefghij"), 0, 10, S("abcde"), 5, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcde"), 5, 1, 10);
    test(S("abcdefghij"), 0, 10, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 0, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 0, 1, 9);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 0, 5, 5);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 0, 9, 1);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 0, 10, 0);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 0, 11, 0);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 1, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 1, 4, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 1, 8, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 1, 9, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 1, 10, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 5, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 5, 1, -5);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 5, 2, -5);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 5, 4, -5);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 9, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 9, 1, -9);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 9, 2, -9);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 10, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 10, 1, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 0, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 0, 1, 9);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 0, 10, 0);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 0, 19, -9);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 0, 20, -10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 0, 21, -10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 1, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 1, 9, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 1, 18, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 1, 19, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 1, 20, -1);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 10, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 10, 1, -10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 10, 5, -10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 10, 9, -10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 19, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 19, 1, -19);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 19, 2, -19);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 20, 0, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 20, 1, 10);
    test(S("abcdefghij"), 0, 10, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 0, 11, S(""), 0, 0, 10);
    test(S("abcdefghij"), 0, 11, S(""), 0, 1, 10);
    test(S("abcdefghij"), 0, 11, S(""), 1, 0, 0);
    test(S("abcdefghij"), 0, 11, S("abcde"), 0, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcde"), 0, 1, 9);
    test(S("abcdefghij"), 0, 11, S("abcde"), 0, 2, 8);
}

template <class S>
void test23()
{
    test(S("abcdefghij"), 0, 11, S("abcde"), 0, 4, 6);
    test(S("abcdefghij"), 0, 11, S("abcde"), 0, 5, 5);
    test(S("abcdefghij"), 0, 11, S("abcde"), 0, 6, 5);
    test(S("abcdefghij"), 0, 11, S("abcde"), 1, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 0, 11, S("abcde"), 1, 2, -1);
    test(S("abcdefghij"), 0, 11, S("abcde"), 1, 3, -1);
    test(S("abcdefghij"), 0, 11, S("abcde"), 1, 4, -1);
    test(S("abcdefghij"), 0, 11, S("abcde"), 1, 5, -1);
    test(S("abcdefghij"), 0, 11, S("abcde"), 2, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcde"), 2, 1, -2);
    test(S("abcdefghij"), 0, 11, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 0, 11, S("abcde"), 2, 3, -2);
    test(S("abcdefghij"), 0, 11, S("abcde"), 2, 4, -2);
    test(S("abcdefghij"), 0, 11, S("abcde"), 4, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcde"), 4, 1, -4);
    test(S("abcdefghij"), 0, 11, S("abcde"), 4, 2, -4);
    test(S("abcdefghij"), 0, 11, S("abcde"), 5, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcde"), 5, 1, 10);
    test(S("abcdefghij"), 0, 11, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 0, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 0, 1, 9);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 0, 5, 5);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 0, 9, 1);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 0, 10, 0);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 0, 11, 0);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 1, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 1, 4, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 1, 8, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 1, 9, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 1, 10, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 5, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 5, 1, -5);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 5, 2, -5);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 5, 4, -5);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 9, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 9, 1, -9);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 9, 2, -9);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 10, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 10, 1, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 0, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 0, 1, 9);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 0, 10, 0);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 0, 19, -9);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 0, 20, -10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 0, 21, -10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 1, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 1, 9, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 1, 18, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 1, 19, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 1, 20, -1);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 10, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 10, 1, -10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 10, 5, -10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 10, 9, -10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 19, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 19, 1, -19);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 19, 2, -19);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 20, 0, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 20, 1, 10);
    test(S("abcdefghij"), 0, 11, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 1, 0, S(""), 0, 0, 0);
    test(S("abcdefghij"), 1, 0, S(""), 0, 1, 0);
    test(S("abcdefghij"), 1, 0, S(""), 1, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcde"), 0, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcde"), 0, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcde"), 0, 2, -2);
    test(S("abcdefghij"), 1, 0, S("abcde"), 0, 4, -4);
    test(S("abcdefghij"), 1, 0, S("abcde"), 0, 5, -5);
    test(S("abcdefghij"), 1, 0, S("abcde"), 0, 6, -5);
    test(S("abcdefghij"), 1, 0, S("abcde"), 1, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcde"), 1, 2, -2);
    test(S("abcdefghij"), 1, 0, S("abcde"), 1, 3, -3);
    test(S("abcdefghij"), 1, 0, S("abcde"), 1, 4, -4);
    test(S("abcdefghij"), 1, 0, S("abcde"), 1, 5, -4);
    test(S("abcdefghij"), 1, 0, S("abcde"), 2, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 1, 0, S("abcde"), 2, 3, -3);
    test(S("abcdefghij"), 1, 0, S("abcde"), 2, 4, -3);
    test(S("abcdefghij"), 1, 0, S("abcde"), 4, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcde"), 4, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcde"), 4, 2, -1);
    test(S("abcdefghij"), 1, 0, S("abcde"), 5, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcde"), 5, 1, 0);
    test(S("abcdefghij"), 1, 0, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 0, 11, -10);
}

template <class S>
void test24()
{
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcdefghij"), 1, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 1, 1, S(""), 0, 0, 1);
    test(S("abcdefghij"), 1, 1, S(""), 0, 1, 1);
    test(S("abcdefghij"), 1, 1, S(""), 1, 0, 0);
    test(S("abcdefghij"), 1, 1, S("abcde"), 0, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 0, 1, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 0, 2, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 0, 4, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 0, 5, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 0, 6, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 1, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 1, 1, 0);
    test(S("abcdefghij"), 1, 1, S("abcde"), 1, 2, -1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 1, 3, -2);
    test(S("abcdefghij"), 1, 1, S("abcde"), 1, 4, -3);
    test(S("abcdefghij"), 1, 1, S("abcde"), 1, 5, -3);
    test(S("abcdefghij"), 1, 1, S("abcde"), 2, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 2, 2, -1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 2, 3, -1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 2, 4, -1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 4, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 4, 1, -3);
    test(S("abcdefghij"), 1, 1, S("abcde"), 4, 2, -3);
    test(S("abcdefghij"), 1, 1, S("abcde"), 5, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 5, 1, 1);
    test(S("abcdefghij"), 1, 1, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 0, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 0, 1, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 0, 5, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 0, 9, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 0, 10, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 0, 11, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 1, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 1, 1, 0);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 1, 4, -3);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 1, 8, -7);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 1, 9, -8);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 1, 10, -8);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 5, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 5, 1, -4);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 5, 2, -4);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 5, 5, -4);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 5, 6, -4);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 9, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 9, 1, -8);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 9, 2, -8);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 10, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 10, 1, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 0, 1, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 0, 10, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 0, 19, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 0, 20, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 0, 21, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 1, 1, 0);
}

template <class S>
void test25()
{
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 1, 9, -8);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 1, 18, -17);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 1, 19, -18);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 1, 20, -18);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 10, 1, -9);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 10, 5, -9);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 10, 10, -9);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 10, 11, -9);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 19, 1, -18);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 19, 2, -18);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 20, 0, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcdefghij"), 1, 1, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 1, 4, S(""), 0, 0, 4);
    test(S("abcdefghij"), 1, 4, S(""), 0, 1, 4);
    test(S("abcdefghij"), 1, 4, S(""), 1, 0, 0);
    test(S("abcdefghij"), 1, 4, S("abcde"), 0, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcde"), 0, 1, 1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 0, 2, 1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 0, 4, 1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 0, 5, 1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 0, 6, 1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 1, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcde"), 1, 1, 3);
    test(S("abcdefghij"), 1, 4, S("abcde"), 1, 2, 2);
    test(S("abcdefghij"), 1, 4, S("abcde"), 1, 3, 1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 1, 4, 0);
    test(S("abcdefghij"), 1, 4, S("abcde"), 1, 5, 0);
    test(S("abcdefghij"), 1, 4, S("abcde"), 2, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 2, 2, -1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 2, 3, -1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 2, 4, -1);
    test(S("abcdefghij"), 1, 4, S("abcde"), 4, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcde"), 4, 1, -3);
    test(S("abcdefghij"), 1, 4, S("abcde"), 4, 2, -3);
    test(S("abcdefghij"), 1, 4, S("abcde"), 5, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcde"), 5, 1, 4);
    test(S("abcdefghij"), 1, 4, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 0, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 0, 1, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 0, 5, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 0, 9, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 0, 10, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 0, 11, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 1, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 1, 1, 3);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 1, 4, 0);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 1, 8, -4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 1, 9, -5);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 1, 10, -5);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 5, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 5, 1, -4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 5, 2, -4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 5, 5, -4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 5, 6, -4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 9, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 9, 1, -8);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 9, 2, -8);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 10, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 10, 1, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 0, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 0, 1, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 0, 10, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 0, 19, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 0, 20, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 0, 21, 1);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 1, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 1, 1, 3);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 1, 9, -5);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 1, 18, -14);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 1, 19, -15);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 1, 20, -15);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 10, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 10, 1, -9);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 10, 5, -9);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 10, 10, -9);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 10, 11, -9);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 19, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 19, 1, -18);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 19, 2, -18);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 20, 0, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 20, 1, 4);
    test(S("abcdefghij"), 1, 4, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 1, 8, S(""), 0, 0, 8);
    test(S("abcdefghij"), 1, 8, S(""), 0, 1, 8);
    test(S("abcdefghij"), 1, 8, S(""), 1, 0, 0);
    test(S("abcdefghij"), 1, 8, S("abcde"), 0, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcde"), 0, 1, 1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 0, 2, 1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 0, 4, 1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 0, 5, 1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 0, 6, 1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 1, 0, 8);
}

template <class S>
void test26()
{
    test(S("abcdefghij"), 1, 8, S("abcde"), 1, 1, 7);
    test(S("abcdefghij"), 1, 8, S("abcde"), 1, 2, 6);
    test(S("abcdefghij"), 1, 8, S("abcde"), 1, 3, 5);
    test(S("abcdefghij"), 1, 8, S("abcde"), 1, 4, 4);
    test(S("abcdefghij"), 1, 8, S("abcde"), 1, 5, 4);
    test(S("abcdefghij"), 1, 8, S("abcde"), 2, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 2, 2, -1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 2, 3, -1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 2, 4, -1);
    test(S("abcdefghij"), 1, 8, S("abcde"), 4, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcde"), 4, 1, -3);
    test(S("abcdefghij"), 1, 8, S("abcde"), 4, 2, -3);
    test(S("abcdefghij"), 1, 8, S("abcde"), 5, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcde"), 5, 1, 8);
    test(S("abcdefghij"), 1, 8, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 0, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 0, 1, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 0, 5, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 0, 9, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 0, 10, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 0, 11, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 1, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 1, 1, 7);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 1, 4, 4);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 1, 8, 0);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 1, 9, -1);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 1, 10, -1);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 5, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 5, 1, -4);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 5, 2, -4);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 5, 5, -4);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 5, 6, -4);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 9, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 9, 1, -8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 9, 2, -8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 10, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 10, 1, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 0, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 0, 1, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 0, 10, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 0, 19, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 0, 20, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 0, 21, 1);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 1, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 1, 1, 7);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 1, 9, -1);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 1, 18, -10);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 1, 19, -11);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 1, 20, -11);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 10, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 10, 1, -9);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 10, 5, -9);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 10, 10, -9);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 10, 11, -9);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 19, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 19, 1, -18);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 19, 2, -18);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 20, 0, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 20, 1, 8);
    test(S("abcdefghij"), 1, 8, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 1, 9, S(""), 0, 0, 9);
    test(S("abcdefghij"), 1, 9, S(""), 0, 1, 9);
    test(S("abcdefghij"), 1, 9, S(""), 1, 0, 0);
    test(S("abcdefghij"), 1, 9, S("abcde"), 0, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcde"), 0, 1, 1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 0, 2, 1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 0, 4, 1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 0, 5, 1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 0, 6, 1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 1, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcde"), 1, 1, 8);
    test(S("abcdefghij"), 1, 9, S("abcde"), 1, 2, 7);
    test(S("abcdefghij"), 1, 9, S("abcde"), 1, 3, 6);
    test(S("abcdefghij"), 1, 9, S("abcde"), 1, 4, 5);
    test(S("abcdefghij"), 1, 9, S("abcde"), 1, 5, 5);
    test(S("abcdefghij"), 1, 9, S("abcde"), 2, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 2, 2, -1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 2, 3, -1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 2, 4, -1);
    test(S("abcdefghij"), 1, 9, S("abcde"), 4, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcde"), 4, 1, -3);
    test(S("abcdefghij"), 1, 9, S("abcde"), 4, 2, -3);
    test(S("abcdefghij"), 1, 9, S("abcde"), 5, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcde"), 5, 1, 9);
    test(S("abcdefghij"), 1, 9, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 0, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 0, 1, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 0, 5, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 0, 9, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 0, 10, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 0, 11, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 1, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 1, 1, 8);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 1, 4, 5);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 1, 8, 1);
}

template <class S>
void test27()
{
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 1, 9, 0);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 1, 10, 0);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 5, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 5, 1, -4);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 5, 2, -4);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 5, 5, -4);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 5, 6, -4);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 9, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 9, 1, -8);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 9, 2, -8);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 10, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 10, 1, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 0, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 0, 1, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 0, 10, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 0, 19, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 0, 20, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 0, 21, 1);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 1, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 1, 1, 8);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 1, 9, 0);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 1, 18, -9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 1, 19, -10);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 1, 20, -10);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 10, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 10, 1, -9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 10, 5, -9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 10, 10, -9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 10, 11, -9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 19, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 19, 1, -18);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 19, 2, -18);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 20, 0, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 20, 1, 9);
    test(S("abcdefghij"), 1, 9, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 1, 10, S(""), 0, 0, 9);
    test(S("abcdefghij"), 1, 10, S(""), 0, 1, 9);
    test(S("abcdefghij"), 1, 10, S(""), 1, 0, 0);
    test(S("abcdefghij"), 1, 10, S("abcde"), 0, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcde"), 0, 1, 1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 0, 2, 1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 0, 4, 1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 0, 5, 1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 0, 6, 1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 1, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcde"), 1, 1, 8);
    test(S("abcdefghij"), 1, 10, S("abcde"), 1, 2, 7);
    test(S("abcdefghij"), 1, 10, S("abcde"), 1, 3, 6);
    test(S("abcdefghij"), 1, 10, S("abcde"), 1, 4, 5);
    test(S("abcdefghij"), 1, 10, S("abcde"), 1, 5, 5);
    test(S("abcdefghij"), 1, 10, S("abcde"), 2, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 2, 2, -1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 2, 3, -1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 2, 4, -1);
    test(S("abcdefghij"), 1, 10, S("abcde"), 4, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcde"), 4, 1, -3);
    test(S("abcdefghij"), 1, 10, S("abcde"), 4, 2, -3);
    test(S("abcdefghij"), 1, 10, S("abcde"), 5, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcde"), 5, 1, 9);
    test(S("abcdefghij"), 1, 10, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 0, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 0, 1, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 0, 5, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 0, 9, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 0, 10, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 0, 11, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 1, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 1, 1, 8);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 1, 4, 5);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 1, 8, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 1, 9, 0);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 1, 10, 0);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 5, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 5, 1, -4);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 5, 2, -4);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 5, 5, -4);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 5, 6, -4);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 9, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 9, 1, -8);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 9, 2, -8);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 10, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 10, 1, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 0, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 0, 1, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 0, 10, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 0, 19, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 0, 20, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 0, 21, 1);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 1, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 1, 1, 8);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 1, 9, 0);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 1, 18, -9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 1, 19, -10);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 1, 20, -10);
}

template <class S>
void test28()
{
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 10, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 10, 1, -9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 10, 5, -9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 10, 10, -9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 10, 11, -9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 19, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 19, 1, -18);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 19, 2, -18);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 20, 0, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 20, 1, 9);
    test(S("abcdefghij"), 1, 10, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 5, 0, S(""), 0, 0, 0);
    test(S("abcdefghij"), 5, 0, S(""), 0, 1, 0);
    test(S("abcdefghij"), 5, 0, S(""), 1, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcde"), 0, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcde"), 0, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcde"), 0, 2, -2);
    test(S("abcdefghij"), 5, 0, S("abcde"), 0, 4, -4);
    test(S("abcdefghij"), 5, 0, S("abcde"), 0, 5, -5);
    test(S("abcdefghij"), 5, 0, S("abcde"), 0, 6, -5);
    test(S("abcdefghij"), 5, 0, S("abcde"), 1, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcde"), 1, 2, -2);
    test(S("abcdefghij"), 5, 0, S("abcde"), 1, 3, -3);
    test(S("abcdefghij"), 5, 0, S("abcde"), 1, 4, -4);
    test(S("abcdefghij"), 5, 0, S("abcde"), 1, 5, -4);
    test(S("abcdefghij"), 5, 0, S("abcde"), 2, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 5, 0, S("abcde"), 2, 3, -3);
    test(S("abcdefghij"), 5, 0, S("abcde"), 2, 4, -3);
    test(S("abcdefghij"), 5, 0, S("abcde"), 4, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcde"), 4, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcde"), 4, 2, -1);
    test(S("abcdefghij"), 5, 0, S("abcde"), 5, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcde"), 5, 1, 0);
    test(S("abcdefghij"), 5, 0, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 0, 11, -10);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcdefghij"), 5, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 5, 1, S(""), 0, 0, 1);
    test(S("abcdefghij"), 5, 1, S(""), 0, 1, 1);
    test(S("abcdefghij"), 5, 1, S(""), 1, 0, 0);
    test(S("abcdefghij"), 5, 1, S("abcde"), 0, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 0, 1, 5);
    test(S("abcdefghij"), 5, 1, S("abcde"), 0, 2, 5);
    test(S("abcdefghij"), 5, 1, S("abcde"), 0, 4, 5);
    test(S("abcdefghij"), 5, 1, S("abcde"), 0, 5, 5);
    test(S("abcdefghij"), 5, 1, S("abcde"), 0, 6, 5);
    test(S("abcdefghij"), 5, 1, S("abcde"), 1, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 1, 1, 4);
    test(S("abcdefghij"), 5, 1, S("abcde"), 1, 2, 4);
    test(S("abcdefghij"), 5, 1, S("abcde"), 1, 3, 4);
    test(S("abcdefghij"), 5, 1, S("abcde"), 1, 4, 4);
}

template <class S>
void test29()
{
    test(S("abcdefghij"), 5, 1, S("abcde"), 1, 5, 4);
    test(S("abcdefghij"), 5, 1, S("abcde"), 2, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 2, 1, 3);
    test(S("abcdefghij"), 5, 1, S("abcde"), 2, 2, 3);
    test(S("abcdefghij"), 5, 1, S("abcde"), 2, 3, 3);
    test(S("abcdefghij"), 5, 1, S("abcde"), 2, 4, 3);
    test(S("abcdefghij"), 5, 1, S("abcde"), 4, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 4, 1, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 4, 2, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 5, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 5, 1, 1);
    test(S("abcdefghij"), 5, 1, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 0, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 0, 1, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 0, 5, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 0, 9, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 0, 10, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 0, 11, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 1, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 1, 1, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 1, 4, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 1, 8, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 1, 9, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 1, 10, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 5, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 5, 1, 0);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 5, 2, -1);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 5, 4, -3);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 5, 5, -4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 5, 6, -4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 9, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 9, 1, -4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 9, 2, -4);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 10, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 10, 1, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 0, 1, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 0, 10, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 0, 19, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 0, 20, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 0, 21, 5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 1, 1, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 1, 9, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 1, 18, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 1, 19, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 1, 20, 4);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 10, 1, -5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 10, 9, -5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 10, 10, -5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 10, 11, -5);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 19, 1, -14);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 19, 2, -14);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 20, 0, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcdefghij"), 5, 1, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 5, 2, S(""), 0, 0, 2);
    test(S("abcdefghij"), 5, 2, S(""), 0, 1, 2);
    test(S("abcdefghij"), 5, 2, S(""), 1, 0, 0);
    test(S("abcdefghij"), 5, 2, S("abcde"), 0, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcde"), 0, 1, 5);
    test(S("abcdefghij"), 5, 2, S("abcde"), 0, 2, 5);
    test(S("abcdefghij"), 5, 2, S("abcde"), 0, 4, 5);
    test(S("abcdefghij"), 5, 2, S("abcde"), 0, 5, 5);
    test(S("abcdefghij"), 5, 2, S("abcde"), 0, 6, 5);
    test(S("abcdefghij"), 5, 2, S("abcde"), 1, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcde"), 1, 1, 4);
    test(S("abcdefghij"), 5, 2, S("abcde"), 1, 2, 4);
    test(S("abcdefghij"), 5, 2, S("abcde"), 1, 3, 4);
    test(S("abcdefghij"), 5, 2, S("abcde"), 1, 4, 4);
    test(S("abcdefghij"), 5, 2, S("abcde"), 1, 5, 4);
    test(S("abcdefghij"), 5, 2, S("abcde"), 2, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcde"), 2, 1, 3);
    test(S("abcdefghij"), 5, 2, S("abcde"), 2, 2, 3);
    test(S("abcdefghij"), 5, 2, S("abcde"), 2, 3, 3);
    test(S("abcdefghij"), 5, 2, S("abcde"), 2, 4, 3);
    test(S("abcdefghij"), 5, 2, S("abcde"), 4, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcde"), 4, 1, 1);
    test(S("abcdefghij"), 5, 2, S("abcde"), 4, 2, 1);
    test(S("abcdefghij"), 5, 2, S("abcde"), 5, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcde"), 5, 1, 2);
    test(S("abcdefghij"), 5, 2, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 0, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 0, 1, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 0, 5, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 0, 9, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 0, 10, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 0, 11, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 1, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 1, 1, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 1, 4, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 1, 8, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 1, 9, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 1, 10, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 5, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 5, 1, 1);
}

template <class S>
void test30()
{
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 5, 2, 0);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 5, 4, -2);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 5, 5, -3);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 5, 6, -3);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 9, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 9, 1, -4);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 9, 2, -4);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 10, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 10, 1, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 0, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 0, 1, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 0, 10, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 0, 19, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 0, 20, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 0, 21, 5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 1, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 1, 1, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 1, 9, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 1, 18, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 1, 19, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 1, 20, 4);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 10, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 10, 1, -5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 10, 9, -5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 10, 10, -5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 10, 11, -5);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 19, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 19, 1, -14);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 19, 2, -14);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 20, 0, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 20, 1, 2);
    test(S("abcdefghij"), 5, 2, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 5, 4, S(""), 0, 0, 4);
    test(S("abcdefghij"), 5, 4, S(""), 0, 1, 4);
    test(S("abcdefghij"), 5, 4, S(""), 1, 0, 0);
    test(S("abcdefghij"), 5, 4, S("abcde"), 0, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 0, 1, 5);
    test(S("abcdefghij"), 5, 4, S("abcde"), 0, 2, 5);
    test(S("abcdefghij"), 5, 4, S("abcde"), 0, 4, 5);
    test(S("abcdefghij"), 5, 4, S("abcde"), 0, 5, 5);
    test(S("abcdefghij"), 5, 4, S("abcde"), 0, 6, 5);
    test(S("abcdefghij"), 5, 4, S("abcde"), 1, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 1, 1, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 1, 2, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 1, 3, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 1, 4, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 1, 5, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 2, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 2, 1, 3);
    test(S("abcdefghij"), 5, 4, S("abcde"), 2, 2, 3);
    test(S("abcdefghij"), 5, 4, S("abcde"), 2, 3, 3);
    test(S("abcdefghij"), 5, 4, S("abcde"), 2, 4, 3);
    test(S("abcdefghij"), 5, 4, S("abcde"), 4, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 4, 1, 1);
    test(S("abcdefghij"), 5, 4, S("abcde"), 4, 2, 1);
    test(S("abcdefghij"), 5, 4, S("abcde"), 5, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 5, 1, 4);
    test(S("abcdefghij"), 5, 4, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 0, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 0, 1, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 0, 5, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 0, 9, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 0, 10, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 0, 11, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 1, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 1, 1, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 1, 4, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 1, 8, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 1, 9, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 1, 10, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 5, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 5, 1, 3);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 5, 2, 2);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 5, 4, 0);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 5, 5, -1);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 5, 6, -1);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 9, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 9, 1, -4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 9, 2, -4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 10, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 10, 1, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 0, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 0, 1, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 0, 10, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 0, 19, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 0, 20, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 0, 21, 5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 1, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 1, 1, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 1, 9, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 1, 18, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 1, 19, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 1, 20, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 10, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 10, 1, -5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 10, 9, -5);
}

template <class S>
void test31()
{
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 10, 10, -5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 10, 11, -5);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 19, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 19, 1, -14);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 19, 2, -14);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 20, 0, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 20, 1, 4);
    test(S("abcdefghij"), 5, 4, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 5, 5, S(""), 0, 0, 5);
    test(S("abcdefghij"), 5, 5, S(""), 0, 1, 5);
    test(S("abcdefghij"), 5, 5, S(""), 1, 0, 0);
    test(S("abcdefghij"), 5, 5, S("abcde"), 0, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 0, 1, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 0, 2, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 0, 4, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 0, 5, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 0, 6, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 1, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 1, 1, 4);
    test(S("abcdefghij"), 5, 5, S("abcde"), 1, 2, 4);
    test(S("abcdefghij"), 5, 5, S("abcde"), 1, 3, 4);
    test(S("abcdefghij"), 5, 5, S("abcde"), 1, 4, 4);
    test(S("abcdefghij"), 5, 5, S("abcde"), 1, 5, 4);
    test(S("abcdefghij"), 5, 5, S("abcde"), 2, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 2, 1, 3);
    test(S("abcdefghij"), 5, 5, S("abcde"), 2, 2, 3);
    test(S("abcdefghij"), 5, 5, S("abcde"), 2, 3, 3);
    test(S("abcdefghij"), 5, 5, S("abcde"), 2, 4, 3);
    test(S("abcdefghij"), 5, 5, S("abcde"), 4, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 4, 1, 1);
    test(S("abcdefghij"), 5, 5, S("abcde"), 4, 2, 1);
    test(S("abcdefghij"), 5, 5, S("abcde"), 5, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 5, 1, 5);
    test(S("abcdefghij"), 5, 5, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 0, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 0, 1, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 0, 5, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 0, 9, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 0, 10, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 0, 11, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 1, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 1, 1, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 1, 4, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 1, 8, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 1, 9, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 1, 10, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 5, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 5, 1, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 5, 2, 3);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 5, 4, 1);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 5, 5, 0);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 5, 6, 0);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 9, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 9, 1, -4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 9, 2, -4);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 10, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 10, 1, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 0, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 0, 1, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 0, 10, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 0, 19, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 0, 20, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 0, 21, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 1, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 1, 1, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 1, 9, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 1, 18, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 1, 19, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 1, 20, 4);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 10, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 10, 1, -5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 10, 9, -5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 10, 10, -5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 10, 11, -5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 19, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 19, 1, -14);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 19, 2, -14);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 20, 0, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 20, 1, 5);
    test(S("abcdefghij"), 5, 5, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 5, 6, S(""), 0, 0, 5);
    test(S("abcdefghij"), 5, 6, S(""), 0, 1, 5);
    test(S("abcdefghij"), 5, 6, S(""), 1, 0, 0);
    test(S("abcdefghij"), 5, 6, S("abcde"), 0, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 0, 1, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 0, 2, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 0, 4, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 0, 5, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 0, 6, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 1, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 1, 1, 4);
    test(S("abcdefghij"), 5, 6, S("abcde"), 1, 2, 4);
    test(S("abcdefghij"), 5, 6, S("abcde"), 1, 3, 4);
    test(S("abcdefghij"), 5, 6, S("abcde"), 1, 4, 4);
    test(S("abcdefghij"), 5, 6, S("abcde"), 1, 5, 4);
    test(S("abcdefghij"), 5, 6, S("abcde"), 2, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 2, 1, 3);
    test(S("abcdefghij"), 5, 6, S("abcde"), 2, 2, 3);
}

template <class S>
void test32()
{
    test(S("abcdefghij"), 5, 6, S("abcde"), 2, 3, 3);
    test(S("abcdefghij"), 5, 6, S("abcde"), 2, 4, 3);
    test(S("abcdefghij"), 5, 6, S("abcde"), 4, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 4, 1, 1);
    test(S("abcdefghij"), 5, 6, S("abcde"), 4, 2, 1);
    test(S("abcdefghij"), 5, 6, S("abcde"), 5, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 5, 1, 5);
    test(S("abcdefghij"), 5, 6, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 0, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 0, 1, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 0, 5, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 0, 9, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 0, 10, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 0, 11, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 1, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 1, 1, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 1, 4, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 1, 8, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 1, 9, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 1, 10, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 5, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 5, 1, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 5, 2, 3);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 5, 4, 1);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 5, 5, 0);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 5, 6, 0);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 9, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 9, 1, -4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 9, 2, -4);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 10, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 10, 1, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 0, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 0, 1, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 0, 10, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 0, 19, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 0, 20, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 0, 21, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 1, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 1, 1, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 1, 9, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 1, 18, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 1, 19, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 1, 20, 4);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 10, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 10, 1, -5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 10, 9, -5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 10, 10, -5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 10, 11, -5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 19, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 19, 1, -14);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 19, 2, -14);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 20, 0, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 20, 1, 5);
    test(S("abcdefghij"), 5, 6, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 9, 0, S(""), 0, 0, 0);
    test(S("abcdefghij"), 9, 0, S(""), 0, 1, 0);
    test(S("abcdefghij"), 9, 0, S(""), 1, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcde"), 0, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcde"), 0, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcde"), 0, 2, -2);
    test(S("abcdefghij"), 9, 0, S("abcde"), 0, 4, -4);
    test(S("abcdefghij"), 9, 0, S("abcde"), 0, 5, -5);
    test(S("abcdefghij"), 9, 0, S("abcde"), 0, 6, -5);
    test(S("abcdefghij"), 9, 0, S("abcde"), 1, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcde"), 1, 2, -2);
    test(S("abcdefghij"), 9, 0, S("abcde"), 1, 3, -3);
    test(S("abcdefghij"), 9, 0, S("abcde"), 1, 4, -4);
    test(S("abcdefghij"), 9, 0, S("abcde"), 1, 5, -4);
    test(S("abcdefghij"), 9, 0, S("abcde"), 2, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 9, 0, S("abcde"), 2, 3, -3);
    test(S("abcdefghij"), 9, 0, S("abcde"), 2, 4, -3);
    test(S("abcdefghij"), 9, 0, S("abcde"), 4, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcde"), 4, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcde"), 4, 2, -1);
    test(S("abcdefghij"), 9, 0, S("abcde"), 5, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcde"), 5, 1, 0);
    test(S("abcdefghij"), 9, 0, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 0, 11, -10);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 5, 6, -5);
}

template <class S>
void test33()
{
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 1, 19, -19);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 1, 20, -19);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 10, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 10, 5, -5);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 10, 9, -9);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 10, 10, -10);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 10, 11, -10);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 19, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 19, 1, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 19, 2, -1);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 20, 0, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 20, 1, 0);
    test(S("abcdefghij"), 9, 0, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 9, 1, S(""), 0, 0, 1);
    test(S("abcdefghij"), 9, 1, S(""), 0, 1, 1);
    test(S("abcdefghij"), 9, 1, S(""), 1, 0, 0);
    test(S("abcdefghij"), 9, 1, S("abcde"), 0, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcde"), 0, 1, 9);
    test(S("abcdefghij"), 9, 1, S("abcde"), 0, 2, 9);
    test(S("abcdefghij"), 9, 1, S("abcde"), 0, 4, 9);
    test(S("abcdefghij"), 9, 1, S("abcde"), 0, 5, 9);
    test(S("abcdefghij"), 9, 1, S("abcde"), 0, 6, 9);
    test(S("abcdefghij"), 9, 1, S("abcde"), 1, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcde"), 1, 1, 8);
    test(S("abcdefghij"), 9, 1, S("abcde"), 1, 2, 8);
    test(S("abcdefghij"), 9, 1, S("abcde"), 1, 3, 8);
    test(S("abcdefghij"), 9, 1, S("abcde"), 1, 4, 8);
    test(S("abcdefghij"), 9, 1, S("abcde"), 1, 5, 8);
    test(S("abcdefghij"), 9, 1, S("abcde"), 2, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcde"), 2, 1, 7);
    test(S("abcdefghij"), 9, 1, S("abcde"), 2, 2, 7);
    test(S("abcdefghij"), 9, 1, S("abcde"), 2, 3, 7);
    test(S("abcdefghij"), 9, 1, S("abcde"), 2, 4, 7);
    test(S("abcdefghij"), 9, 1, S("abcde"), 4, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcde"), 4, 1, 5);
    test(S("abcdefghij"), 9, 1, S("abcde"), 4, 2, 5);
    test(S("abcdefghij"), 9, 1, S("abcde"), 5, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcde"), 5, 1, 1);
    test(S("abcdefghij"), 9, 1, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 0, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 0, 1, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 0, 5, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 0, 9, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 0, 10, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 0, 11, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 1, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 1, 1, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 1, 4, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 1, 8, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 1, 9, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 1, 10, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 5, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 5, 1, 4);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 5, 2, 4);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 5, 4, 4);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 5, 5, 4);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 5, 6, 4);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 9, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 9, 1, 0);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 9, 2, 0);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 10, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 10, 1, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 0, 1, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 0, 10, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 0, 19, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 0, 20, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 0, 21, 9);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 1, 1, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 1, 9, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 1, 18, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 1, 19, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 1, 20, 8);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 10, 5, -1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 10, 9, -1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 10, 10, -1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 10, 11, -1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 19, 1, -10);
}

template <class S>
void test34()
{
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 19, 2, -10);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 20, 0, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcdefghij"), 9, 1, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 9, 2, S(""), 0, 0, 1);
    test(S("abcdefghij"), 9, 2, S(""), 0, 1, 1);
    test(S("abcdefghij"), 9, 2, S(""), 1, 0, 0);
    test(S("abcdefghij"), 9, 2, S("abcde"), 0, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcde"), 0, 1, 9);
    test(S("abcdefghij"), 9, 2, S("abcde"), 0, 2, 9);
    test(S("abcdefghij"), 9, 2, S("abcde"), 0, 4, 9);
    test(S("abcdefghij"), 9, 2, S("abcde"), 0, 5, 9);
    test(S("abcdefghij"), 9, 2, S("abcde"), 0, 6, 9);
    test(S("abcdefghij"), 9, 2, S("abcde"), 1, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcde"), 1, 1, 8);
    test(S("abcdefghij"), 9, 2, S("abcde"), 1, 2, 8);
    test(S("abcdefghij"), 9, 2, S("abcde"), 1, 3, 8);
    test(S("abcdefghij"), 9, 2, S("abcde"), 1, 4, 8);
    test(S("abcdefghij"), 9, 2, S("abcde"), 1, 5, 8);
    test(S("abcdefghij"), 9, 2, S("abcde"), 2, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcde"), 2, 1, 7);
    test(S("abcdefghij"), 9, 2, S("abcde"), 2, 2, 7);
    test(S("abcdefghij"), 9, 2, S("abcde"), 2, 3, 7);
    test(S("abcdefghij"), 9, 2, S("abcde"), 2, 4, 7);
    test(S("abcdefghij"), 9, 2, S("abcde"), 4, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcde"), 4, 1, 5);
    test(S("abcdefghij"), 9, 2, S("abcde"), 4, 2, 5);
    test(S("abcdefghij"), 9, 2, S("abcde"), 5, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcde"), 5, 1, 1);
    test(S("abcdefghij"), 9, 2, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 0, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 0, 1, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 0, 5, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 0, 9, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 0, 10, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 0, 11, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 1, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 1, 1, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 1, 4, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 1, 8, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 1, 9, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 1, 10, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 5, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 5, 1, 4);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 5, 2, 4);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 5, 4, 4);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 5, 5, 4);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 5, 6, 4);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 9, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 9, 1, 0);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 9, 2, 0);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 10, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 10, 1, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 0, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 0, 1, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 0, 10, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 0, 19, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 0, 20, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 0, 21, 9);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 1, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 1, 1, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 1, 9, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 1, 18, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 1, 19, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 1, 20, 8);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 10, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 10, 1, -1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 10, 5, -1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 10, 9, -1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 10, 10, -1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 10, 11, -1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 19, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 19, 1, -10);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 19, 2, -10);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 20, 0, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 20, 1, 1);
    test(S("abcdefghij"), 9, 2, S("abcdefghijklmnopqrst"), 21, 0, 0);
    test(S("abcdefghij"), 10, 0, S(""), 0, 0, 0);
    test(S("abcdefghij"), 10, 0, S(""), 0, 1, 0);
    test(S("abcdefghij"), 10, 0, S(""), 1, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcde"), 0, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcde"), 0, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcde"), 0, 2, -2);
    test(S("abcdefghij"), 10, 0, S("abcde"), 0, 4, -4);
    test(S("abcdefghij"), 10, 0, S("abcde"), 0, 5, -5);
    test(S("abcdefghij"), 10, 0, S("abcde"), 0, 6, -5);
    test(S("abcdefghij"), 10, 0, S("abcde"), 1, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcde"), 1, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcde"), 1, 2, -2);
    test(S("abcdefghij"), 10, 0, S("abcde"), 1, 3, -3);
    test(S("abcdefghij"), 10, 0, S("abcde"), 1, 4, -4);
    test(S("abcdefghij"), 10, 0, S("abcde"), 1, 5, -4);
    test(S("abcdefghij"), 10, 0, S("abcde"), 2, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcde"), 2, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcde"), 2, 2, -2);
    test(S("abcdefghij"), 10, 0, S("abcde"), 2, 3, -3);
    test(S("abcdefghij"), 10, 0, S("abcde"), 2, 4, -3);
    test(S("abcdefghij"), 10, 0, S("abcde"), 4, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcde"), 4, 1, -1);
}

template <class S>
void test35()
{
    test(S("abcdefghij"), 10, 0, S("abcde"), 4, 2, -1);
    test(S("abcdefghij"), 10, 0, S("abcde"), 5, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcde"), 5, 1, 0);
    test(S("abcdefghij"), 10, 0, S("abcde"), 6, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 0, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 0, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 0, 5, -5);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 0, 9, -9);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 0, 10, -10);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 0, 11, -10);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 1, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 1, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 1, 4, -4);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 1, 8, -8);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 1, 9, -9);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 1, 10, -9);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 5, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 5, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 5, 2, -2);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 5, 4, -4);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 5, 5, -5);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 5, 6, -5);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 9, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 9, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 9, 2, -1);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 10, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 10, 1, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghij"), 11, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 0, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 0, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 0, 10, -10);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 0, 19, -19);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 0, 20, -20);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 0, 21, -20);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 1, 0, 0);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 1, 1, -1);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 1, 9, -9);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklmnopqrst"), 1, 18, -18);
    test(S("abcdefghij"), 10, 0, S("abcdefghijklm