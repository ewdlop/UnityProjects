//------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All rights reserved.
//------------------------------------------------------------

namespace System.ServiceModel.Channels
{
    using System;
    using System.Collections.Generic;
    using System.ServiceModel;

    abstract class ContextInputChannelBase<TChannel> : LayeredChannel<TChannel> where TChannel : class, IInputChannel
    {
        ContextExchangeMechanism contextExchangeMechanism;
        ServiceContextProtocol contextProtocol;

        protected ContextInputChannelBase(ChannelManagerBase channelManager, TChannel innerChannel, ContextExchangeMechanism contextExchangeMechanism)
            : base(channelManager, innerChannel)
        {
            this.contextExchangeMechanism = contextExchangeMechanism;
            this.contextProtocol = new ServiceContextProtocol(contextExchangeMechanism);
        }

        public EndpointAddress LocalAddress
        {
            get { return this.InnerChannel.LocalAddress; }
        }

        public IAsyncResult BeginReceive(TimeSpan timeout, AsyncCallback callback, object state)
        {
            return this.InnerChannel.BeginReceive(timeout, callback, state);
        }

        public IAsyncResult BeginReceive(AsyncC