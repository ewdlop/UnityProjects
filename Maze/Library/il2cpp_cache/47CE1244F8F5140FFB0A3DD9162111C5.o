 }
        }
        
        
        //-----------------------------------------------
        // IXmlNamespaceResolver
        //-----------------------------------------------

        public override XmlNameTable NameTable {
            get { return new NameTable(); }
        }

        public override bool MoveToFirstChild() {
            return false;
        }

        public override void MoveToRoot() {
            //always on root
            return;
        }        

        public override bool MoveToNext() {
            return false;
        }

        public override bool MoveToPrevious() {
            return false;
        }
        
        public override bool MoveToFirst() {
            return false;
        }

        public override bool MoveToFirstAttribute() {
            return false;
        }

        public override bool MoveToNextAttribute() {
            return false;
        }

        public override bool MoveToId(string id) {
            return false;
        }

        public override string GetAttribute(string localName, string namespaceName) {
            return null;
        }

        public override bool MoveToAttribute(string localName, string namespaceName) {
            return false;
        }

        public override string GetNamespace( string name ) {
            return null;
        }

        public override bool MoveToNamespace( string prefix ) {
            return false;
        }
        
        
        public override bool MoveToFirstNamespace(XPathNamespaceScope scope) {
            return false;
        }

        public override bool MoveToNextNamespace(XPathNamespaceScope scope) {
            return false;
        }

        public override bool MoveToParent() {
            return false;
        }

        public override bool MoveTo(XPathNavigator other) {
            // Only one instance of XmlEmptyNavigator exists on the system
            return (object) this == (object) other;
        }

        public override XmlNodeOrder ComparePosition(XPathNavigator other) {
            // Only one instance of XmlEmptyNavigator exists on the system
            return ((object) this == (object) other) ? XmlNodeOrder.Same : XmlNodeOrder.Unknown;
        }
        
        public override bool IsSamePosition(XPathNavigator other) {
            // Only one instance of XmlEmptyNavigator exists on the system
            return (object) this == (object) other;
        }


        //-----------------------------------------------
        // XPathNavigator2
        //-----------------------------------------------
        public override XPathNavigator Clone() {
            // Singleton, so clone 