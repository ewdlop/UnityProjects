//------------------------------------------------------------------------------
// <copyright file="ConstNode.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
// <owner current="true" primary="true">Microsoft</owner>
// <owner current="true" primary="false">Microsoft</owner>
// <owner current="false" primary="false">Microsoft</owner>
//------------------------------------------------------------------------------

namespace System.Data {
    using System;
    using System.Diagnostics;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Globalization;

    internal sealed class ConstNode : ExpressionNode {
        internal readonly object val;

        internal ConstNode(DataTable table, ValueType type, object constant) : this(table, type, constant, true) {
        }

        internal ConstNode(DataTable table, ValueType type, object constant, bool fParseQuotes) : base(table) {
            switch (type) {
                case ValueType.Null:
                    this.val = DBNull.Value;
                    break;

                case ValueType.Numeric:
                    this.val = SmallestNumeric(constant);
                    break;
                case ValueType.Decimal:
                    this.val = SmallestDecimal(constant);
                    break;
                case ValueType.Float:
                    this.val = Convert.ToDouble(constant, NumberFormatInfo.InvariantInfo);
                    break;

                case ValueType.Bool:
                    this.val = Convert.ToBoolean(constant, CultureInfo.InvariantCulture);
                    break;

                case ValueType.Str:
                    if (fParseQuotes) {
                        // replace '' with one '
                        this.val = ((string)constant).Replace("''", "'");
                    }
                    else {
                        this.val = (string)constant;
                    }
                    break;

                case ValueType.Date:
                    this.val = DateTime.Parse((string)constant, CultureInfo.InvariantCulture);
                    break;

                case ValueType.Object:
                    this.val = constant;
                    break;

                default:
                    Debug.Assert(false, "NYI");
                    goto case ValueType.Object;
            }
        }

        internal override void Bind(DataTable table, List<DataColumn> list) {
            BindTable(table);
        }

        internal override object Eval() {
            return val;
        }

        internal override object Eval(DataRow row, 