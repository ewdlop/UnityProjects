rd="true" />, then 
          <paramref name="path" /> exists and <paramref name="stat" /> contains
          valid information.  Otherwise, <paramref name="path" /> is assumed to
          not exist and <paramref name="stat" /> is assumed to contain invalid
          information.
        </returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemEntry">
      <MemberSignature Language="C#" Value="public static Mono.Unix.UnixFileSystemInfo GetFileSystemEntry (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Mono.Unix.UnixFileSystemInfo GetFileSystemEntry(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Unix.UnixFileSystemInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inode">
      <MemberSignature Language="C#" Value="public long Inode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Inode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the inode of this file system entry.</summary>
        <value>A <see cref="T:System.Int64" /> containing the inode of this
          file system entry.</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_ino" />
        <altmember cref="F:Mono.Unix.Native.System.stat" />
      </Docs>
    </Member>
    <Member MemberName="IsBlockDevice">
      <MemberSignature Language="C#" Value="public bool IsBlockDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlockDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> a 
          <see cref="F:Mono.Unix.FileTypes.BlockDevice" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> is a 
          <see cref="F:Mono.Unix.FileTypes.BlockDevice" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileType" /> to 
            <see cref="F:Mono.Unix.FileTypes.BlockDevice" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsCharacterDevice">
      <MemberSignature Language="C#" Value="public bool IsCharacterDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCharacterDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> a 
          <see cref="F:Mono.Unix.FileTypes.CharacterDevice" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> is a 
          <see cref="F:Mono.Unix.FileTypes.CharacterDevice" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileType" /> to 
            <see cref="F:Mono.Unix.FileTypes.CharacterDevice" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> a 
          <see cref="F:Mono.Unix.FileTypes.Directory" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> is a 
          <see cref="F:Mono.Unix.FileTypes.Directory" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileType" /> to 
            <see cref="F:Mono.Unix.FileTypes.Directory" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsFifo">
      <MemberSignature Language="C#" Value="public bool IsFifo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFifo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> a 
          <see cref="F:Mono.Unix.FileTypes.Fifo" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> is a 
          <see cref="F:Mono.Unix.FileTypes.Fifo" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileType" /> to 
            <see cref="F:Mono.Unix.FileTypes.Fifo" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsRegularFile">
      <MemberSignature Language="C#" Value="public bool IsRegularFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegularFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> a 
          <see cref="F:Mono.Unix.FileTypes.RegularFile" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> is a 
          <see cref="F:Mono.Unix.FileTypes.RegularFile" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileType" /> to 
            <see cref="F:Mono.Unix.FileTypes.RegularFile" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSetGroup">
      <MemberSignature Language="C#" Value="public bool IsSetGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSetGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Does
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> include
          <see cref="F:Mono.Unix.FileSpecialAttributes.SetGroupId" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> includes
          <see cref="F:Mono.Unix.FileSpecialAttributes.SetGroupId" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> with
            <see cref="F:Mono.Unix.FileSpecialAttributes.SetGroupId" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSetUser">
      <MemberSignature Language="C#" Value="public bool IsSetUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSetUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Does
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> include
          <see cref="F:Mono.Unix.FileSpecialAttributes.SetUserId" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> includes
          <see cref="F:Mono.Unix.FileSpecialAttributes.SetUserId" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> with
            <see cref="F:Mono.Unix.FileSpecialAttributes.SetUserId" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSocket">
      <MemberSignature Language="C#" Value="public bool IsSocket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> a 
          <see cref="F:Mono.Unix.FileTypes.Socket" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> is a 
          <see cref="F:Mono.Unix.FileTypes.Socket" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileType" /> to 
            <see cref="F:Mono.Unix.FileTypes.Socket" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSticky">
      <MemberSignature Language="C#" Value="public bool IsSticky { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSticky" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Does
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> include
          <see cref="F:Mono.Unix.FileSpecialAttributes.Sticky" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> includes
          <see cref="F:Mono.Unix.FileSpecialAttributes.Sticky" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileSpecialAttributes" /> with
            <see cref="F:Mono.Unix.FileSpecialAttributes.Sticky" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSymbolicLink">
      <MemberSignature Language="C#" Value="public bool IsSymbolicLink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSymbolicLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> a 
          <see cref="F:Mono.Unix.FileTypes.SymbolicLink" />?</summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether or not 
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> is a 
          <see cref="F:Mono.Unix.FileTypes.SymbolicLink" />.
        </value>
        <remarks>
          <para>This is equivalent to comparing 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FileType" /> to 
            <see cref="F:Mono.Unix.FileTypes.SymbolicLink" />.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LastAccessTime">
      <MemberSignature Language="C#" Value="public DateTime LastAccessTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastAccessTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the last file access time expressed in local
        time.</summary>
        <value>The last access time of 
        <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
        expressed in the local time.</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_atime" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="LastAccessTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime LastAccessTimeUtc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastAccessTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the last file access time expressed in
        coordinated universal time (UTC).</summary>
        <value>The last access time of 
        <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
        expressed in coordinated universal time (UTC).</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_atime" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="LastStatusChangeTime">
      <MemberSignature Language="C#" Value="public DateTime LastStatusChangeTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastStatusChangeTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the last status change time expressed in local
        time.</summary>
        <value>The last status change time of 
        <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
        expressed in the local time.</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_ctime" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="LastStatusChangeTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime LastStatusChangeTimeUtc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastStatusChangeTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the last status change time expressed in
        coordinated universal time (UTC).</summary>
        <value>The last status change time of 
        <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
        expressed in coordinated universal time (UTC).</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_ctime" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="LastWriteTime">
      <MemberSignature Language="C#" Value="public DateTime LastWriteTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWriteTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the last file write time expressed in local
        time.</summary>
        <value>The last write time of 
        <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
        expressed in the local time.</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_mtime" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="LastWriteTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime LastWriteTimeUtc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastWriteTimeUtc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the last file write time expressed in
        coordinated universal time (UTC).</summary>
        <value>The last write time of 
        <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
        expressed in coordinated universal time (UTC).</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_mtime" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the file system entry size, in bytes.</summary>
        <value>A <see cref="T:System.Int64" /> containing the size of this file
          system entry, in bytes.</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_size" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="LinkCount">
      <MemberSignature Language="C#" Value="public long LinkCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LinkCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current link count of this file system entry.</summary>
        <value>A <see cref="T:System.Int64" /> containing link count of this
          file system entry.</value>
        <remarks>
          <para>A link count is the number of file system entries that share
            this <see cref="P:Mono.Unix.UnixFileSystemInfo.Inode" />.
          </para>
          <para>
            Use 
            <see cref="M:Mono.Unix.UnixFileSystemInfo.GetConfigurationValue" />(<see cref="M:Mono.Unix.Native.PathconfName._PC_LINK_MAX" />) 
            to determine the maximum link count.
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The file system entry name.</summary>
        <value>A <see cref="T:System.String" /> containing the file system
          entry name.  
        </value>
        <remarks>
          <para>
            This will generally be 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> without the 
            directory name.
          </para>
        </remarks>
        <altmember cref="M:Mono.Unix.UnixPath.GetFileName" />
        <altmember cref="M:Mono.Unix.UnixPath.GetDirectoryName" />
      </Docs>
    </Member>
    <Member MemberName="OriginalPath">
      <MemberSignature Language="C#" Value="protected string OriginalPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The original string passed to the 
          <see cref="C:Mono.Unix.UnixFileSystemInfo(System.String)" />
          constructor.</summary>
        <value>A <see cref="T:System.String" /> containing 
          the original string passed to the 
          <see cref="C:Mono.Unix.UnixFileSystemInfo(System.String)" />
          constructor.  It may contain relative path information without a
          qualifying directory, if that's what was originally provided to the
          constructor.
        </value>
        <remarks>
          <para>This is primarily useful if you need relative path names
            instead of fully-qualified directory names, such as when dealing
            with symbolic links (with 
            <see cref="T:Mono.Unix.UnixSymbolicLinkInfo" />).
          </para>
          <para>It is possible for the object state to be inconsistent if 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FullPath" /> is set but
            not <see cref="P:Mono.Unix.UnixFileSystemInfo.OriginalPath" />.
            All methods in this class do not use <c>OriginalPath</c> but use
            <c>FullPath</c>; subclasses such as 
            <see cref="T:Mono.Unix.UnixSymbolicLinkInfo" /> do use
            <c>OriginalPath</c>.  If <c>FullPath</c> is set then
            <c>OriginalPath</c> should also be set if possible for
            consistency.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerGroup">
      <MemberSignature Language="C#" Value="public Mono.Unix.UnixGroupInfo OwnerGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.Unix.UnixGroupInfo OwnerGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Unix.UnixGroupInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about the owner group.</summary>
        <value>A <see cref="T:Mono.Unix.UnixGroupInfo" /> instance containing
          information about the owner group.</value>
        <remarks>
          <para>This is identical to <see cref="C:Mono.Unix.UnixGroupInfo" />(<see cref="P:Mono.Unix.UnixFileSystemInfo.OwnerGroupId" />).
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_gid" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="OwnerGroupId">
      <MemberSignature Language="C#" Value="public long OwnerGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OwnerGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the owner group id.</summary>
        <value>A <see cref="T:System.Int64" /> containing the owner group id.</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_gid" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="OwnerUser">
      <MemberSignature Language="C#" Value="public Mono.Unix.UnixUserInfo OwnerUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Mono.Unix.UnixUserInfo OwnerUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Unix.UnixUserInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about the owner user.</summary>
        <value>A <see cref="T:Mono.Unix.UnixUserInfo" /> containing information
          about the owner user.</value>
        <remarks>
          <para>This is identical to <see cref="C:Mono.Unix.UnixUserInfo" />(<see cref="P:Mono.Unix.UnixFileSystemInfo.OwnerUserId" />).
          </para>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_uid" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="OwnerUserId">
      <MemberSignature Language="C#" Value="public long OwnerUserId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OwnerUserId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the owner user id.</summary>
        <value>
          A <see cref="T:System.Int64" /> containing the owner user id.
        </value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_uid" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Mono.Unix.Native.FilePermissions Protection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Mono.Unix.Native.FilePermissions Protection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Mono.Unix.Native.FilePermissions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the file system entry protection.</summary>
        <value>A <see cref="T:Mono.Unix.Native.FilePermissions" /> value
          containing the file system entry protection.</value>
        <remarks>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" /> doesn't exist.
        </exception>
        <altmember cref="F:Mono.Unix.Native.Stat.st_mode" />
        <altmember cref="F:Mono.Unix.Native.Syscall.stat" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Refreshes the file system metadata presented.</summary>
        <remarks>
          <para>This method does not throw exceptions.</para>
          <para>
            Many pro