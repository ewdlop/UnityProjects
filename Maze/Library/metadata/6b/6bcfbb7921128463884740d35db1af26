
        }

        override public  Single GetFloat (int ordinal) {
            ValidateState("GetFloat");
            ValidateReader();
            try {
                return (Single) currentDataRow[ordinal];
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange("ordinal");
            }
        }

        override public  Guid GetGuid (int ordinal) {
            ValidateState("GetGuid");
            ValidateReader();
            try {
                return (Guid) currentDataRow[ordinal];
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange("ordinal");
            }
        }

        override public  Int16 GetInt16 (int ordinal) {
            ValidateState("GetInt16");
            ValidateReader();
            try {
                return (Int16) currentDataRow[ordinal];
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange("ordinal");
            }
        }

        override public Int32 GetInt32 (int ordinal) {
            ValidateState("GetInt32");
            ValidateReader();
            try {
                return (Int32) currentDataRow[ordinal];
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange("ordinal");
            }
        }

        override public  Int64 GetInt64 (int ordinal) {
            ValidateState("GetInt64");
            ValidateReader();
            try {
                return (Int64) currentDataRow[ordinal];
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange("ordinal");
            }
        }

        override public  String GetName (int ordinal) {
            ValidateOpen("GetName");
            ValidateReader();
            try {
                return (currentDataTable.Columns[ordinal].ColumnName);
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange("ordinal");
            }
        }

        override public  Int32 GetOrdinal (string name) {
            ValidateOpen("GetOrdinal");
            ValidateReader();
            DataColumn dc = currentDataTable.Columns[name];

            if (dc != null) {
                return dc.Ordinal;// WebData 113248
            }
            else{
                throw ExceptionBuilder.ColumnNotInTheTable(name, currentDataTable.TableName);
            }
        }

        override public  string GetString (int ordinal) {
            ValidateState("GetString");
            ValidateReader();
            try {
                return (string) currentDataRow[ordinal];
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange("ordinal");
            }
        }


        override public  object GetValue (int ordinal) {
            ValidateState("GetValue");
            ValidateReader();
            try {
                return currentDataRow[ordinal];
            }
            catch(IndexOutOfRangeException e) { // thrown by DataColumnCollection
                ExceptionBuilder.TraceExceptionWithoutRethrow(e);                
                throw ExceptionBuilder.ArgumentOutOfRange(