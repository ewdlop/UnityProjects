// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

[assembly:System.Reflection.AssemblyVersionAttribute("2.0.0.0")]
[assembly:System.CLSCompliantAttribute(true)]
[assembly:System.Diagnostics.DebuggableAttribute((System.Diagnostics.DebuggableAttribute.DebuggingModes)(2))]
[assembly:System.Reflection.AssemblyCompanyAttribute("Mono development team")]
[assembly:System.Reflection.AssemblyCopyrightAttribute("(c) Various Mono authors")]
[assembly:System.Reflection.AssemblyDefaultAliasAttribute("System.Drawing.dll")]
[assembly:System.Reflection.AssemblyDescriptionAttribute("System.Drawing.dll")]
[assembly:System.Reflection.AssemblyFileVersionAttribute("2.0.50727.1433")]
[assembly:System.Reflection.AssemblyInformationalVersionAttribute("2.0.50727.1433")]
[assembly:System.Reflection.AssemblyProductAttribute("Mono Common Language Infrastructure")]
[assembly:System.Reflection.AssemblyTitleAttribute("System.Drawing.dll")]
[assembly:System.Resources.NeutralResourcesLanguageAttribute("en-US")]
[assembly:System.Resources.SatelliteContractVersionAttribute("2.0.0.0")]
[assembly:System.Runtime.CompilerServices.CompilationRelaxationsAttribute((System.Runtime.CompilerServices.CompilationRelaxations)(8))]
[assembly:System.Runtime.CompilerServices.DependencyAttribute("System,", (System.Runtime.CompilerServices.LoadHint)(1))]
[assembly:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute(WrapNonExceptionThrows=true)]
[assembly:System.Runtime.InteropServices.ComCompatibleVersionAttribute(1, 0, 3300, 0)]
[assembly:System.Runtime.InteropServices.ComVisibleAttribute(false)]
[assembly:System.Security.AllowPartiallyTrustedCallersAttribute]
[assembly:System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.RequestMinimum, SkipVerification=true)]
namespace System
{
    [System.AttributeUsageAttribute((System.AttributeTargets)(32767), AllowMultiple=true)]
    internal partial class MonoDocumentationNoteAttribute : System.MonoTODOAttribute
    {
        public MonoDocumentationNoteAttribute(string comment) { }
    }
    [System.AttributeUsageAttribute((System.AttributeTargets)(32767), AllowMultiple=true)]
    internal partial class MonoExtensionAttribute : System.MonoTODOAttribute
    {
        public MonoExtensionAttribute(string comment) { }
    }
    [System.AttributeUsageAttribute((System.AttributeTargets)(32767), AllowMultiple=true)]
    internal partial class MonoInternalNoteAttribute : System.MonoTODOAttribute
    {
        public MonoInternalNoteAttribute(string comment) { }
    }
    [System.AttributeUsageAttribute((System.AttributeTargets)(32767), AllowMultiple=true)]
    internal partial class MonoLimitationAttribute : System.MonoTODOAttribute
    {
        public MonoLimitationAttribute(string comment) { }
    }
    [System.AttributeUsageAttribute((System.AttributeTargets)(32767), AllowMultiple=true)]
    internal partial class MonoNotSupportedAttribute : System.MonoTODOAttribute
    {
        public MonoNotSupportedAttribute(string comment) { }
    }
    [System.AttributeUsageAttribute((System.AttributeTargets)(32767), AllowMultiple=true)]
    internal partial class MonoTODOAttribute : System.Attribute
    {
        public MonoTODOAttribute() { }
        public MonoTODOAttribute(string comment) { }
        public string Comment { get { throw null; } }
    }
}
namespace System.Drawing
{
    [System.ComponentModel.EditorAttribute("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    [System.SerializableAttribute]
    public sealed partial class Bitmap : System.Drawing.Image
    {
        public Bitmap(System.Drawing.Image original) { }
        public Bitmap(System.Drawing.Image original, System.Drawing.Size newSize) { }
        public Bitmap(System.Drawing.Image original, int width, int height) { }
        public Bitmap(int width, int height) { }
        public Bitmap(int width, int height, System.Drawing.Graphics g) { }
        public Bitmap(int width, int height, System.Drawing.Imaging.PixelFormat format) { }
        public Bitmap(int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, System.IntPtr scan0) { }
        public Bitmap(System.IO.Stream stream) { }
        public Bitmap(System.IO.Stream stream, bool useIcm) { }
        public Bitmap(string filename) { }
        public Bitmap(string filename, bool useIcm) { }
        public Bitmap(System.Type type, string resource) { }
        public System.Drawing.Bitmap Clone(System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format) { throw null; }
        public System.Drawing.Bitmap Clone(System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format) { throw null; }
        public static System.Drawing.Bitmap FromHicon(System.IntPtr hicon) { throw null; }
        public static System.Drawing.Bitmap FromResource(System.IntPtr hinstance, string bitmapName) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute((System.ComponentModel.EditorBrowsableState)(2))]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, UnmanagedCode=true)]
        public System.IntPtr GetHbitmap() { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute((System.ComponentModel.EditorBrowsableState)(2))]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, UnmanagedCode=true)]
        public System.IntPtr GetHbitmap(System.Drawing.Color background) { throw null; }
        [System.ComponentModel.EditorBrowsableAttribute((System.ComponentModel.EditorBrowsableState)(2))]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.LinkDemand, UnmanagedCode=true)]
        public System.IntPtr GetHicon() { throw null; }
        public System.Drawing.Color GetPixel(int x, int y) { throw null; }
        public System.Drawing.Imaging.BitmapData LockBits(System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format) { throw null; }
        public System.Drawing.Imaging.BitmapData LockBits(System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData) { throw null; }
        public void MakeTransparent() { }
        public void MakeTransparent(System.Drawing.Color transparentColor) { }
        public void SetPixel(int x, int y, System.Drawing.Color color) { }
        public void SetResolution(float xDpi, float yDpi) { }
        public void UnlockBits(System.Drawing.Imaging.BitmapData bitmapdata) { }
    }
    public abstract partial class Brush : System.MarshalByRefObject, System.ICloneable, System.IDisposable
    {
        protected Brush() { }
        public abstract object Clone();
        public void Dispose() { }
        protected virtual void Dispose(bool disposing) { }
        ~Brush() { }
        protected internal void SetNativeBrush(System.IntPtr brush) { }
    }
    public sealed partial class Brushes
    {
        internal Brushes() { }
        public static System.Drawing.Brush AliceBlue { get { throw null; } }
        public static System.Drawing.Brush AntiqueWhite { get { throw null; } }
        public static System.Drawing.Brush Aqua { get { throw null; } }
        public static System.Drawing.Brush Aquamarine { get { throw null; } }
        public static System.Drawing.Brush Azure { get { throw null; } }
        public static System.Drawing.Brush Beige { get { throw null; } }
        public static System.Drawing.Brush Bisque { get { throw null; } }
        public static System.Drawing.Brush Black { get { throw null; } }
        public static System.Drawing.Brush BlanchedAlmond { get { throw null; } }
        public static System.Drawing.Brush Blue { get { throw null; } }
        public static System.Drawing.Brush BlueViolet { get { throw null; } }
        public static System.Drawing.Brush Brown { get { throw null; } }
        public static System.Drawing.Brush BurlyWood { get { throw null; } }
        public static System.Drawing.Brush CadetBlue { get { throw null; } }
        public static System.Drawing.Brush Chartreuse { get { throw null; } }
        public static System.Drawing.Brush Chocolate { get { throw null; } }
        public static System.Drawing.Brush Coral { get { throw null; } }
        public static System.Drawing.Brush CornflowerBlue { get { throw null; } }
        public static System.Drawing.Brush Cornsilk { get { throw null; } }
        public static System.Drawing.Brush Crimson { get { throw null; } }
        public static System.Drawing.Brush Cyan { get { throw null; } }
        public static System.Drawing.Brush DarkBlue { get { throw null; } }
        public static System.Drawing.Brush DarkCyan { get { throw null; } }
        public static System.Drawing.Brush DarkGoldenrod { get { throw null; } }
        public static System.Drawing.Brush DarkGray { get { throw null; } }
        public static System.Drawing.Brush DarkGreen { get { throw null; } }
        public static System.Drawing.Brush DarkKhaki { get { throw null; } }
        public static System.Drawing.Brush DarkMagenta { get { throw null; } }
        public static System.Drawing.Brush DarkOliveGreen { get { throw null; } }
        public static System.Drawing.Brush DarkOrange { get { throw null; } }
        public static System.Drawing.Brush DarkOrchid { get { throw null; } }
        public static System.Drawing.Brush DarkRed { get { throw null; } }
        public static System.Drawing.Brush DarkSalmon { get { throw null; } }
        public static System.Drawing.Brush DarkSeaGreen { get { throw null; } }
        public static System.Drawing.Brush DarkSlateBlue { get { throw null; } }
        public static System.Drawing.Brush DarkSlateGray { get { throw null; } }
        public static System.Drawing.Brush DarkTurquoise { get { throw null; } }
        public static System.Drawing.Brush DarkViolet { get { throw null; } }
        public static System.Drawing.Brush DeepPink { get { throw null; } }
        public static System.Drawing.Brush DeepSkyBlue { get { throw null; } }
        public static System.Drawing.Brush DimGray { get { throw null; } }
        public static System.Drawing.Brush DodgerBlue { get { throw null; } }
        public static System.Drawing.Brush Firebrick { get { throw null; } }
        public static System.Drawing.Brush FloralWhite { get { throw null; } }
        public static System.Drawing.Brush ForestGreen { get { throw null; } }
        public static System.Drawing.Brush Fuchsia { get { throw null; } }
        public static System.Drawing.Brush Gainsboro { get { throw null; } }
        public static System.Drawing.Brush GhostWhite { get { throw null; } }
        public static System.Drawing.Brush Gold { get { throw null; } }
        public static System.Drawing.Brush Goldenrod { get { throw null; } }
        public static System.Drawing.Brush Gray { get { throw null; } }
        public static System.Drawing.Brush Green { get { throw null; } }
        public static System.Drawing.Brush GreenYellow { get { throw null; } }
        public static System.Drawing.Brush Honeydew { get { throw null; } }
        public static System.Drawing.Brush HotPink { get { throw null; } }
        public static System.Drawing.Brush IndianRed { get { throw null; } }
        public static System.Drawing.Brush Indigo { get { throw null; } }
        public static System.Drawing.Brush Ivory { get { throw null; } }
        public static System.Drawing.Brush Khaki { get { throw null; } }
        public static System.Drawing.Brush Lavender { get { throw null; } }
        public static System.Drawing.Brush LavenderBlush { get { throw null; } }
        public static System.Drawing.Brush LawnGreen { get { throw null; } }
        public static System.Drawing.Brush LemonChiffon { get { throw null; } }
        public static System.Drawing.Brush LightBlue { get { throw null; } }
        public static System.Drawing.Brush LightCoral { get { throw null; } }
        public static System.Drawing.Brush LightCyan { get { throw null; } }
        public static System.Drawing.Brush LightGoldenrodYellow { get { throw null; } }
        public static System.Drawing.Brush LightGray { get { throw null; } }
        public static System.Drawing.Brush LightGreen { get { throw null; } }
        public static System.Drawing.Brush LightPink { get { throw null; } }
        public static System.Drawing.Brush LightSalmon { get { throw null; } }
        public static System.Drawing.Brush LightSeaGreen { get { throw null; } }
        public static System.Drawing.Brush LightSkyBlue { get { throw null; } }
        public static System.Drawing.Brush LightSlateGray { get { throw null; } }
        public static System.Drawing.Brush LightSteelBlue { get { throw null; } }
        public static System.Drawing.Brush LightYellow { get { throw null; } }
        public static System.Drawing.Brush Lime { get { throw null; } }
        public static System.Drawing.Brush LimeGreen { get { throw null; } }
        public static System.Drawing.Brush Linen { get { throw null; } }
        public static System.Drawing.Brush Magenta { get { throw null; } }
        public static System.Drawing.Brush Maroon { get { throw null; } }
        public static System.Drawing.Brush MediumAquamarine { get { throw null; } }
        public static System.Drawing.Brush MediumBlue { get { throw null; } }
        public static System.Drawing.Brush MediumOrchid { get { throw null; } }
        public static System.Drawing.Brush MediumPurple { get { throw null; } }
        public static System.Drawing.Brush MediumSeaGreen { get { throw null; } }
        public static System.Drawing.Brush MediumSlateBlue { get { throw null; } }
        public static System.Drawing.Brush MediumSpringGreen { get { throw null; } }
        public static System.Drawing.Brush MediumTurquoise { get { throw null; } }
        public static System.Drawing.Brush MediumVioletRed { get { throw null; } }
        public static System.Drawing.Brush MidnightBlue { get { throw null; } }
        public static System.Drawing.Brush MintCream { get { throw null; } }
        public static System.Drawing.Brush MistyRose { get { throw null; } }
        public static System.Drawing.Brush Moccasin { get { throw null; } }
        public static System.Drawing.Brush NavajoWhite { get { throw null; } }
        public static System.Drawing.Brush Navy { get { throw null; } }
        public static System.Drawing.Brush OldLace { get { throw null; } }
        public static System.Drawing.Brush Olive { get { throw null; } }
        public static System.Drawing.Brush OliveDrab { get { throw null; } }
        public static System.Drawing.Brush Orange { get { throw null; } }
        public static System.Drawing.Brush OrangeRed { get { throw null; } }
        public static System.Drawing.Brush Orchid { get { throw null; } }
        public static System.Drawing.Brush PaleGoldenrod { get { throw null; } }
        public static System.Drawing.Brush PaleGreen { get { throw null; } }
        public static System.Drawing.Brush PaleTurquoise { get { throw null; } }
        public static System.Drawing.Brush PaleVioletRed { get { throw null; } }
        public static System.Drawing.Brush PapayaWhip { get { throw null; } }
        public static System.Drawing.Brush PeachPuff { get { throw null; } }
        public static System.Drawing.Brush Peru { get { throw null; } }
        public static System.Drawing.Brush Pink { get { throw null; } }
        public static System.Drawing.Brush Plum { get { throw null; } }
        public static System.Drawing.Brush PowderBlue { get { throw null; } }
        public static System.Drawing.Brush Purple { get { throw null; } }
        public static System.Drawing.Brush Red { get { throw null; } }
        public static System.Drawing.Brush RosyBrown { get { throw null; } }
        public static System.Drawing.Brush RoyalBlue { get { throw null; } }
        public static System.Drawing.Brush SaddleBrown { get { throw null; } }
        public static System.Drawing.Brush Salmon { get { throw null; } }
        public static System.Drawing.Brush SandyBrown { get { throw null; } }
        public static System.Drawing.Brush SeaGreen { get { throw null; } }
        public static System.Drawing.Brush SeaShell { get { throw null; } }
        public static System.Drawing.Brush Sienna { get { throw null; } }
        public static System.Drawing.Brush Silver { get { throw null; } }
        public static System.Drawing.Brush SkyBlue { get { throw null; } }
        public static System.Drawing.Brush SlateBlue { get { throw null; } }
        public static System.Drawing.Brush SlateGray { get { throw null; } }
        public static System.Drawing.Brush Snow { get { throw null; } }
        public static System.Drawing.Brush SpringGreen { get { throw null; } }
        public static System.Drawing.Brush SteelBlue { get { throw null; } }
        public static System.Drawing.Brush Tan { get { throw null; } }
        public static System.Drawing.Brush Teal { get { throw null; } }
        public static System.Drawing.Brush Thistle { get { throw null; } }
        public static System.Drawing.Brush Tomato { get { throw null; } }
        public static System.Drawing.Brush Transparent { get { throw null; } }
        public static System.Drawing.Brush Turquoise { get { throw null; } }
        public static System.Drawing.Brush Violet { get { throw null; } }
        public static System.Drawing.Brush Wheat { get { throw null; } }
        public static System.Drawing.Brush White { get { throw null; } }
        public static System.Drawing.Brush WhiteSmoke { get { throw null; } }
        public static System.Drawing.Brush Yellow { get { throw null; } }
        public static System.Drawing.Brush YellowGreen { get { throw null; } }
    }
    public sealed partial class BufferedGraphics : System.IDisposable
    {
        internal BufferedGraphics() { }
        public System.Drawing.Graphics Graphics { get { throw null; } }
        public void Dispose() { }
        ~BufferedGraphics() { }
        public void Render() { }
        public void Render(System.Drawing.Graphics target) { }
        [System.MonoTODOAttribute("The targetDC parameter has no equivalent in libgdiplus.")]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public void Render(System.IntPtr targetDC) { }
    }
    public sealed partial class BufferedGraphicsContext : System.IDisposable
    {
        public BufferedGraphicsContext() { }
        public System.Drawing.Size MaximumBuffer { get { throw null; } set { } }
        public System.Drawing.BufferedGraphics Allocate(System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle) { throw null; }
        [System.MonoTODOAttribute("The targetDC parameter has no equivalent in libgdiplus.")]
        [System.Security.Permissions.SecurityPermissionAttribute(System.Security.Permissions.SecurityAction.Demand, UnmanagedCode=true)]
        public System.Drawing.BufferedGraphics Allocate(System.IntPtr targetDC, System.Drawing.Rectangle targetRectangle) { throw null; }
        public void Dispose() { }
        ~BufferedGraphicsContext() { }
        public void Invalidate() { }
    }
    public sealed partial class BufferedGraphicsManager
    {
        internal BufferedGraphicsManager() { }
        public static System.Drawing.BufferedGraphicsContext Current { get { throw null; } }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public partial struct CharacterRange
    {
        public CharacterRange(int First, int Length) { throw null;}
        public int First { get { throw null; } set { } }
        public int Length { get { throw null; } set { } }
        public override bool Equals(object obj) { throw null; }
        public override int GetHashCode() { throw null; }
        public static bool operator ==(System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2) { throw null; }
        public static bool operator !=(System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2) { throw null; }
    }
    [System.ComponentModel.EditorAttribute("System.Drawing.Design.ColorEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.Drawing.ColorConverter))]
    [System.SerializableAttribute]
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public partial struct Color
    {
        public static readonly System.Drawing.Color Empty;
        public byte A { get { throw null; } }
        public static System.Drawing.Color AliceBlue { get { throw null; } }
        public static System.Drawing.Color AntiqueWhite { get { throw null; } }
        public static System.Drawing.Color Aqua { get { throw null; } }
        public static System.Drawing.Color Aquamarine { get { throw null; } }
        public static System.Drawing.Color Azure { get { throw null; } }
        public byte B { get { throw null; } }
        public static System.Drawing.Color Beige { get { throw null; } }
        public static System.Drawing.Color Bisque { get { throw null; } }
        public static System.Drawing.Color Black { get { throw null; } }
        public static System.Drawing.Color BlanchedAlmond { get { throw null; } }
        public static System.Drawing.Color Blue { get { throw null; } }
        public static System.Drawing.Color BlueViolet { get { throw null; } }
        public static System.Drawing.Color Brown { get { throw null; } }
        public static System.Drawing.Color BurlyWood { get { throw null; } }
        public static System.Drawing.Color CadetBlue { get { throw null; } }
        public static System.Drawing.Color Chartreuse { get { throw null; } }
        public static System.Drawing.Color Chocolate { get { throw null; } }
        public static System.Drawing.Color Coral { get { throw null; } }
        public static System.Drawing.Color CornflowerBlue { get { throw null; } }
        public static System.Drawing.Color Cornsilk { get { throw null; } }
        public static System.Drawing.Color Crimson { get { throw null; } }
        public static System.Drawing.Color Cyan { get { throw null; } }
        public static System.Drawing.Color DarkBlue { get { throw null; } }
        public static System.Drawing.Color DarkCyan { get { throw null; } }
        public static System.Drawing.Color DarkGoldenrod { get { throw null; } }
        public static System.Drawing.Color DarkGray { get { throw null; } }
        public static System.Drawing.Color DarkGreen { get { throw null; } }
        public static System.Drawing.Color DarkKhaki { get { throw null; } }
        public static System.Drawing.Color DarkMagenta { get { throw null; } }
        public static System.Drawing.Color DarkOliveGreen { get { throw null; } }
        public static System.Drawing.Color DarkOrange { get { throw null; } }
        public static System.Drawing.Color DarkOrchid { get { throw null; } }
        public static System.Drawing.Color DarkRed { get { throw null; } }
        public static System.Drawing.Color DarkSalmon { get { throw null; } }
        public static System.Drawing.Color DarkSeaGreen { get { throw null; } }
        public static System.Drawing.Color DarkSlateBlue { get { throw null; } }
        public static System.Drawing.Color DarkSlateGray { get { throw null; } }
        public static System.Drawing.Color DarkTurquoise { get { throw null; } }
        public static System.Drawing.Color DarkViolet { get { throw null; } }
        public static System.Drawing.Color DeepPink { get { throw null; } }
        public static System.Drawing.Color DeepSkyBlue { get { throw null; } }
        public static System.Drawing.Color DimGray { get { throw null; } }
        public static System.Drawing.Color DodgerBlue { get { throw null; } }
        public static System.Drawing.Color Firebrick { get { throw null; } }
        public static System.Drawing.Color FloralWhite { get { throw null; } }
        public static System.Drawing.Color ForestGreen { get { throw null; } }
        public static System.Drawing.Color Fuchsia { get { throw null; } }
        public byte G { get { throw null; } }
        public static System.Drawing.Color Gainsboro { get { throw null; } }
        public static System.Drawing.Color GhostWhite { get { throw null; } }
        public static System.Drawing.Color Gold { get { throw null; } }
        public static System.Drawing.Color Goldenrod { get { throw null; } }
        public static System.Drawing.Color Gray { get { throw null; } }
        public static System.Drawing.Color Green { get { throw null; } }
        public static System.Drawing.Color GreenYellow { get { throw null; } }
        public static System.Drawing.Color Honeydew { get { throw null; } }
        public static System.Drawing.Color HotPink { get { throw null; } }
        public static System.Drawing.Color IndianRed { get { throw null; } }
        public static System.Drawing.Color Indigo { get { throw null; } }
        public bool IsEmpty { get { throw null; } }
        public bool IsKnownColor { get { throw null; } }
        public bool IsNamedColor { get { throw null; } }
        public bool IsSystemColor { get { throw null; } }
        public static System.Drawing.Color Ivory { get { throw null; } }
        public static System.Drawing.Color Khaki { get { throw null; } }
        public static System.Drawing.Color Lavender { get { throw null; } }
        public static System.Drawing.Color LavenderBlush { get { throw null; } }
        public static System.Drawing.Color LawnGreen { get { throw null; } }
        public static System.Drawing.Color LemonChiffon { get { throw null; } }
        public static System.Drawing.Color LightBlue { get { throw null; } }
        public static System.Drawing.Color LightCoral { get { throw null; } }
        public static System.Drawing.Color LightCyan { get { throw null; } }
        public static System.Drawing.Color LightGoldenrodYellow { get { throw null; } }
        public static System.Drawing.Color LightGray { get { throw null; } }
        public static System.Drawing.Color LightGreen { get { throw null; } }
        public static System.Drawing.Color LightPink { get { throw null; } }
        public static System.Drawing.Color LightSalmon { get { throw null; } }
        public static System.Drawing.Color LightSeaGreen { get { throw null; } }
        public static System.Drawing.Color LightSkyBlue { get { throw null; } }
        public static System.Drawing.Color LightSlateGray { get { throw null; } }
        public static System.Drawing.Color LightSteelBlue { get { throw null; } }
        public static System.Drawing.Color LightYellow { get { throw null; } }
        public static System.Drawing.Color Lime { get { throw null; } }
        public static System.Drawing.Color LimeGreen { get { throw null; } }
        public static System.Drawing.Color Linen { get { throw null; } }
        public static System.Drawing.Color Magenta { get { throw null; } }
        public static System.Drawing.Color Maroon { get { throw null; } }
        public static System.Drawing.Color MediumAquamarine { get { throw null; } }
        public static System.Drawing.Color MediumBlue { get { throw null; } }
        public static System.Drawing.Color MediumOrchid { get { throw null; } }
        public static System.Drawing.Color MediumPurple { get { throw null; } }
        public static System.Drawing.Color MediumSeaGreen { get { throw null; } }
        public static System.Drawing.Color MediumSlateBlue { get { throw null; } }
        public static System.Drawing.Color MediumSpringGreen { get { throw null; } }
        public static System.Drawing.Color MediumTurquoise { get { throw null; } }
        public static System.Drawing.Color MediumVioletRed { get { throw null; } }
        public static System.Drawing.Color MidnightBlue { get { throw null; } }
        public static System.Drawing.Color MintCream { get { throw null; } }
        public static System.Drawing.Color MistyRose { get { throw null; } }
        public static System.Drawing.Color Moccasin { get { throw null; } }
        public string Name { get { throw null; } }
        public static System.Drawing.Color NavajoWhite { get { throw null; } }
        public static System.Drawing.Color Navy { get { throw null; } }
        public static System.Drawing.Color OldLace { get { throw null; } }
        public static System.Drawing.Color Olive { get { throw null; } }
        public static System.Drawing.Color OliveDrab { get { throw null; } }
        public static System.Drawing.Color Orange { get { throw null; } }
        public static System.Drawing.Color OrangeRed { get { throw null; } }
        public static System.Drawing.Color Orchid { get { throw null; } }
        public static System.Drawing.Color PaleGoldenrod { get { throw null; } }
        public static System.Drawing.Color PaleGreen { get { throw null; } }
        public static System.Drawing.Color PaleTurquoise { get { throw null; } }
        public static System.Drawing.Color PaleVioletRed { get { throw null; } }
        public static System.Drawing.Color PapayaWhip { get { throw null; } }
        public static System.Drawing.Color PeachPuff { get { throw null; } }
        public static System.Drawing.Color Peru { get { throw null; } }
        public static System.Drawing.Color Pink { get { throw null; } }
        public static System.Drawing.Color Plum { get { throw null; } }
        public static System.Drawing.Color PowderBlue { get { throw null; } }
        public static System.Drawing.Color Purple { get { throw null; } }
        public byte R { get { throw null; } }
        public static System.Drawing.Color Red { get { throw null; } }
        public static System.Drawing.Color RosyBrown { get { throw null; } }
        public static System.Drawing.Color RoyalBlue { get { throw null; } }
        public static System.Drawing.Color SaddleBrown { get { throw null; } }
        public static System.Drawing.Color Salmon { get { throw null; } }
        public static System.Drawing.Color SandyBrown { get { throw null; } }
        public static System.Drawing.Color SeaGreen { get { throw null; } }
        public static System.Drawing.Color SeaShell { get { throw null; } }
        public static System.Drawing.Color Sienna { get { throw null; } }
        public static System.Drawing.Color Silver { get { throw null; } }
        public static System.Drawing.Color SkyBlue { get { throw null; } }
        public static System.Drawing.Color SlateBlue { get { throw null; } }
        public static System.Drawing.Color SlateGray { get { throw null; } }
        public static System.Drawing.Color Snow { get { throw null; } }
        public static System.Drawing.Color SpringGreen { get { throw null; } }
        public static System.Drawing.Color SteelBlue { get { throw null; } }
        public static System.Drawing.Color Tan { get { throw null; } }
        public static System.Drawing.Color Teal { get { throw null; } }
        public static System.Drawing.Color Thistle { get { throw null; } }
        public static System.Drawing.Color Tomato { get { throw null; } }
        public static System.Drawing.Color Transparent { get { throw null; } }
        public static System.Drawing.Color Turquoise { get { throw null; } }
        public static System.Drawing.Color Violet { get { throw null; } }
        public static System.Drawing.Color Wheat { get { throw null; } }
        public static System.Drawing.Color White { get { throw null; } }
        public static System.Drawing.Color WhiteSmoke { get { throw null; } }
        public static System.Drawing.Color Yellow { get { throw null; } }
        public static System.Drawing.Color YellowGreen { get { throw null; } }
        public override bool Equals(object obj) { throw null; }
        public static System.Drawing.Color FromArgb(int argb) { throw null; }
        public static System.Drawing.Color FromArgb(int alpha, System.Drawing.Color baseColor) { throw null; }
        public static System.Drawing.Color FromArgb(int red, int green, int blue) { throw null; }
        public static System.Drawing.Color FromArgb(int alpha, int red, int green, int blue) { throw null; }
        public static System.Drawing.Color FromKnownColor(System.Drawing.KnownColor color) { throw null; }
        public static System.Drawing.Color FromName(string name) { throw null; }
        public float GetBrightness() { throw null; }
        public override int GetHashCode() { throw null; }
        public float GetHue() { throw null; }
        public float GetSaturation() { throw null; }
        public static bool operator ==(System.Drawing.Color left, System.Drawing.Color right) { throw null; }
        public static bool operator !=(System.Drawing.Color left, System.Drawing.Color right) { throw null; }
        public int ToArgb() { throw null; }
        public System.Drawing.KnownColor ToKnownColor() { throw null; }
        public override string ToString() { throw null; }
    }
    public partial class ColorConverter : System.ComponentModel.TypeConverter
    {
        public ColorConverter() { }
        public override bool CanConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType) { throw null; }
        public override bool CanConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType) { throw null; }
        public override object ConvertFrom(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value) { throw null; }
        public override object ConvertTo(System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, System.Type destinationType) { throw null; }
        public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
        public override bool GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext context) { throw null; }
    }
    public sealed partial class ColorTranslator
    {
        internal ColorTranslator() { }
        public static System.Drawing.Color FromHtml(string htmlColor) { throw null; }
        public static System.Drawing.Color FromOle(int oleColor) { throw null; }
        public static System.Drawing.Color FromWin32(int win32Color) { throw null; }
        public static string ToHtml(System.Drawing.Color c) { throw null; }
        public static int ToOle(System.Drawing.Color c) { throw null; }
        public static int ToWin32(System.Drawing.Color c) { throw null; }
    }
    [System.ComponentModel.EditorAttribute("System.Drawing.Design.ContentAlignmentEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    public enum ContentAlignment
    {
        BottomCenter = 512,
        BottomLeft = 256,
        BottomRight = 1024,
        MiddleCenter = 32,
        MiddleLeft = 16,
        MiddleRight = 64,
        TopCenter = 2,
        TopLeft = 1,
        TopRight = 4,
    }
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    public enum CopyPixelOperation
    {
        Blackness = 66,
        CaptureBlt = 1073741824,
        DestinationInvert = 5570569,
        MergeCopy = 12583114,
        MergePaint = 12255782,
        NoMirrorBitmap = -2147483648,
        NotSourceCopy = 3342344,
        NotSourceErase = 1114278,
        PatCopy = 15728673,
        PatInvert = 5898313,
        PatPaint = 16452105,
        SourceAnd = 8913094,
        SourceCopy = 13369376,
        SourceErase = 4457256,
        SourceInvert = 6684742,
        SourcePaint = 15597702,
        Whiteness = 16711778,
    }
    [System.ComponentModel.EditorAttribute("System.Drawing.Design.FontEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]
    [System.ComponentModel.TypeConverterAttribute(typeof(System.Drawing.FontConverter))]
    [System.Runtime.InteropServices.ComVisibleAttribute(true)]
    [System.SerializableAttribute]
    public sealed partial class Font : System.MarshalByRefObject, System.ICloneable, System.IDisposable, System.Runtime.Serialization.ISerializable
    {
        public Font(System.Drawing.Font prototype, System.Drawing.FontStyle newStyle) { }
        public Font(System.Drawing.FontFamily family, float emSize) { }
        public Font(System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style) { }
        public Font(System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit) { }
        public Font(System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet) { }
        public Font(System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle st