remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value that indicates whether to publish service metadata for retrieval using an HTTPS/GET request.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the value of <see cref="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" /> is relative, the address at which the metadata is published is the base address and the service address plus a ?wsdl querystring. </para>
          <para>If the value of <see cref="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" /> is absolute the address at which the metadata is published is the value of <see cref="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" /> value plus a ?wsdl querystring. </para>
          <para>For example, if the service address is https://localhost:8080/CalculatorService and the <see cref="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" /> is an empty string, the HTTPS/GET metadata address is https://localhost:8080/CalculatorService?wsdl. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the location of metadata publication for HTTPS/GET requests.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MetadataExporter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.MetadataExporter MetadataExporter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.MetadataExporter MetadataExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="T:System.ServiceModel.Description.MetadataExporter" /> object to modify the publication of the service metadata.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the internal <see cref="T:System.ServiceModel.Description.MetadataExporter" /> object used to publish the service metadata.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MexContractName">
      <MemberSignature Language="C#" Value="public const string MexContractName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MexContractName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the string IMetadataContract.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that configures the underlying bindings to support the behavior.</para>
        </summary>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The service description to be configured.</param>
        <param name="serviceHostBase">
          <attribution license="cc4" from="Microsoft" modified="false" />The host of the service.</param>
        <param name="endpoints">
          <attribution license="cc4" from="Microsoft" modified="false" />The endpoints to be configured.</param>
        <param name="parameters">
          <attribution license="cc4" from="Microsoft" modified="false" />The binding parameters to be configured.</param>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that configures the underlying bindings to support the behavior on the service.</para>
        </summary>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The service description to be modified.</param>
        <param name="serviceHostBase">
          <attribution license="cc4" from="Microsoft" modified="false" />The host of the service.</param>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implementation of <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> that validates that the service description can support the behavior.</para>
        </summary>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The service description to be validated.</param>
        <param name="serviceHostBase">
          <attribution license="cc4" from="Microsoft" modified="false" />The host of the service.</param>
      </Docs>
    </Member>
  </Members>
</Type>                                      