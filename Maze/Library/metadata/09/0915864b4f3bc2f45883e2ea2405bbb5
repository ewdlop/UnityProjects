   <exception cref="System.IO.IOException">
          <para>
            An I/O error occurred while reading from the file system.
            [<see cref="F:Mono.Unix.Native.Errno.EIO" />]
          </para>
        </exception>
        <exception cref="System.IO.PathTooLongException">
          <para>
            A component of a pathname exceeded 255 characters,
            or an entire path name exceeded 1023 characters.
            [<see cref="F:Mono.Unix.Native.Errno.ENAMETOOLONG" />]
          </para>
        </exception>
        <exception cref="Mono.Unix.UnixIOException">
          <para>
            Search permission is denied for a component of the path prefix.
            [<see cref="F:Mono.Unix.Native.Errno.EACCES" />]
          </para>
          <para>-or-</para>
          <para>
            Too many symbolic links were encountered in translating the pathname.
            [<see cref="F:Mono.Unix.Native.Errno.ELOOP" />]
          </para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentsPath">
      <MemberSignature Language="C#" Value="public string ContentsPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentsPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          Gets the target of this symbolic link as a 
          <see cref="T:System.String" />.
        </summary>
        <value>
          A <see cref="T:System.String" /> containing the target of this
          symbolic link.
        </value>
        <remarks>
          <para>
            <block subset="none" type="note">
              The target may in turn be a symbolic link (nothing prevents
              symbolic links from referencing other symbolic links).
              To get the actual target, use
              <see cref="M:Mono.Unix.UnixPath.GetRealPath" /> or
              <see cref="M:Mono.Unix.UnixPath.GetCompleteRealPath" />.
            </block>
          </para>
        </remarks>
        <exception cref="System.ArgumentException">
          <para>
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
            is not a symbolic link.
            [<see cref="F:Mono.Unix.Native.Errno.EINVAL" />]
          </para>
        </exception>
        <exception cref="System.IO.DirectoryNotFoundException">
          <para>
            A component of 
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
            is not a directory.
            [<see cref="F:Mono.Unix.Native.Errno.ENOTDIR" />]
          </para>
        </exception>
        <exception cref="System.IO.FileNotFoundException">
          <para>
            <see cref="P:Mono.Unix.UnixFileSystemInfo.FullName" />
            [<see cref="F:Mono.Unix.Native.Errno.ENOENT" />]
          </para>
        </exception>
        <exception cref="System.IO.IOException">
          <para>
            An I/O error occurred while reading from the file system.
            [<see cref="F:Mono.Unix.Native.Errno.EIO" />]
          </para>
        </exception>
        <exception cref="System.IO.PathTooLongException">
          <para>
            A component of a pathname exceeded 255 characters,
            or an entire path name exceeded 1023 characters.
            [<see cref="F:Mono.Unix.Native.Errno.ENAMETOOLONG" />]
          </para>
        </exception>
        <exception cref="Mono.Unix.UnixIOException">
          <para>
            Search permission is denied for a component of the path prefix.
            [<see cref="F:Mono.Unix.Native.Errno.EACCES" />]
          </para>
          <para>-or-</para>
          <para>
            Too many symbolic links were encountered in translating the pathname.
            [<see cref="F:Mono.Unix.Native.Errno.ELOOP" />]
          </para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSymbolicLinkTo">
      <MemberSignature Language="C#" Value="public void CreateSymbolicLinkTo (Mono.Unix.UnixFileSystemInfo path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateSymbolicLinkTo(class Mono.Unix.UnixFileSystemInfo path) cil managed" />
      <M