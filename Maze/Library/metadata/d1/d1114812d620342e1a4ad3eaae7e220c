 menu of a control contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone, if the control was added to the page programmatically (rather than being declared in persistence format). Permanently deletes the control instance and any associated personalization data so that, unlike a closed control, the deleted instance can never be restored to the page.</para>
          </description>
        </item>
        <item>
          <term>
            <para>Edit verb</para>
          </term>
          <description>
            <para>Appears in the verbs menu of a control contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone, if the page is designed to permit editing of controls and if the page is in edit display mode. Selects the control for editing and opens the editing UI.</para>
          </description>
        </item>
        <item>
          <term>
            <para>Export verb</para>
          </term>
          <description>
            <para>Appears in the verbs menu of a control contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone, if the control and application are enabled for export. Opens a dialog box that enables users to export a description file that contains the serialized state of the control. For details, see the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" /> property. </para>
          </description>
        </item>
        <item>
          <term>
            <para>Help verb</para>
          </term>
          <description>
            <para>Appears in the verbs menu of a control contained in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone, if the control is designed to provide a Help file. Launches a page that provides help for the control.</para>
          </description>
        </item>
      </list>
      <para>Along with the standard verbs that are provided with the Web Parts control set, you can also create custom verbs. A common scenario for creating custom verbs is to create verbs associated with <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> controls. When you create these verbs, by default they will appear on the verbs menu along with the standard verbs. The basic approach for creating such verbs is to inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class to create one or more custom verbs. Then create a control that inherits from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> base class and add the custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objects to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> collection. This collection can then be added to the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" /> collection of the control, which will cause the custom verbs to appear automatically on the control's verbs menu at run time. As with the standard verbs, you can access the custom verbs programmatically on a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</para>
      <para>Web Parts applications can use server controls that do not inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> class, such as custom controls, user controls, or ASP.NET controls. These server controls, if added to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone, are dynamically wrapped with a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> object at run time, which enables them to function as run-time <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls. To add custom verbs to a server control that does not inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> class, the server control must implement the <see cref="T:System.Web.UI.WebControls.WebParts.IWebActionable" /> interface and override its <see cref="P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs" /> property. </para>
      <para>When you create a verb, you can create two types of associated event handlers that will run when a user clicks the verb: a server-side event handler (code that runs on the server), and a client-side event handler (code that runs in the client browser). Also, you can define custom states for verbs, which is a useful way to provide visual cues to users. For example, you could create a state indicating that a verb has been selected, and then provide appropriate changes in the UI to notify the user that the verb is already selected. Another useful behavior is the ability to disable verbs; by doing this, you can prevent users from clicking verbs if doing so would be harmful or ineffective based on the state of the application. </para>
      <para>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> class does not expose any unique methods; its exposed methods are all overrides of base methods. It does however contain a number of properties for developers to be aware of. The <see cref="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked" /> property indicates whether a verb is currently selected. The <see cref="P:System.Web.UI.WebControls.WebParts.WebPartVerb.ClientClickHandler" /> and <see cref="P:System.Web.UI.WebControls.WebParts.WebPartVerb.ServerClickHandler" /> properties refer to the respective handlers within the class (if any exist) for client and server click events. The <see cref="P:Syste