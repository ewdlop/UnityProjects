const*, unsigned int, unsigned int)
nvidia::apex::ConvexHullImpl::buildFromConvexMesh(physx::PxConvexMesh const*)
nvidia::apex::ConvexHullImpl::applyTransformation(physx::PxMat44 const&)
nvidia::apex::PxStreamFromFileBuf::~PxStreamFromFileBuf()
physx::general_PxIOStream2::PxMemoryBufferBase<physx::general_PxIOStream2::PxMemoryBufferAllocator>::~PxMemoryBufferBase()
nvidia::apex::ConvexHullImpl::buildFromPlanes(physx::PxPlane const*, unsigned int, float)
nvidia::apex::ConvexHullImpl::buildFromAABB(physx::PxBounds3 const&)
nvidia::apex::ConvexHullImpl::buildKDOP(void const*, unsigned int, unsigned int, physx::PxVec3 const*, unsigned int)
nvidia::apex::ConvexHullImpl::intersectPlaneSide(physx::PxPlane const&)
nvidia::apex::ConvexHullImpl::intersectHull(nvidia::apex::ConvexHullImpl const&)
nvidia::apex::GjkInternal::closestPtPointSegmentTesselation(float vector[4] const&, float vector[4] const&, float vector[4] const&, float vector[4] const&, float vector[4] const&, float vector[4] const&, unsigned int&, float vector[4]&, float vector[4]&)
nvidia::apex::GjkInternal::closestPtPointTriangleTesselation(float vector[4] const*, float vector[4] const*, float vector[4] const*, unsigned int const*, unsigned int&, float vector[4]&, float vector[4]&)
nvidia::apex::GjkInternal::closestPtPointTetrahedronTesselation(float vector[4]*, float vector[4]*, float vector[4]*, unsigned int&, float vector[4]&, float vector[4]&)
nvidia::apex::GjkInternal::Collide(float vector[4] const&, nvidia::apex::GjkInternal::ConvexV const&, physx::shdfnd::aos::Mat34V const&, nvidia::apex::GjkInternal::ConvexV const&, nvidia::apex::GjkInternal::Output&)
nvidia::apex::GjkInternal::CollidePoint(nvidia::apex::GjkInternal::ConvexV const&, float vector[4] const&, nvidia::apex::GjkInternal::Output&)
nvidia::apex::ConvexHullImpl::hullsInProximity(nvidia::apex::ConvexHullImpl const&, physx::PxTransform const&, physx::PxVec3 const&, nvidia::apex::ConvexHullImpl const&, physx::PxTransform const&, physx::PxVec3 const&, float, nvidia::apex::ConvexHullImpl::Separation*)
nvidia::apex::_arrayVec3ToVec4(physx::PxVec3 const*, float vector[4] const&, float vector[4]*, unsigned int)
nvidia::apex::_calcSeparation(nvidia::apex::GjkInternal::ConvexV const&, physx::PxTransform const&, physx::shdfnd::aos::Mat34V const&, nvidia::apex::GjkInternal::ConvexV const&, nvidia::apex::GjkInternal::Output const&, nvidia::apex::ConvexHullImpl::Separation&)
nvidia::apex::ConvexHullImpl::sphereInProximity(physx::PxTransform const&, physx::PxVec3 const&, physx::PxVec3 const&, float, float, nvidia::apex::ConvexHullImpl::Separation*)
nvidia::apex::ConvexHullImpl::intersects(physx::PxShape const&, physx::PxTransform const&, physx::PxVec3 const&, float) const
nvidia::apex::ConvexHullImpl::rayCast(float&, float&, physx::PxVec3 const&, physx::PxVec3 const&, physx::PxTransform const&, physx::PxVec3 const&, physx::PxVec3*) const
nvidia::apex::worldToLocalRay(physx::PxVec3&, physx::PxVec3&, physx::PxVec3 const&, physx::PxVec3 const&, physx::PxTransform const&, physx::PxVec3 const&)
nvidia::apex::ConvexHullImpl::obbSweep(float&, float&, physx::PxVec3 const&, physx::PxVec3 const&, physx::PxVec3 const*, physx::PxVec3 const&, physx::PxTransform const&, physx::PxVec3 const&, physx::PxVec3*) const
nvidia::apex::ConvexHullImpl::extent(float&, float&, physx::PxVec3 const&) const
nvidia::apex::ConvexHullImpl::fill(physx::shdfnd::Array<physx::PxVec3, physx::shdfnd::NamedAllocator>&, physx::PxTransform const&, physx::PxVec3 const&, float, float, unsigned int, bool) const
nvidia::apex::ConvexHullImpl::calculateCookedSizes(unsigned int&, unsigned int&, bool) const
physx::general_PxIOStream2::PxMemoryBufferBase<physx::general_PxIOStream2::PxMemoryBufferAllocator>::getFileLength() const
nvidia::apex::ConvexHullImpl::reduceByCooking()
nvidia::apex::ConvexHullImpl::reduceHull(unsigned int, unsigned int, unsigned int, bool)
nvidia::apex::ConvexHullImpl::createKDOPDirections(physx::shdfnd::Array<physx::PxVec3, physx::shdfnd::NamedAllocator>&, nvidia::apex::ConvexHullMethod::Enum)
nvidia::apex::createIndexStartLookup(physx::shdfnd::Array<unsigned int, physx::shdfnd::NamedAllocator>&, int, unsigned int, int*, unsigned int, unsigned int)
nvidia::apex::findIslands(physx::shdfnd::Array<physx::shdfnd::Array<