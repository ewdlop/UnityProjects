erty is set using the value specified in the configuration file. If the <see cref="Overload:System.Diagnostics.TraceSwitch.#ctor" /> constructor cannot find initial switch settings in the configuration file, the <see cref="P:System.Diagnostics.TraceSwitch.Level" /> of the new switch defaults to <see cref="F:System.Diagnostics.TraceLevel.Off" />.</para>
      <para>You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</para>
      <list type="bullet">
        <item>
          <para>To enable debugging in C#, add the /d:DEBUG flag to the compiler command line when you compile your code, or add #define DEBUG to the top of your file. In Visual Basic, add the /d:DEBUG=True flag to the compiler command line.</para>
        </item>
        <item>
          <para>To enable tracing in C#, add the /d:TRACE flag to the compiler command line when you compile your code, or add #define TRACE to the top of your file. In Visual Basic, add the /d:TRACE=True flag to the compiler command line.</para>
        </item>
      </list>
      <block subset="none" type="note">
        <para>These debug and trace compiler switches are not required when using the <see cref="T:System.Diagnostics.TraceSwitch" /> class in isolation. They are only required in conjunction with <see cref="T:System.Diagnostics.Trace" /> or <see cref="T:System.Diagnostics.Debug" /> methods that are conditionally compiled.</para>
      </block>
      <para>For more information on instrumenting your application, see <see cref="T:System.Diagnostics.Debug" /> and <see cref="T:System.Diagnostics.Trace" />. For more information about configuring and using trace switches, see <format type="text/html"><a href="8ab913aa-f400-4406-9436-f45bc6e54fbe">Trace Switches</a></format>.</para>
      <block subset="none" type="note">
        <para>To improve performance, you can make <see cref="T:System.Diagnostics.TraceSwitch" /> members static in your class.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides a multilevel switch to control tracing and debug output without recompiling your code.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>To set the level of your <see cref="T:System.Diagnostics.TraceSwitch" />, edit the configuration file that corresponds to the name of your application. In this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. The configuration file should be formatted like the following example: </para>
          <code>&lt;configuration&gt;
  &lt;system.diagnostics&gt;
    &lt;switches&gt;
      &lt;add name="mySwitch" value="1" /&gt;
    &lt;/switches&gt;
  &lt;/system.diagnostics&gt;
&lt;/configuration&gt;</code>
          <block subset="none" type="note">
            <para>In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, true for a <see cref="T:System.Diagnostics.BooleanSwitch" /> or the text representing an enumeration value, such as Error for a <see cref="T:System.Diagnostics.TraceSwitch" />. The line &lt;add name="mySwitch" value="Error" /&gt; is equivalent to &lt;add name="mySwitch" value="1" /&gt;.</para>
          </block>
          <para>In your application, you can use the configured switch level by creating a <see cref="T:System.Diagnostics.TraceSwitch" /> with the same name, as shown in the following example:</para>
          <para>code reference: Classic TraceSwitch.TraceError Example#3</para>
          <para>When the <see cref="Overload:System.Diagnostics.TraceSwitch.#ctor" /> constructor cannot find initial switch settings in the configuration file, the <see cref="P:System.Diagnostics.TraceSwitch.Level" /> property of the new switch is set to <see cref="F:System.Diagnostics.TraceLevel.Off" />.</para>
          <para>The <see cref="T:System.Diagnostics.TraceSwitch" /> class provides the <see cref="P:System.Diagnostics.TraceSwitch.TraceError" />, <see cref="P:System.Diagnostics.TraceSwitch.TraceWarning" />, <see cref="P:System.Diagnostics.TraceSwitch.TraceInfo" />, and <see cref="P:System.Diagnostics.TraceSwitch.TraceVerbose" /> properties to test the <see cref="P:System.Diagnostics.TraceSwitch.Level" /> of the switch. The <see cref="P:System.Diagnostics.TraceSwitch.Level" /> property gets or sets the switch's <see cref="T:System.Diagnostics.TraceLevel" />.</para>
          <block subset="none" type="note">
            <para>To improve performance, you can make <see cref="T:System.Diagnostics.TraceSwitch" /> members static in your class.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSwitch" /> class, using the specified display name and description.</para>
        </summary>
        <param name="displayName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name to display on a user interface. </param>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The description of the switch. </param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="displayName" /> parameter is used to set the value of the <see cref="P:System.Diagnostics.Switch.DisplayName" /> property, the <paramref name="description" /> parameter is use to set the value of the <see cref="P:System.Diagnostics.Switch.Description" /> property, and the <paramref name="defaultSwitchValue" /> parameter is saved as a field and used to initialize the <see cref="P:System.Diagnostics.Switch.Value" /> property on first reference. See the <see cref="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" /> constructor for more information and a code example.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSwitch" /> class, using the specified display name, des